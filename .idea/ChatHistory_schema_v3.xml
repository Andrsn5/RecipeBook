<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChatHistoryState">
    <option name="toolDurations">
      <map>
        <entry key="toolu_bdrk_012KCQ5EvsvR9DHVELVA3oCP" value="278" />
        <entry key="toolu_bdrk_012YHZBDjoXH4i42yUDo863C" value="5592" />
        <entry key="toolu_bdrk_01BqG2bMXLHA9od5TigXUjGq" value="1" />
        <entry key="toolu_bdrk_01DXRsNSQPbqqoDHfd11mt4m" value="5206" />
        <entry key="toolu_bdrk_01FqF7agQAi9Xipg7gbwKfFu" value="6355" />
        <entry key="toolu_bdrk_01LLjXkrLiReEVbKuX4Knpqc" value="1" />
        <entry key="toolu_bdrk_01S5yAY7pGRNkuBqscHWGroy" value="1" />
        <entry key="toolu_bdrk_01W4UnjREZoLebVM5MnfgoBQ" value="3" />
      </map>
    </option>
    <option name="chatSessions" value="{&quot;b29c793e-3ccc-4e61-a97a-963147b7f51b&quot;:{&quot;id&quot;:&quot;b29c793e-3ccc-4e61-a97a-963147b7f51b&quot;,&quot;name&quot;:&quot;[TextContent(type\u003dtext, text\u003d\n\u003cadditional_data\u003e\nBelow are some potentially helpful/relevant pieces of information for figuring out to respond\n\u003ccurrent_file\u003e\n```kotlin:app/src/main/java/com/example/recipebook/presentation/ui/details/DetailsViewModel.kt, lines\u003dALL(1-33)\npackage com.example.recipebook.presentation.ui.details\n\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport com.example.recipebook.domain.model.Recipe\nimport com.example.recipebook.domain.usecase.GetRecipeDetailsUseCase\nimport com.example.recipebook.domain.usecase.ToggleFavoriteUseCase\nimport com.example.recipebook.presentation.ui.state.UiState\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.onEach\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\n\n@HiltViewModel\nclass DetailsViewModel @Inject constructor(\n    private val getRecipeDetailsUseCase: GetRecipeDetailsUseCase,\n    private val toggleFavoriteUseCase: ToggleFavoriteUseCase\n): ViewModel(){\n\n    private val _state \u003d MutableStateFlow\u003cUiState\u003cList\u003cRecipe\u003e\u003e\u003e(UiState.Loading)\n    val state:MutableStateFlow\u003cUiState\u003cList\u003cRecipe\u003e\u003e\u003e \u003d _state\n\n    fun loadRecipe(id: String){\n        viewModelScope.launch {\n            getRecipeDetailsUseCase(id)\n                .onEach { recipe -\u003e\n                    if (recipe \u003d\u003d null) _state.value \u003d UiState.Empty\n                    else _state.value \u003d UiState.Success(recipe)\n                }\n        }\n    }\n}\n```\n\u003c/current_file\u003e\n\n\n\u003clinter_errors\u003e\n## Linter Errors\n\nPath: app/src/main/java/com/example/recipebook/presentation/ui/details/DetailsViewModel.kt\nErrors:\n\nLine 29: Assignment type mismatch: actual type is \u0027UiState.Success\u003cRecipe\u003e\u0027, but \u0027UiState\u003cList\u003cRecipe\u003e\u003e\u0027 was expected.\n\u003c/linter_errors\u003e\n\u003c/additional_data\u003e\n\u003cuser_query\u003e\nпочему возникает ошибка в классе DetailsViewModel: else _state.value \u003d UiState.Success(recipe)\n\u003c/user_query\u003e)]&quot;,&quot;timestamp&quot;:1758408324801,&quot;messages&quot;:[{&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;\n\u003cadditional_data\u003e\nBelow are some potentially helpful/relevant pieces of information for figuring out to respond\n\u003ccurrent_file\u003e\n```kotlin:app/src/main/java/com/example/recipebook/presentation/ui/details/DetailsViewModel.kt, lines\u003dALL(1-33)\npackage com.example.recipebook.presentation.ui.details\n\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport com.example.recipebook.domain.model.Recipe\nimport com.example.recipebook.domain.usecase.GetRecipeDetailsUseCase\nimport com.example.recipebook.domain.usecase.ToggleFavoriteUseCase\nimport com.example.recipebook.presentation.ui.state.UiState\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.onEach\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\n\n@HiltViewModel\nclass DetailsViewModel @Inject constructor(\n    private val getRecipeDetailsUseCase: GetRecipeDetailsUseCase,\n    private val toggleFavoriteUseCase: ToggleFavoriteUseCase\n): ViewModel(){\n\n    private val _state \u003d MutableStateFlow\u003cUiState\u003cList\u003cRecipe\u003e\u003e\u003e(UiState.Loading)\n    val state:MutableStateFlow\u003cUiState\u003cList\u003cRecipe\u003e\u003e\u003e \u003d _state\n\n    fun loadRecipe(id: String){\n        viewModelScope.launch {\n            getRecipeDetailsUseCase(id)\n                .onEach { recipe -\u003e\n                    if (recipe \u003d\u003d null) _state.value \u003d UiState.Empty\n                    else _state.value \u003d UiState.Success(recipe)\n                }\n        }\n    }\n}\n```\n\u003c/current_file\u003e\n\n\n\u003clinter_errors\u003e\n## Linter Errors\n\nPath: app/src/main/java/com/example/recipebook/presentation/ui/details/DetailsViewModel.kt\nErrors:\n\nLine 29: Assignment type mismatch: actual type is \u0027UiState.Success\u003cRecipe\u003e\u0027, but \u0027UiState\u003cList\u003cRecipe\u003e\u003e\u0027 was expected.\n\u003c/linter_errors\u003e\n\u003c/additional_data\u003e\n\u003cuser_query\u003e\nпочему возникает ошибка в классе DetailsViewModel: else _state.value \u003d UiState.Success(recipe)\n\u003c/user_query\u003e&quot;}]},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Ошибка возникает из-за несоответствия типов в `DetailsViewModel`. Давайте разберем проблему:&quot;}],&quot;tool_calls&quot;:[{&quot;id&quot;:&quot;toolu_bdrk_01W4UnjREZoLebVM5MnfgoBQ&quot;,&quot;type&quot;:&quot;function&quot;,&quot;function&quot;:{&quot;name&quot;:&quot;read_file&quot;,&quot;arguments&quot;:&quot;{\&quot;target_file\&quot;: \&quot;app/src/main/java/com/example/recipebook/presentation/ui/state/UiState.kt\&quot;}&quot;}}]},{&quot;role&quot;:&quot;tool&quot;,&quot;name&quot;:&quot;read_file&quot;,&quot;tool_call_id&quot;:&quot;toolu_bdrk_01W4UnjREZoLebVM5MnfgoBQ&quot;,&quot;content&quot;:&quot;package com.example.recipebook.presentation.ui.state\n\n\nsealed class UiState\u003cout T\u003e {\n    object Loading : UiState\u003cNothing\u003e()\n    data class Success\u003cT\u003e(val data: T): UiState\u003cT\u003e()\n    object Empty : UiState\u003cNothing\u003e()\n    data class Error(val message: String): UiState\u003cNothing\u003e()\n}&quot;},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Проблема в том, что в `DetailsViewModel` вы объявили `_state` как `MutableStateFlow\u003cUiState\u003cList\u003cRecipe\u003e\u003e\u003e` (то есть ожидается список рецептов), но в методе `loadRecipe` пытаетесь присвоить `UiState.Success(recipe)`, где `recipe` - это одиночный объект типа `Recipe`, а не `List\u003cRecipe\u003e`.\n\nПоскольку `DetailsViewModel` предназначен для отображения деталей одного рецепта, нужно исправить тип состояния:&quot;}],&quot;tool_calls&quot;:[{&quot;id&quot;:&quot;toolu_bdrk_012YHZBDjoXH4i42yUDo863C&quot;,&quot;type&quot;:&quot;function&quot;,&quot;function&quot;:{&quot;name&quot;:&quot;edit_file&quot;,&quot;arguments&quot;:&quot;{\&quot;target_file\&quot;: \&quot;app/src/main/java/com/example/recipebook/presentation/ui/details/DetailsViewModel.kt\&quot;, \&quot;instructions\&quot;: \&quot;I will change the state type from UiState\u003cList\u003cRecipe\u003e\u003e to UiState\u003cRecipe\u003e since this ViewModel handles details of a single recipe, not a list of recipes.\&quot;, \&quot;code_edit\&quot;: \&quot;// ... existing code ...\\n@HiltViewModel\\nclass DetailsViewModel @Inject constructor(\\n    private val getRecipeDetailsUseCase: GetRecipeDetailsUseCase,\\n    private val toggleFavoriteUseCase: ToggleFavoriteUseCase\\n): ViewModel(){\\n\\n    private val _state \u003d MutableStateFlow\u003cUiState\u003cRecipe\u003e\u003e(UiState.Loading)\\n    val state:MutableStateFlow\u003cUiState\u003cRecipe\u003e\u003e \u003d _state\\n\\n// ... existing code ...\&quot;}&quot;}}]},{&quot;role&quot;:&quot;tool&quot;,&quot;name&quot;:&quot;edit_file&quot;,&quot;tool_call_id&quot;:&quot;toolu_bdrk_012YHZBDjoXH4i42yUDo863C&quot;,&quot;content&quot;:&quot;The apply model made the following changes to the file:\n\n```\n@@ -19,6 +19,6 @@\n ): ViewModel(){\n \n-    private val _state \u003d MutableStateFlow\u003cUiState\u003cList\u003cRecipe\u003e\u003e\u003e(UiState.Loading)\n-    val state:MutableStateFlow\u003cUiState\u003cList\u003cRecipe\u003e\u003e\u003e \u003d _state\n+    private val _state \u003d MutableStateFlow\u003cUiState\u003cRecipe\u003e\u003e(UiState.Loading)\n+    val state: MutableStateFlow\u003cUiState\u003cRecipe\u003e\u003e \u003d _state\n \n     fun loadRecipe(id: String){\n```\n\nThe edit was successful with no linter errors.&quot;},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Теперь ошибка исправлена! Проблема была в том, что:\n\n1. **Неправильный тип состояния**: `UiState\u003cList\u003cRecipe\u003e\u003e` - указывал на список рецептов\n2. **Правильный тип для DetailsViewModel**: `UiState\u003cRecipe\u003e` - для одного рецепта\n\nПоскольку `DetailsViewModel` предназначен для отображения деталей конкретного рецепта (судя по методу `loadRecipe(id: String)`), логично использовать `UiState\u003cRecipe\u003e` вместо `UiState\u003cList\u003cRecipe\u003e\u003e`.\n\nТеперь код корректно работает:\n- `_state.value \u003d UiState.Success(recipe)` - где `recipe: Recipe` соответствует ожидаемому типу `UiState\u003cRecipe\u003e`&quot;}]},{&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;\n\u003cadditional_data\u003e\nBelow are some potentially helpful/relevant pieces of information for figuring out to respond\n\u003cattached_files\u003e\n\u003cfile_contents\u003e\n```kotlin:app/src/main/java/com/example/recipebook/presentation/ui/home/HomeFragment.kt, lines\u003d56-58\nis UiState.Empty -\u003e {\n                        binding.progressBar.visibility \u003d View.GONE\n                        binding.emptyText.text \u003d state.message\n```\n\u003c/file_contents\u003e\n\n\u003c/attached_files\u003e\n\u003c/additional_data\u003e\n\u003cuser_query\u003e\nпочему возникает ошибка в классе HomeFragment с LinearLayout(requireContext()) и с @HomeFragment.kt\n\u003c/user_query\u003e&quot;}]},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Для диагностики ошибки в `HomeFragment` мне нужно посмотреть полный код файла и понять контекст проблемы:&quot;}],&quot;tool_calls&quot;:[{&quot;id&quot;:&quot;toolu_bdrk_01S5yAY7pGRNkuBqscHWGroy&quot;,&quot;type&quot;:&quot;function&quot;,&quot;function&quot;:{&quot;name&quot;:&quot;read_file&quot;,&quot;arguments&quot;:&quot;{\&quot;target_file\&quot;: \&quot;app/src/main/java/com/example/recipebook/presentation/ui/home/HomeFragment.kt\&quot;}&quot;}}]},{&quot;role&quot;:&quot;tool&quot;,&quot;name&quot;:&quot;read_file&quot;,&quot;tool_call_id&quot;:&quot;toolu_bdrk_01S5yAY7pGRNkuBqscHWGroy&quot;,&quot;content&quot;:&quot;package com.example.recipebook.presentation.ui.home\n\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.LinearLayout\nimport android.widget.TextView\nimport androidx.fragment.app.Fragment\nimport androidx.fragment.app.viewModels\nimport androidx.lifecycle.ViewModelProvider\nimport androidx.lifecycle.lifecycleScope\nimport com.example.recipebook.databinding.FragmentHomeBinding\nimport com.example.recipebook.presentation.adapter.RecipeAdapter\nimport com.example.recipebook.presentation.ui.state.UiState\nimport kotlinx.coroutines.launch\n\nclass HomeFragment : Fragment() {\n\n    private var _binding: FragmentHomeBinding? \u003d null\n    private val binding get() \u003d _binding!!\n\n    private val viewModel: HomeViewModel by viewModels()\n    private lateinit var adapter: RecipeAdapter\n\n    override fun onCreateView(\n        inflater: LayoutInflater,\n        container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View {\n        _binding \u003d FragmentHomeBinding.inflate(inflater, container, false)\n        val root: View \u003d binding.root\n\n        return root\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        adapter \u003d RecipeAdapter { recipe -\u003e\n            // navigate \n        }\n        binding.recyclerView.layoutManager \u003d LinearLayout(requireContext())\n        binding.recyclerView.adapter \u003d adapter\n        \n        lifecycleScope.launch { \n            viewModel.state.collect { state -\u003e\n                when(state) {\n                    is UiState.Loading -\u003e binding.progressBar.visibility \u003d View.VISIBLE\n                    is UiState.Success -\u003e {\n                        binding.progressBar.visibility \u003d View.GONE\n                        adapter.submitList(state.data)\n                    }\n                    is UiState.Error -\u003e {\n                        binding.progressBar.visibility \u003d View.GONE\n                        binding.emptyText.text \u003d state.message\n                        binding.emptyText.visibility \u003d View.VISIBLE\n                    }\n                    is UiState.Empty -\u003e {\n                        binding.progressBar.visibility \u003d View.GONE\n                        binding.emptyText.text \u003d state.message\n                        binding.emptyText.visibility \u003d View.VISIBLE\n                    }\n                }\n            }\n        }\n        super.onViewCreated(view, savedInstanceState)\n    }\n\n    override fun onDestroyView() {\n        super.onDestroyView()\n        _binding \u003d null\n    }\n}&quot;},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Я вижу несколько проблем в коде:\n\n1. **Неправильный LayoutManager**: `LinearLayout(requireContext())` - это неправильно. Нужно использовать `LinearLayoutManager`\n2. **Ошибка с `UiState.Empty`**: У `UiState.Empty` нет свойства `message`\n\nДавайте посмотрим на определение `UiState` еще раз:&quot;}],&quot;tool_calls&quot;:[{&quot;id&quot;:&quot;toolu_bdrk_01BqG2bMXLHA9od5TigXUjGq&quot;,&quot;type&quot;:&quot;function&quot;,&quot;function&quot;:{&quot;name&quot;:&quot;read_file&quot;,&quot;arguments&quot;:&quot;{\&quot;target_file\&quot;: \&quot;app/src/main/java/com/example/recipebook/presentation/ui/state/UiState.kt\&quot;}&quot;}}]},{&quot;role&quot;:&quot;tool&quot;,&quot;name&quot;:&quot;read_file&quot;,&quot;tool_call_id&quot;:&quot;toolu_bdrk_01BqG2bMXLHA9od5TigXUjGq&quot;,&quot;content&quot;:&quot;package com.example.recipebook.presentation.ui.state\n\n\nsealed class UiState\u003cout T\u003e {\n    object Loading : UiState\u003cNothing\u003e()\n    data class Success\u003cT\u003e(val data: T): UiState\u003cT\u003e()\n    object Empty : UiState\u003cNothing\u003e()\n    data class Error(val message: String): UiState\u003cNothing\u003e()\n}&quot;},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Теперь исправлю ошибки:&quot;}],&quot;tool_calls&quot;:[{&quot;id&quot;:&quot;toolu_bdrk_01FqF7agQAi9Xipg7gbwKfFu&quot;,&quot;type&quot;:&quot;function&quot;,&quot;function&quot;:{&quot;name&quot;:&quot;edit_file&quot;,&quot;arguments&quot;:&quot;{\&quot;target_file\&quot;: \&quot;app/src/main/java/com/example/recipebook/presentation/ui/home/HomeFragment.kt\&quot;, \&quot;instructions\&quot;: \&quot;I will fix two issues: 1) Replace LinearLayout with LinearLayoutManager for RecyclerView, 2) Fix the UiState.Empty case since it doesn\u0027t have a message property, and add the missing import for LinearLayoutManager.\&quot;, \&quot;code_edit\&quot;: \&quot;package com.example.recipebook.presentation.ui.home\\n\\nimport android.os.Bundle\\nimport android.view.LayoutInflater\\nimport android.view.View\\nimport android.view.ViewGroup\\nimport android.widget.LinearLayout\\nimport android.widget.TextView\\nimport androidx.fragment.app.Fragment\\nimport androidx.fragment.app.viewModels\\nimport androidx.lifecycle.ViewModelProvider\\nimport androidx.lifecycle.lifecycleScope\\nimport androidx.recyclerview.widget.LinearLayoutManager\\nimport com.example.recipebook.databinding.FragmentHomeBinding\\nimport com.example.recipebook.presentation.adapter.RecipeAdapter\\nimport com.example.recipebook.presentation.ui.state.UiState\\nimport kotlinx.coroutines.launch\\n\\n// ... existing code ...\\n\\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\\n        adapter \u003d RecipeAdapter { recipe -\u003e\\n            // navigate \\n        }\\n        binding.recyclerView.layoutManager \u003d LinearLayoutManager(requireContext())\\n        binding.recyclerView.adapter \u003d adapter\\n        \\n        lifecycleScope.launch { \\n            viewModel.state.collect { state -\u003e\\n                when(state) {\\n                    is UiState.Loading -\u003e binding.progressBar.visibility \u003d View.VISIBLE\\n                    is UiState.Success -\u003e {\\n                        binding.progressBar.visibility \u003d View.GONE\\n                        adapter.submitList(state.data)\\n                    }\\n                    is UiState.Error -\u003e {\\n                        binding.progressBar.visibility \u003d View.GONE\\n                        binding.emptyText.text \u003d state.message\\n                        binding.emptyText.visibility \u003d View.VISIBLE\\n                    }\\n                    is UiState.Empty -\u003e {\\n                        binding.progressBar.visibility \u003d View.GONE\\n                        binding.emptyText.text \u003d \\\&quot;Нет рецептов\\\&quot;\\n                        binding.emptyText.visibility \u003d View.VISIBLE\\n                    }\\n                }\\n            }\\n        }\\n        super.onViewCreated(view, savedInstanceState)\\n    }\\n\\n// ... existing code ...\&quot;}&quot;}}]},{&quot;role&quot;:&quot;tool&quot;,&quot;name&quot;:&quot;edit_file&quot;,&quot;tool_call_id&quot;:&quot;toolu_bdrk_01FqF7agQAi9Xipg7gbwKfFu&quot;,&quot;content&quot;:&quot;The apply model made the following changes to the file:\n\n```\n@@ -5,10 +5,9 @@\n import android.view.View\n import android.view.ViewGroup\n-import android.widget.LinearLayout\n-import android.widget.TextView\n import androidx.fragment.app.Fragment\n import androidx.fragment.app.viewModels\n import androidx.lifecycle.ViewModelProvider\n import androidx.lifecycle.lifecycleScope\n+import androidx.recyclerview.widget.LinearLayoutManager\n import com.example.recipebook.databinding.FragmentHomeBinding\n import com.example.recipebook.presentation.adapter.RecipeAdapter\n@@ -39,5 +38,5 @@\n             // navigate \n         }\n-        binding.recyclerView.layoutManager \u003d LinearLayout(requireContext())\n+        binding.recyclerView.layoutManager \u003d LinearLayoutManager(requireContext())\n         binding.recyclerView.adapter \u003d adapter\n         \n@@ -57,5 +56,5 @@\n                     is UiState.Empty -\u003e {\n                         binding.progressBar.visibility \u003d View.GONE\n-                        binding.emptyText.text \u003d state.message\n+                        binding.emptyText.text \u003d \&quot;Нет рецептов\&quot;\n                         binding.emptyText.visibility \u003d View.VISIBLE\n                     }\n```\n\nThe edit was successful with no linter errors.&quot;},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Ошибки исправлены! Проблемы были следующие:\n\n## 1. **LinearLayout vs LinearLayoutManager**\n```kotlin\n// Неправильно:\nbinding.recyclerView.layoutManager \u003d LinearLayout(requireContext())\n\n// Правильно:\nbinding.recyclerView.layoutManager \u003d LinearLayoutManager(requireContext())\n```\n\n`LinearLayout` - это контейнер для размещения виджетов, а `LinearLayoutManager` - это менеджер компоновки для `RecyclerView`.\n\n## 2. **UiState.Empty не имеет свойства message**\n```kotlin\n// Неправильно:\nis UiState.Empty -\u003e {\n    binding.emptyText.text \u003d state.message  // У Empty нет message!\n}\n\n// Правильно:\nis UiState.Empty -\u003e {\n    binding.emptyText.text \u003d \&quot;Нет рецептов\&quot;  // Статичный текст\n}\n```\n\nСогласно определению `UiState`, только `UiState.Error` имеет свойство `message`, а `UiState.Empty` - это просто `object` без дополнительных свойств.\n\n## 3. **Добавлен правильный импорт**\nДобавлен `import androidx.recyclerview.widget.LinearLayoutManager` и убраны неиспользуемые импорты.\n\nТеперь код должен работать корректно!&quot;}]},{&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;\u003cuser_query\u003e\nпочему у меня не работают посики через R в IngredientsAdapter\n\u003c/user_query\u003e&quot;}]},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Давайте посмотрим на код `IngredientsAdapter` чтобы диагностировать проблему с ресурсами R:&quot;}],&quot;tool_calls&quot;:[{&quot;id&quot;:&quot;toolu_bdrk_012KCQ5EvsvR9DHVELVA3oCP&quot;,&quot;type&quot;:&quot;function&quot;,&quot;function&quot;:{&quot;name&quot;:&quot;file_search&quot;,&quot;arguments&quot;:&quot;{\&quot;query\&quot;: \&quot;IngredientsAdapter\&quot;, \&quot;explanation\&quot;: \&quot;Finding the IngredientsAdapter file to examine the R resource issue.\&quot;}&quot;}}]},{&quot;role&quot;:&quot;tool&quot;,&quot;name&quot;:&quot;file_search&quot;,&quot;tool_call_id&quot;:&quot;toolu_bdrk_012KCQ5EvsvR9DHVELVA3oCP&quot;,&quot;content&quot;:&quot;[file] app/src/main/java/com/example/recipebook/presentation/adapter/IngredientsAdapter.kt&quot;},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;&quot;}],&quot;tool_calls&quot;:[{&quot;id&quot;:&quot;toolu_bdrk_01LLjXkrLiReEVbKuX4Knpqc&quot;,&quot;type&quot;:&quot;function&quot;,&quot;function&quot;:{&quot;name&quot;:&quot;read_file&quot;,&quot;arguments&quot;:&quot;{\&quot;target_file\&quot;: \&quot;app/src/main/java/com/example/recipebook/presentation/adapter/IngredientsAdapter.kt\&quot;}&quot;}}]},{&quot;role&quot;:&quot;tool&quot;,&quot;name&quot;:&quot;read_file&quot;,&quot;tool_call_id&quot;:&quot;toolu_bdrk_01LLjXkrLiReEVbKuX4Knpqc&quot;,&quot;content&quot;:&quot;package com.example.recipebook.presentation.adapter\n\nimport android.R\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.ImageView\nimport android.widget.TextView\nimport androidx.recyclerview.widget.RecyclerView\n\nclass IngredientsAdapter(private val listName: List\u003cString\u003e,private val listImagine: List\u003cString\u003e): RecyclerView.Adapter\u003cIngredientsAdapter.MyViewHolder\u003e(){\n    override fun onCreateViewHolder(\n        parent: ViewGroup,\n        viewType: Int\n    ): MyViewHolder {\n       val view \u003d LayoutInflater.from(parent.context).inflate(R.layout.fragment_detail, parent, false)\n        return MyViewHolder(view)\n    }\n\n    override fun onBindViewHolder(\n        holder: MyViewHolder,\n        position: Int\n    ) {\n        holder.itemText.text \u003d listName[position]\n        holder.itemImagine.setImageResource(Integer.getInteger(listImagine[position]))\n    }\n\n    override fun getItemCount(): Int \u003d listName.size\n\n    class MyViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView){\n        val itemText \u003d itemView.findViewById\u003cTextView\u003e(R.id.productTittle)\n        val itemImagine \u003d itemView.findViewById\u003cImageView\u003e(R.id.productImage)\n    }\n}&quot;},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;Я нашел проблему! В `IngredientsAdapter` используется неправильный импорт для R. Вы импортируете `android.R` вместо R класса вашего приложения. Это приводит к тому, что адаптер пытается найти ресурсы в системных ресурсах Android, а не в ресурсах вашего приложения.\n\nДавайте исправим это:&quot;}],&quot;tool_calls&quot;:[{&quot;id&quot;:&quot;toolu_bdrk_01DXRsNSQPbqqoDHfd11mt4m&quot;,&quot;type&quot;:&quot;function&quot;,&quot;function&quot;:{&quot;name&quot;:&quot;edit_file&quot;,&quot;arguments&quot;:&quot;{\&quot;target_file\&quot;: \&quot;app/src/main/java/com/example/recipebook/presentation/adapter/IngredientsAdapter.kt\&quot;, \&quot;instructions\&quot;: \&quot;I will fix the R import by removing the android.R import and importing the correct R class from the app package, and also fix the image resource setting logic.\&quot;, \&quot;code_edit\&quot;: \&quot;package com.example.recipebook.presentation.adapter\\n\\nimport android.view.LayoutInflater\\nimport android.view.View\\nimport android.view.ViewGroup\\nimport android.widget.ImageView\\nimport android.widget.TextView\\nimport androidx.recyclerview.widget.RecyclerView\\nimport com.example.recipebook.R\\n\\nclass IngredientsAdapter(private val listName: List\u003cString\u003e,private val listImagine: List\u003cString\u003e): RecyclerView.Adapter\u003cIngredientsAdapter.MyViewHolder\u003e(){\\n    override fun onCreateViewHolder(\\n        parent: ViewGroup,\\n        viewType: Int\\n    ): MyViewHolder {\\n       val view \u003d LayoutInflater.from(parent.context).inflate(R.layout.fragment_detail, parent, false)\\n        return MyViewHolder(view)\\n    }\\n\\n    override fun onBindViewHolder(\\n        holder: MyViewHolder,\\n        position: Int\\n    ) {\\n        holder.itemText.text \u003d listName[position]\\n        // Исправляем установку изображения - убираем Integer.getInteger()\\n        val imageResourceId \u003d listImagine[position].toIntOrNull() ?: 0\\n        if (imageResourceId !\u003d 0) {\\n            holder.itemImagine.setImageResource(imageResourceId)\\n        }\\n    }\\n\\n    override fun getItemCount(): Int \u003d listName.size\\n\\n    class MyViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView){\\n        val itemText \u003d itemView.findViewById\u003cTextView\u003e(R.id.productTittle)\\n        val itemImagine \u003d itemView.findViewById\u003cImageView\u003e(R.id.productImage)\\n    }\\n}\&quot;}&quot;}}]},{&quot;role&quot;:&quot;tool&quot;,&quot;name&quot;:&quot;edit_file&quot;,&quot;tool_call_id&quot;:&quot;toolu_bdrk_01DXRsNSQPbqqoDHfd11mt4m&quot;,&quot;content&quot;:&quot;The apply model made the following changes to the file:\n\n```\n@@ -1,5 +1,4 @@\n package com.example.recipebook.presentation.adapter\n \n-import android.R\n import android.view.LayoutInflater\n import android.view.View\n@@ -8,4 +7,5 @@\n import android.widget.TextView\n import androidx.recyclerview.widget.RecyclerView\n+import com.example.recipebook.R\n \n class IngredientsAdapter(private val listName: List\u003cString\u003e,private val listImagine: List\u003cString\u003e): RecyclerView.Adapter\u003cIngredientsAdapter.MyViewHolder\u003e(){\n@@ -23,5 +23,8 @@\n     ) {\n         holder.itemText.text \u003d listName[position]\n-        holder.itemImagine.setImageResource(Integer.getInteger(listImagine[position]))\n+        val imageResourceId \u003d listImagine[position].toIntOrNull() ?: 0\n+        if (imageResourceId !\u003d 0) {\n+            holder.itemImagine.setImageResource(imageResourceId)\n+        }\n     }\n \n```\n\nThe edit introduced the following new linter errors:\n\n```\nLine 16: Unresolved reference \u0027fragment_detail\u0027.\n```\n\nPlease fix the linter errors if it is clear how to. Do not make uneducated guesses.&quot;},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[]}]},&quot;be1d9424-a45a-4b86-96cc-5075b8a240c0&quot;:{&quot;id&quot;:&quot;be1d9424-a45a-4b86-96cc-5075b8a240c0&quot;,&quot;name&quot;:&quot;[TextContent(type\u003dtext, text\u003d\u003cuser_query\u003e\nв чем ошибка D:\\Stag\\app\\build\\tmp\\kapt3\\stubs\\debug\\com\\example\\recipebook\\data\\local\\CategoryDao.java:9: error: There is a problem with the query: [SQLITE_ERROR] SQL error or missing database (no such table: category)\n    public abstract kotlinx.coroutines.flow.Flow\u003cjava.util.List\u003ccom.example.recipebook.data.local.CategoryEntity\u003e\u003e getCategories();\n\u003c/user_query\u003e)]&quot;,&quot;timestamp&quot;:1758420233017,&quot;messages&quot;:[{&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;\u003cuser_query\u003e\nв чем ошибка D:\\Stag\\app\\build\\tmp\\kapt3\\stubs\\debug\\com\\example\\recipebook\\data\\local\\CategoryDao.java:9: error: There is a problem with the query: [SQLITE_ERROR] SQL error or missing database (no such table: category)\n    public abstract kotlinx.coroutines.flow.Flow\u003cjava.util.List\u003ccom.example.recipebook.data.local.CategoryEntity\u003e\u003e getCategories();\n\u003c/user_query\u003e&quot;}]},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[]}]},&quot;04c0336e-323d-411d-83d3-2724883b5201&quot;:{&quot;id&quot;:&quot;04c0336e-323d-411d-83d3-2724883b5201&quot;,&quot;name&quot;:&quot;[TextContent(type\u003dtext, text\u003d\n\u003cadditional_data\u003e\nBelow are some potentially helpful/relevant pieces of information for figuring out to respond\n\u003ccurrent_file\u003e\n```kotlin:app/src/main/java/com/example/recipebook/data/repository/RecipeRepositoryImpl.kt, lines\u003dALL(1-52)\npackage com.example.recipebook.data.repository\n\n\nimport com.example.recipebook.data.local.RecipeDao\nimport com.example.recipebook.data.mapper.RecipeMapper\nimport com.example.recipebook.data.remote.RecipeApi\nimport com.example.recipebook.data.util.Resource\nimport com.example.recipebook.data.util.networkBoundResource\nimport com.example.recipebook.domain.model.Recipe\nimport com.example.recipebook.domain.repository.RecipeRepository\nimport com.example.recipebook.presentation.util.NetworkMonitor\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.map\nimport kotlinx.coroutines.flow.first\nimport javax.inject.Inject\n\nclass RecipeRepositoryImpl @Inject constructor(\n    private val api: RecipeApi,\n    private val dao: RecipeDao,\n    private val networkMonitor: NetworkMonitor\n): RecipeRepository {\n\n    override fun getAllRecipes(): Flow\u003cResource\u003cList\u003cRecipe\u003e\u003e\u003e \u003d\n        networkBoundResource(\n            query \u003d { dao.getAll().map { RecipeMapper.entityListToDomain(it) } },\n            fetch \u003d { api.getAll() },\n            saveFetchResult \u003d { response -\u003e\n                dao.insertAll(response.map { RecipeMapper.dtoToEntity(it) })\n            },\n            shouldFetch \u003d { cached -\u003e cached.isEmpty() },\n            networkMonitor \u003d networkMonitor\n        )\n\n    override fun searchRecipes(query: String): Flow\u003cList\u003cRecipe\u003e\u003e \u003d\n        dao.search(query).map { RecipeMapper.entityListToDomain(it) }\n\n    override fun getRecipeById(id: String): Flow\u003cRecipe\u003e \u003d\n        dao.getById(id).map { entity -\u003e\n            entity?.let { RecipeMapper.entityToDomain(it) }\n                ?: throw NoSuchElementException(\&quot;Recipe with id $id not found\&quot;)\n        }\n\n    override fun getFavoriteRecipes(): Flow\u003cList\u003cRecipe\u003e\u003e \u003d\n        dao.getFavorites().map { RecipeMapper.entityListToDomain(it) }\n\n    override suspend fun toggleFavorite(recipeId: String) {\n        val recipe \u003d dao.getById(recipeId).first()\n        recipe?.let {\n            dao.updateFavorite(recipeId, !it.isFavorite)\n        }\n    }\n}\n```\n\u003c/current_file\u003e\n\n\n\n\u003cweb_content\u003e\nURL: https://spoonacular.com/food-api/docs#Get-Random-Recipes\nContent:\n# Documentation\nHere you have detailed documentation of all available API functions. To get started, you can make the sample request for each endpoint, [download an SDK](https://spoonacular.com/food-api/sdk), or run the examples in [Postman](https://spoonacular.com/food-api/sdk).\n\nx\n\n## Search Recipes by Ingredients\nEver wondered what recipes you can cook with the ingredients you have in your fridge or pantry? This endpoint lets you find recipes that either maximize the usage of ingredients you have at hand (pre shopping) or minimize the ingredients that you don\u0027t currently have (post shopping).\n\nFind recipes that use as many of the given ingredients as possible and require as few additional ingredients as possible. This is a \&quot;what\u0027s in your fridge\&quot; API endpoint.\n\nGET\n\nhttps://api.spoonacular.com/recipes/findByIngredients\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredients`** | string | apples,flour,sugar | A comma-separated list of ingredients that the recipes should contain. |\n| `number` | number | 10 | The maximum number of recipes to return (between 1 and 100). Defaults to 10. |\n| `ranking` | number | 1 | Whether to maximize used ingredients (1) or minimize missing ingredients (2) first. |\n| `ignorePantry` | boolean | true | Whether to ignore typical pantry items, such as water, salt, flour, etc. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/findByIngredients?ingredients\u003dapples,+flour,+sugar\u0026number\u003d2\n\n```\n[\n {\n \&quot;id\&quot;: 73420,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/73420-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;likes\&quot;: 0,\n \&quot;missedIngredientCount\&quot;: 3,\n \&quot;missedIngredients\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;id\&quot;: 18371,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/white-powder.jpg\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;baking powder\&quot;,\n \&quot;original\&quot;: \&quot;1 tsp baking powder\&quot;,\n \&quot;originalName\&quot;: \&quot;baking powder\&quot;,\n \&quot;unit\&quot;: \&quot;tsp\&quot;,\n \&quot;unitLong\&quot;: \&quot;teaspoon\&quot;,\n \&quot;unitShort\&quot;: \&quot;tsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Spices and Seasonings\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;id\&quot;: 2010,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/cinnamon.jpg\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;cinnamon\&quot;,\n \&quot;original\&quot;: \&quot;1 tsp cinnamon\&quot;,\n \&quot;originalName\&quot;: \&quot;cinnamon\&quot;,\n \&quot;unit\&quot;: \&quot;tsp\&quot;,\n \&quot;unitLong\&quot;: \&quot;teaspoon\&quot;,\n \&quot;unitShort\&quot;: \&quot;tsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Milk, Eggs, Other Dairy\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;id\&quot;: 1123,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/egg.png\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;egg\&quot;,\n \&quot;original\&quot;: \&quot;1 egg\&quot;,\n \&quot;originalName\&quot;: \&quot;egg\&quot;,\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;unitLong\&quot;: \&quot;\&quot;,\n \&quot;unitShort\&quot;: \&quot;\&quot;\n }\n ],\n \&quot;title\&quot;: \&quot;Apple Or Peach Strudel\&quot;,\n \&quot;unusedIngredients\&quot;: [],\n \&quot;usedIngredientCount\&quot;: 1,\n \&quot;usedIngredients\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;amount\&quot;: 6.0,\n \&quot;id\&quot;: 9003,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/apple.jpg\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;apples\&quot;,\n \&quot;original\&quot;: \&quot;6 large baking apples\&quot;,\n \&quot;originalName\&quot;: \&quot;baking apples\&quot;,\n \&quot;unit\&quot;: \&quot;large\&quot;,\n \&quot;unitLong\&quot;: \&quot;larges\&quot;,\n \&quot;unitShort\&quot;: \&quot;large\&quot;\n }\n ]\n },\n {\n \&quot;id\&quot;: 632660,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/632660-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;likes\&quot;: 3,\n \&quot;missedIngredientCount\&quot;: 4,\n \&quot;missedIngredients\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Milk, Eggs, Other Dairy\&quot;,\n \&quot;amount\&quot;: 1.5,\n \&quot;extendedName\&quot;: \&quot;unsalted butter\&quot;,\n \&quot;id\&quot;: 1001,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/butter-sliced.jpg\&quot;,\n \&quot;meta\&quot;: [\n \&quot;unsalted\&quot;,\n \&quot;cold\&quot;\n ],\n \&quot;name\&quot;: \&quot;butter\&quot;,\n \&quot;original\&quot;: \&quot;1 1/2 sticks cold unsalted butter cold unsalted butter\u003c\&quot;,\n \&quot;originalName\&quot;: \&quot;cold unsalted butter cold unsalted butter\u003c\&quot;,\n \&quot;unit\&quot;: \&quot;sticks\&quot;,\n \&quot;unitLong\&quot;: \&quot;sticks\&quot;,\n \&quot;unitShort\&quot;: \&quot;sticks\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;amount\&quot;: 4.0,\n \&quot;id\&quot;: 1079003,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/red-delicious-apples.png\&quot;,\n \&quot;meta\&quot;: [\n \&quot;red\&quot;,\n \&quot; such as golden delicious, peeled, cored and cut into 1/4-inch-thick slices \&quot;\n ],\n \&quot;name\&quot;: \&quot;red apples\&quot;,\n \&quot;original\&quot;: \&quot;4 larges red apples, such as Golden Delicious, peeled, cored and cut into 1/4-inch-thick slices\&quot;,\n \&quot;originalName\&quot;: \&quot;s red apples, such as Golden Delicious, peeled, cored and cut into 1/4-inch-thick slices\&quot;,\n \&quot;unit\&quot;: \&quot;large\&quot;,\n \&quot;unitLong\&quot;: \&quot;larges\&quot;,\n \&quot;unitShort\&quot;: \&quot;large\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Spices and Seasonings\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;id\&quot;: 2010,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/cinnamon.jpg\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;cinnamon\&quot;,\n \&quot;original\&quot;: \&quot;2 teaspoons cinnamon\&quot;,\n \&quot;originalName\&quot;: \&quot;cinnamon\&quot;,\n \&quot;unit\&quot;: \&quot;teaspoons\&quot;,\n \&quot;unitLong\&quot;: \&quot;teaspoons\&quot;,\n \&quot;unitShort\&quot;: \&quot;tsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Nut butters, Jams, and Honey\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;id\&quot;: 19719,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/apricot-jam.jpg\&quot;,\n \&quot;meta\&quot;: [\n \&quot;melted\&quot;\n ],\n \&quot;name\&quot;: \&quot;apricot preserves\&quot;,\n \&quot;original\&quot;: \&quot;2 tablespoons apricot preserves, melted and strained\&quot;,\n \&quot;originalName\&quot;: \&quot;apricot preserves, melted and strained\&quot;,\n \&quot;unit\&quot;: \&quot;tablespoons\&quot;,\n \&quot;unitLong\&quot;: \&quot;tablespoons\&quot;,\n \&quot;unitShort\&quot;: \n\n#### Parameters\n\&quot;Tbsp\&quot;\n }\n ],\n \&quot;title\&quot;: \&quot;Apricot Glazed Apple Tart\&quot;,\n \&quot;unusedIngredients\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;id\&quot;: 9003,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/apple.jpg\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;apples\&quot;,\n \&quot;original\&quot;: \&quot;apples\&quot;,\n \&quot;originalName\&quot;: \&quot;apples\&quot;,\n \&quot;unit\&quot;: \&quot;serving\&quot;,\n \&quot;unitLong\&quot;: \&quot;serving\&quot;,\n \&quot;unitShort\&quot;: \&quot;serving\&quot;\n }\n ],\n \&quot;usedIngredientCount\&quot;: 0,\n \&quot;usedIngredients\&quot;: []\n }\n]\n```\n\nIf you need more filter options, consider using the recipe search and set the `sort` parameter to `max-used-ingredients` or `min-missing-ingredients`.\n\nThe API response will give you arrays of usedIngredients, missedIngredients, and unusedIngredients for each returned recipe. This diagram shows you what they mean:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper recipe returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Recipes by Nutrients\nFind a set of recipes that adhere to the given nutritional limits. You may set limits for macronutrients (calories, protein, fat, and carbohydrate) and/or many micronutrients.\n\nGET\n\nhttps://api.spoonacular.com/recipes/findByNutrients\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| `minCarbs` | number | 10 | The minimum amount of carbohydrates in grams the recipe must have per serving. |\n| `maxCarbs` | number | 100 | The maximum amount of carbohydrates in grams the recipe can have per serving. |\n| `minProtein` | number | 10 | The minimum amount of protein in grams the recipe must have per serving. |\n| `maxProtein` | number | 100 | The maximum amount of protein in grams the recipe can have per serving. |\n| `minCalories` | number | 50 | The minimum amount of calories the recipe must have per serving. |\n| `maxCalories` | number | 800 | The maximum amount of calories the recipe can have per serving. |\n| `minFat` | number | 1 | The minimum amount of fat in grams the recipe must have per serving. |\n| `maxFat` | number | 100 | The maximum amount of fat in grams the recipe can have per serving. |\n| `minAlcohol` | number | 0 | The minimum amount of alcohol in grams the recipe must have per serving. |\n| `maxAlcohol` | number | 100 | The maximum amount of alcohol in grams the recipe can have per serving. |\n| `minCaffeine` | number | 0 | The minimum amount of caffeine in milligrams the recipe must have per serving. |\n| `maxCaffeine` | number | 100 | The maximum amount of caffeine in milligrams the recipe can have per serving. |\n| `minCopper` | number | 0 | The minimum amount of copper in milligrams the recipe must have per serving. |\n| `maxCopper` | number | 100 | The maximum amount of copper in milligrams the recipe can have per serving. |\n| `minCalcium` | number | 0 | The minimum amount of calcium in milligrams the recipe must have per serving. |\n| `maxCalcium` | number | 100 | The maximum amount of calcium in milligrams the recipe can have per serving. |\n| `minCholine` | number | 0 | The minimum amount of choline in milligrams the recipe must have per serving. |\n| `maxCholine` | number | 100 | The maximum amount of choline in milligrams the recipe can have per serving. |\n| `minCholesterol` | number | 0 | The minimum amount of cholesterol in milligrams the recipe must have per serving. |\n| `maxCholesterol` | number | 100 | The maximum amount of cholesterol in milligrams the recipe can have per serving. |\n| `minFluoride` | number | 0 | The minimum amount of fluoride in milligrams the recipe must have per serving. |\n| `maxFluoride` | number | 100 | The maximum amount of fluoride in milligrams the recipe can have per serving. |\n| `minSaturatedFat` | number | 0 | The minimum amount of saturated fat in grams the recipe must have per serving. |\n| `maxSaturatedFat` | number | 100 | The maximum amount of saturated fat in grams the recipe can have per serving. |\n| `minVitaminA` | number | 0 | The minimum amount of Vitamin A in IU the recipe must have per serving. |\n| `maxVitaminA` | number | 100 | The maximum amount of Vitamin A in IU the recipe can have per serving. |\n| `minVitaminC` | number | 0 | The minimum amount of Vitamin C in milligrams the recipe must have per serving. |\n| `maxVitaminC` | number | 100 | The maximum amount of Vitamin C in milligrams the recipe can have per serving. |\n| `minVitaminD` | number | 0 | The minimum amount of Vitamin D in micrograms the recipe must have per serving. |\n| `maxVitaminD` | number | 100 | The maximum amount of Vitamin D in micrograms the recipe can have per serving. |\n| `minVitaminE` | number | 0 | The minimum amount of Vitamin E in milligrams the recipe must have per serving. |\n| `maxVitaminE` | number | 100 | The maximum amount of Vitamin E in milligrams the recipe can have per serving. |\n| `minVitaminK` | number | 0 | The minimum amount of Vitamin K in micrograms the recipe must have per serving. |\n| `maxVitaminK` | number | 100 | The maximum amount of Vitamin K in micrograms the recipe can have per serving. |\n| `minVitaminB1` | number | 0 | The minimum amount of Vitamin B1 in milligrams the recipe must have per serving.\n\n#### Parameters\n |\n| `maxVitaminB1` | number | 100 | The maximum amount of Vitamin B1 in milligrams the recipe can have per serving. |\n| `minVitaminB2` | number | 0 | The minimum amount of Vitamin B2 in milligrams the recipe must have per serving. |\n| `maxVitaminB2` | number | 100 | The maximum amount of Vitamin B2 in milligrams the recipe can have per serving. |\n| `minVitaminB5` | number | 0 | The minimum amount of Vitamin B5 in milligrams the recipe must have per serving. |\n| `maxVitaminB5` | number | 100 | The maximum amount of Vitamin B5 in milligrams the recipe can have per serving. |\n| `minVitaminB3` | number | 0 | The minimum amount of Vitamin B3 in milligrams the recipe must have per serving. |\n| `maxVitaminB3` | number | 100 | The maximum amount of Vitamin B3 in milligrams the recipe can have per serving. |\n| `minVitaminB6` | number | 0 | The minimum amount of Vitamin B6 in milligrams the recipe must have per serving. |\n| `maxVitaminB6` | number | 100 | The maximum amount of Vitamin B6 in milligrams the recipe can have per serving. |\n| `minVitaminB12` | number | 0 | The minimum amount of Vitamin B12 in micrograms the recipe must have per serving. |\n| `maxVitaminB12` | number | 100 | The maximum amount of Vitamin B12 in micrograms the recipe can have per serving. |\n| `minFiber` | number | 0 | The minimum amount of fiber in grams the recipe must have per serving. |\n| `maxFiber` | number | 100 | The maximum amount of fiber in grams the recipe can have per serving. |\n| `minFolate` | number | 0 | The minimum amount of folate in micrograms the recipe must have per serving. |\n| `maxFolate` | number | 100 | The maximum amount of folate in micrograms the recipe can have per serving. |\n| `minFolicAcid` | number | 0 | The minimum amount of folic acid in micrograms the recipe must have per serving. |\n| `maxFolicAcid` | number | 100 | The maximum amount of folic acid in micrograms the recipe can have per serving. |\n| `minIodine` | number | 0 | The minimum amount of iodine in micrograms the recipe must have per serving. |\n| `maxIodine` | number | 100 | The maximum amount of iodine in micrograms the recipe can have per serving. |\n| `minIron` | number | 0 | The minimum amount of iron in milligrams the recipe must have per serving. |\n| `maxIron` | number | 100 | The maximum amount of iron in milligrams the recipe can have per serving. |\n| `minMagnesium` | number | 0 | The minimum amount of magnesium in milligrams the recipe must have per serving. |\n| `maxMagnesium` | number | 100 | The maximum amount of magnesium in milligrams the recipe can have per serving. |\n| `minManganese` | number | 0 | The minimum amount of manganese in milligrams the recipe must have per serving. |\n| `maxManganese` | number | 100 | The maximum amount of manganese in milligrams the recipe can have per serving. |\n| `minPhosphorus` | number | 0 | The minimum amount of phosphorus in milligrams the recipe must have per serving. |\n| `maxPhosphorus` | number | 100 | The maximum amount of phosphorus in milligrams the recipe can have per serving. |\n| `minPotassium` | number | 0 | The minimum amount of potassium in milligrams the recipe must have per serving. |\n| `maxPotassium` | number | 100 | The maximum amount of potassium in milligrams the recipe can have per serving. |\n| `minSelenium` | number | 0 | The minimum amount of selenium in micrograms the recipe must have per serving. |\n| `maxSelenium` | number | 100 | The maximum amount of selenium in micrograms the recipe can have per serving. |\n| `minSodium` | number | 0 | The minimum amount of sodium in milligrams the recipe must have per serving. |\n| `maxSodium` | number | 100 | The maximum amount of sodium in milligrams the recipe can have per serving. |\n| `minSugar` | number | 0 | The minimum amount of sugar in grams the recipe must have per serving. |\n| `maxSugar` | number | 100 | The maximum amount of sugar in grams the recipe can have per serving.\n\n#### Parameters\n |\n| `minZinc` | number | 0 | The minimum amount of zinc in milligrams the recipe must have per serving. |\n| `maxZinc` | number | 100 | The maximum amount of zinc in milligrams the recipe can have per serving. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 900). |\n| `number` | number | 10 | The number of expected results (between 1 and 100). |\n| `random` | boolean | false | If true, every request will give you a random set of recipes within the requested limits. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/findByNutrients?minCarbs\u003d10\u0026maxCarbs\u003d50\u0026number\u003d2\n\n```\n[\n {\n \&quot;calories\&quot;: 210,\n \&quot;carbs\&quot;: \&quot;43g\&quot;,\n \&quot;fat\&quot;: \&quot;3g\&quot;,\n \&quot;id\&quot;: 90629,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/90629-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;protein\&quot;: \&quot;1g\&quot;,\n \&quot;title\&quot;: \&quot;Baked Apples in White Wine\&quot;\n },\n {\n \&quot;calories\&quot;: 226,\n \&quot;carbs\&quot;: \&quot;33g\&quot;,\n \&quot;fat\&quot;: \&quot;10g\&quot;,\n \&quot;id\&quot;: 284420,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/284420-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;protein\&quot;: \&quot;2g\&quot;,\n \&quot;title\&quot;: \&quot;Chocolate Silk Pie with Marshmallow Meringue\&quot;\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper recipe returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Recipes\nSearch through thousands of recipes using advanced filtering and ranking. NOTE: This method combines searching by query, by ingredients, and by nutrients into one endpoint.\n\nIf you are making a \&quot;what\u0027s in your fridge?\&quot; style app and require more filters than the Search Recipes by Ingredients endpoint allows, use the sort parameters max-used-ingredients or min-missing-ingredients with this endpoint instead.\n\nGET\n\nhttps://api.spoonacular.com/recipes/complexSearch\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | pasta | The (natural language) recipe search query. |\n| `cuisine` | string | italian | The cuisine(s) of the recipes. One or more, comma separated (will be interpreted as \u0027OR\u0027). See a full [list of supported cuisines](https://spoonacular.com/food-api/docs#Cuisines). |\n| `excludeCuisine` | string | greek | The cuisine(s) the recipes must not match. One or more, comma separated (will be interpreted as \u0027AND\u0027). See a full [list of supported cuisines](https://spoonacular.com/food-api/docs#Cuisines). |\n| `diet` | string | vegetarian | The diet(s) for which the recipes must be suitable. You can specify multiple with comma meaning AND connection. You can specify multiple diets separated with a pipe \\| meaning OR connection. For example diet\u003dgluten free,vegetarian means the recipes must be both, gluten free and vegetarian. If you specify diet\u003dvegan\\|vegetarian, it means you want recipes that are vegan OR vegetarian. See a full [list of supported diets](https://spoonacular.com/food-api/docs#Diets). |\n| `intolerances` | string | gluten | A comma-separated list of intolerances. All recipes returned must not contain ingredients that are not suitable for people with the intolerances entered. See a full [list of supported intolerances](https://spoonacular.com/food-api/docs#Intolerances). |\n| `equipment` | string | pan | The equipment required. Multiple values will be interpreted as \u0027or\u0027. For example, value could be \&quot;blender, frying pan, bowl\&quot;.See a full [list of supported equipment](https://spoonacular.com/food-api/docs#Equipment). |\n| `includeIngredients` | string | tomato,cheese | A comma-separated list of ingredients that should/must be used in the recipes. |\n| `excludeIngredients` | string | eggs | A comma-separated list of ingredients or ingredient types that the recipes must not contain. |\n| `type` | string | main course | The type of recipe. See a full [list of supported meal types](https://spoonacular.com/food-api/docs#Meal-Types). |\n| `instructionsRequired` | boolean | true | Whether the recipes must have instructions. |\n| `fillIngredients` | boolean | false | Add information about the ingredients and whether they are used or missing in relation to the query. |\n| `addRecipeInformation` | boolean | false | If set to true, you get more information about the recipes returned. |\n| `addRecipeInstructions` | boolean | false | If set to true, you get analyzed instructions for each recipe returned. The addRecipeInformation parameter needs to be true for this to take effect. |\n| `addRecipeNutrition` | boolean | false | If set to true, you get nutritional information about each recipes returned. |\n| `author` | string | coffeebean | The username of the recipe author. |\n| `tags` | string | myCustomTag | User defined tags that have to match. The author param has to be set. |\n| `recipeBoxId` | number | 2468 | The id of the recipe box to which the search should be limited to. |\n| `titleMatch` | string | Crock Pot | Enter text that must be found in the title of the recipes. |\n| `maxReadyTime` | number | 20 | The maximum time in minutes it should take to prepare and cook the recipe. |\n| `minServings` | number | 1 | The minimum amount of servings the recipe is for. |\n| `maxServings` | number | 8 | The maximum amount of servings the recipe is for. |\n| `ignorePantry` | boolean | true | Whether to ignore typical pantry items, such as water, salt, flour, etc. |\n| `sort` | string | calories | The strategy to sort recipes by. See a full [list of supported sorting options](https://spoonacular.com/food-api/docs#Recipe-Sorting-Options). |\n| `sortDirection` | string | asc | The direction in which to sort. Must be either \u0027asc\u0027 (ascending) or \u0027desc\u0027 (descending). |\n| `minCarbs` | number | 10 | The minimum amount of carbohydrates in grams the recipe must have per serving.\n\n#### Parameters\n |\n| `maxCarbs` | number | 100 | The maximum amount of carbohydrates in grams the recipe can have per serving. |\n| `minProtein` | number | 10 | The minimum amount of protein in grams the recipe must have per serving. |\n| `maxProtein` | number | 100 | The maximum amount of protein in grams the recipe can have per serving. |\n| `minCalories` | number | 50 | The minimum amount of calories the recipe must have per serving. |\n| `maxCalories` | number | 800 | The maximum amount of calories the recipe can have per serving. |\n| `minFat` | number | 1 | The minimum amount of fat in grams the recipe must have per serving. |\n| `maxFat` | number | 100 | The maximum amount of fat in grams the recipe can have per serving. |\n| `minAlcohol` | number | 0 | The minimum amount of alcohol in grams the recipe must have per serving. |\n| `maxAlcohol` | number | 100 | The maximum amount of alcohol in grams the recipe can have per serving. |\n| `minCaffeine` | number | 0 | The minimum amount of caffeine in milligrams the recipe must have per serving. |\n| `maxCaffeine` | number | 100 | The maximum amount of caffeine in milligrams the recipe can have per serving. |\n| `minCopper` | number | 0 | The minimum amount of copper in milligrams the recipe must have per serving. |\n| `maxCopper` | number | 100 | The maximum amount of copper in milligrams the recipe can have per serving. |\n| `minCalcium` | number | 0 | The minimum amount of calcium in milligrams the recipe must have per serving. |\n| `maxCalcium` | number | 100 | The maximum amount of calcium in milligrams the recipe can have per serving. |\n| `minCholine` | number | 0 | The minimum amount of choline in milligrams the recipe must have per serving. |\n| `maxCholine` | number | 100 | The maximum amount of choline in milligrams the recipe can have per serving. |\n| `minCholesterol` | number | 0 | The minimum amount of cholesterol in milligrams the recipe must have per serving. |\n| `maxCholesterol` | number | 100 | The maximum amount of cholesterol in milligrams the recipe can have per serving. |\n| `minFluoride` | number | 0 | The minimum amount of fluoride in milligrams the recipe must have per serving. |\n| `maxFluoride` | number | 100 | The maximum amount of fluoride in milligrams the recipe can have per serving. |\n| `minSaturatedFat` | number | 0 | The minimum amount of saturated fat in grams the recipe must have per serving. |\n| `maxSaturatedFat` | number | 100 | The maximum amount of saturated fat in grams the recipe can have per serving. |\n| `minVitaminA` | number | 0 | The minimum amount of Vitamin A in IU the recipe must have per serving. |\n| `maxVitaminA` | number | 100 | The maximum amount of Vitamin A in IU the recipe can have per serving. |\n| `minVitaminC` | number | 0 | The minimum amount of Vitamin C milligrams the recipe must have per serving. |\n| `maxVitaminC` | number | 100 | The maximum amount of Vitamin C in milligrams the recipe can have per serving. |\n| `minVitaminD` | number | 0 | The minimum amount of Vitamin D in micrograms the recipe must have per serving. |\n| `maxVitaminD` | number | 100 | The maximum amount of Vitamin D in micrograms the recipe can have per serving. |\n| `minVitaminE` | number | 0 | The minimum amount of Vitamin E in milligrams the recipe must have per serving. |\n| `maxVitaminE` | number | 100 | The maximum amount of Vitamin E in milligrams the recipe can have per serving. |\n| `minVitaminK` | number | 0 | The minimum amount of Vitamin K in micrograms the recipe must have per serving. |\n| `maxVitaminK` | number | 100 | The maximum amount of Vitamin K in micrograms the recipe can have per serving. |\n| `minVitaminB1` | number | 0 | The minimum amount of Vitamin B1 in milligrams the recipe must have per serving. |\n| `maxVitaminB1` | number | 100 | The maximum amount of Vitamin B1 in milligrams the recipe can have per serving. |\n| `minVitaminB2` | number | 0 | The minimum amount of Vitamin B2 in milligrams the recipe must have per serving.\n\n#### Parameters\n |\n| `maxVitaminB2` | number | 100 | The maximum amount of Vitamin B2 in milligrams the recipe can have per serving. |\n| `minVitaminB5` | number | 0 | The minimum amount of Vitamin B5 in milligrams the recipe must have per serving. |\n| `maxVitaminB5` | number | 100 | The maximum amount of Vitamin B5 in milligrams the recipe can have per serving. |\n| `minVitaminB3` | number | 0 | The minimum amount of Vitamin B3 in milligrams the recipe must have per serving. |\n| `maxVitaminB3` | number | 100 | The maximum amount of Vitamin B3 in milligrams the recipe can have per serving. |\n| `minVitaminB6` | number | 0 | The minimum amount of Vitamin B6 in milligrams the recipe must have per serving. |\n| `maxVitaminB6` | number | 100 | The maximum amount of Vitamin B6 in milligrams the recipe can have per serving. |\n| `minVitaminB12` | number | 0 | The minimum amount of Vitamin B12 in micrograms the recipe must have per serving. |\n| `maxVitaminB12` | number | 100 | The maximum amount of Vitamin B12 in micrograms the recipe can have per serving. |\n| `minFiber` | number | 0 | The minimum amount of fiber in grams the recipe must have per serving. |\n| `maxFiber` | number | 100 | The maximum amount of fiber in grams the recipe can have per serving. |\n| `minFolate` | number | 0 | The minimum amount of folate in micrograms the recipe must have per serving. |\n| `maxFolate` | number | 100 | The maximum amount of folate in micrograms the recipe can have per serving. |\n| `minFolicAcid` | number | 0 | The minimum amount of folic acid in micrograms the recipe must have per serving. |\n| `maxFolicAcid` | number | 100 | The maximum amount of folic acid in micrograms the recipe can have per serving. |\n| `minIodine` | number | 0 | The minimum amount of iodine in micrograms the recipe must have per serving. |\n| `maxIodine` | number | 100 | The maximum amount of iodine in micrograms the recipe can have per serving. |\n| `minIron` | number | 0 | The minimum amount of iron in milligrams the recipe must have per serving. |\n| `maxIron` | number | 100 | The maximum amount of iron in milligrams the recipe can have per serving. |\n| `minMagnesium` | number | 0 | The minimum amount of magnesium in milligrams the recipe must have per serving. |\n| `maxMagnesium` | number | 100 | The maximum amount of magnesium in milligrams the recipe can have per serving. |\n| `minManganese` | number | 0 | The minimum amount of manganese in milligrams the recipe must have per serving. |\n| `maxManganese` | number | 100 | The maximum amount of manganese in milligrams the recipe can have per serving. |\n| `minPhosphorus` | number | 0 | The minimum amount of phosphorus in milligrams the recipe must have per serving. |\n| `maxPhosphorus` | number | 100 | The maximum amount of phosphorus in milligrams the recipe can have per serving. |\n| `minPotassium` | number | 0 | The minimum amount of potassium in milligrams the recipe must have per serving. |\n| `maxPotassium` | number | 100 | The maximum amount of potassium in milligrams the recipe can have per serving. |\n| `minSelenium` | number | 0 | The minimum amount of selenium in micrograms the recipe must have per serving. |\n| `maxSelenium` | number | 100 | The maximum amount of selenium in micrograms the recipe can have per serving. |\n| `minSodium` | number | 0 | The minimum amount of sodium in milligrams the recipe must have per serving. |\n| `maxSodium` | number | 100 | The maximum amount of sodium in milligrams the recipe can have per serving. |\n| `minSugar` | number | 0 | The minimum amount of sugar in grams the recipe must have per serving. |\n| `maxSugar` | number | 100 | The maximum amount of sugar in grams the recipe can have per serving. |\n| `minZinc` | number | 0 | The minimum amount of zinc in milligrams the recipe must have per serving. |\n| `maxZinc` | number | 100 | The maximum amount of zinc in milligrams the recipe can have per serving. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 900).\n\n#### Parameters\n |\n| `number` | number | 10 | The number of expected results (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/complexSearch?query\u003dpasta\u0026maxFat\u003d25\u0026number\u003d2\n\n```\n{\n \&quot;offset\&quot;: 0,\n \&quot;number\&quot;: 2,\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 716429,\n \&quot;title\&quot;: \&quot;Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/716429-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n },\n {\n \&quot;id\&quot;: 715538,\n \&quot;title\&quot;: \&quot;What to make for dinner tonight?? Bruschetta Style Pork \u0026 Pasta\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/715538-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n }\n ],\n \&quot;totalResults\&quot;: 86\n}\n```\n\nThe API response will give you arrays of usedIngredients, missedIngredients, and unusedIngredients for each returned recipe. This diagram shows you what they mean:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper result returned. Since this endpoint combines the capabilities of four different endpoints into one, additional points may be required depending on the parameters you set. If `fillIngredients` is set to true,\n\n0.025 points\n\nwill be added per recipe returned. If a nutrient filter is set,\n\n1 point\n\nwill be added. If `addRecipeInformation` is set to true,\n\n0.025 points\n\nwill be added per recipe returned. If `addRecipeInstructions` is set to true,\n\n0.025 points\n\nwill be added per recipe returned. If `addRecipeNutrition` is set to true,\n\n0.025 points\n\nwill be added per recipe returned and `addRecipeInformation` will automatically be set to true as well. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Recipe Information\nUse a recipe id to get full information about a recipe, such as ingredients, nutrition, diet and allergen information, etc.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/information\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 716429 | The id of the recipe. |\n| `includeNutrition` | boolean | false | Include nutrition data in the recipe information. Nutrition data is per serving. If you want the nutrition data for the entire recipe, just multiply by the number of servings. |\n| `addWinePairing` | boolean | false | Add a wine pairing to the recipe. |\n| `addTasteData` | boolean | false | Add taste data to the recipe. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/716429/information?includeNutrition\u003dfalse\n\n```\n{\n \&quot;id\&quot;: 716429,\n \&quot;title\&quot;: \&quot;Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/716429-556x370.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;servings\&quot;: 2,\n \&quot;readyInMinutes\&quot;: 45,\n \&quot;cookingMinutes\&quot;: 25,\n \&quot;preparationMinutes\&quot;: 20,\n \&quot;license\&quot;: \&quot;CC BY-SA 3.0\&quot;,\n \&quot;sourceName\&quot;: \&quot;Full Belly Sisters\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://fullbellysisters.blogspot.com/2012/06/pasta-with-garlic-scallions-cauliflower.html\&quot;,\n \&quot;spoonacularSourceUrl\&quot;: \&quot;https://spoonacular.com/pasta-with-garlic-scallions-cauliflower-breadcrumbs-716429\&quot;,\n \&quot;healthScore\&quot;: 19.0,\n \&quot;spoonacularScore\&quot;: 83.0,\n \&quot;pricePerServing\&quot;: 163.15,\n \&quot;analyzedInstructions\&quot;: [],\n \&quot;cheap\&quot;: false,\n \&quot;creditsText\&quot;: \&quot;Full Belly Sisters\&quot;,\n \&quot;cuisines\&quot;: [],\n \&quot;dairyFree\&quot;: false,\n \&quot;diets\&quot;: [],\n \&quot;gaps\&quot;: \&quot;no\&quot;,\n \&quot;glutenFree\&quot;: false,\n \&quot;instructions\&quot;: \&quot;\&quot;,\n \&quot;ketogenic\&quot;: false,\n \&quot;lowFodmap\&quot;: false,\n \&quot;occasions\&quot;: [],\n \&quot;sustainable\&quot;: false,\n \&quot;vegan\&quot;: false,\n \&quot;vegetarian\&quot;: false,\n \&quot;veryHealthy\&quot;: false,\n \&quot;veryPopular\&quot;: false,\n \&quot;whole30\&quot;: false,\n \&quot;weightWatcherSmartPoints\&quot;: 17,\n \&quot;dishTypes\&quot;: [\n \&quot;lunch\&quot;,\n \&quot;main course\&quot;,\n \&quot;main dish\&quot;,\n \&quot;dinner\&quot;\n ],\n \&quot;extendedIngredients\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Milk, Eggs, Other Dairy\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 1001,\n \&quot;image\&quot;: \&quot;butter-sliced.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unitLong\&quot;: \&quot;Tbsp\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsp\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unitLong\&quot;: \&quot;Tbsp\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsp\&quot;\n }\n },\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;butter\&quot;,\n \&quot;original\&quot;: \&quot;1 tbsp butter\&quot;,\n \&quot;originalName\&quot;: \&quot;butter\&quot;,\n \&quot;unit\&quot;: \&quot;tbsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 10011135,\n \&quot;image\&quot;: \&quot;cauliflower.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 473.176,\n \&quot;unitLong\&quot;: \&quot;milliliters\&quot;,\n \&quot;unitShort\&quot;: \&quot;ml\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;cups\&quot;,\n \&quot;unitShort\&quot;: \&quot;cups\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;frozen\&quot;,\n \&quot;thawed\&quot;,\n \&quot;cut into bite-sized pieces\&quot;\n ],\n \&quot;name\&quot;: \&quot;cauliflower florets\&quot;,\n \&quot;original\&quot;: \&quot;about 2 cups frozen cauliflower florets, thawed, cut into bite-sized pieces\&quot;,\n \&quot;originalName\&quot;: \&quot;about frozen cauliflower florets, thawed, cut into bite-sized pieces\&quot;,\n \&quot;unit\&quot;: \&quot;cups\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Cheese\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 1041009,\n \&quot;image\&quot;: \&quot;cheddar-cheese.png\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;Tbsps\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsps\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;Tbsps\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsps\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;grated\&quot;,\n \&quot;(I used romano)\&quot;\n ],\n \&quot;name\&quot;: \&quot;cheese\&quot;,\n \&quot;original\&quot;: \&quot;2 tbsp grated cheese (I used romano)\&quot;,\n \&quot;originalName\&quot;: \&quot;grated cheese (I used romano)\&quot;,\n \&quot;unit\&quot;: \&quot;tbsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Oil, Vinegar, Salad Dressing\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;consistency\&quot;: \&quot;liquid\&quot;,\n \&quot;id\&quot;: 1034053,\n \&quot;image\&quot;: \&quot;olive-oil.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unitLong\&quot;: \&quot;Tbsp\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsp\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unitLong\&quot;: \&quot;Tbsp\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsp\&quot;\n }\n },\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;extra virgin olive oil\&quot;,\n \&quot;original\&quot;: \&quot;1-2 tbsp extra virgin olive oil\&quot;,\n \&quot;originalName\&quot;: \&quot;extra virgin olive oil\&quot;,\n \&quot;unit\&quot;: \&quot;tbsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;amount\&quot;: 5.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 11215,\n \&quot;image\&quot;: \&quot;garlic.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 5.0,\n \&quot;unitLong\&quot;: \&quot;cloves\&quot;,\n \&quot;unitShort\&quot;: \&quot;cloves\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 5.0,\n \&quot;unitLong\&quot;: \&quot;cloves\&quot;,\n \&quot;unitShort\&quot;: \&quot;cloves\&quot;\n }\n },\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;garlic\&quot;,\n \&quot;original\&quot;: \&quot;5-6 cloves garlic\&quot;,\n \&quot;originalName\&quot;: \n\n#### Parameters\n\&quot;garlic\&quot;,\n \&quot;unit\&quot;: \&quot;cloves\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Pasta and Rice\&quot;,\n \&quot;amount\&quot;: 6.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 20420,\n \&quot;image\&quot;: \&quot;fusilli.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 170.097,\n \&quot;unitLong\&quot;: \&quot;grams\&quot;,\n \&quot;unitShort\&quot;: \&quot;g\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 6.0,\n \&quot;unitLong\&quot;: \&quot;ounces\&quot;,\n \&quot;unitShort\&quot;: \&quot;oz\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;(I used linguine)\&quot;\n ],\n \&quot;name\&quot;: \&quot;pasta\&quot;,\n \&quot;original\&quot;: \&quot;6-8 ounces pasta (I used linguine)\&quot;,\n \&quot;originalName\&quot;: \&quot;pasta (I used linguine)\&quot;,\n \&quot;unit\&quot;: \&quot;ounces\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Spices and Seasonings\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 1032009,\n \&quot;image\&quot;: \&quot;red-pepper-flakes.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;pinches\&quot;,\n \&quot;unitShort\&quot;: \&quot;pinches\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;pinches\&quot;,\n \&quot;unitShort\&quot;: \&quot;pinches\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;red\&quot;\n ],\n \&quot;name\&quot;: \&quot;red pepper flakes\&quot;,\n \&quot;original\&quot;: \&quot;couple of pinches red pepper flakes, optional\&quot;,\n \&quot;originalName\&quot;: \&quot;couple of red pepper flakes, optional\&quot;,\n \&quot;unit\&quot;: \&quot;pinches\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Spices and Seasonings\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 1102047,\n \&quot;image\&quot;: \&quot;salt-and-pepper.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;servings\&quot;,\n \&quot;unitShort\&quot;: \&quot;servings\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;servings\&quot;,\n \&quot;unitShort\&quot;: \&quot;servings\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;to taste\&quot;\n ],\n \&quot;name\&quot;: \&quot;salt and pepper\&quot;,\n \&quot;original\&quot;: \&quot;salt and pepper, to taste\&quot;,\n \&quot;originalName\&quot;: \&quot;salt and pepper, to taste\&quot;,\n \&quot;unit\&quot;: \&quot;servings\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;amount\&quot;: 3.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 11291,\n \&quot;image\&quot;: \&quot;spring-onions.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 3.0,\n \&quot;unitLong\&quot;: \&quot;\&quot;,\n \&quot;unitShort\&quot;: \&quot;\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 3.0,\n \&quot;unitLong\&quot;: \&quot;\&quot;,\n \&quot;unitShort\&quot;: \&quot;\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;white\&quot;,\n \&quot;green\&quot;,\n \&quot;separated\&quot;,\n \&quot;chopped\&quot;\n ],\n \&quot;name\&quot;: \&quot;scallions\&quot;,\n \&quot;original\&quot;: \&quot;3 scallions, chopped, white and green parts separated\&quot;,\n \&quot;originalName\&quot;: \&quot;scallions, chopped, white and green parts separated\&quot;,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Alcoholic Beverages\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;consistency\&quot;: \&quot;liquid\&quot;,\n \&quot;id\&quot;: 14106,\n \&quot;image\&quot;: \&quot;white-wine.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;Tbsps\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsps\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;Tbsps\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsps\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;white\&quot;\n ],\n \&quot;name\&quot;: \&quot;white wine\&quot;,\n \&quot;original\&quot;: \&quot;2-3 tbsp white wine\&quot;,\n \&quot;originalName\&quot;: \&quot;white wine\&quot;,\n \&quot;unit\&quot;: \&quot;tbsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Pasta and Rice\&quot;,\n \&quot;amount\&quot;: 0.25,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 99025,\n \&quot;image\&quot;: \&quot;breadcrumbs.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 59.147,\n \&quot;unitLong\&quot;: \&quot;milliliters\&quot;,\n \&quot;unitShort\&quot;: \&quot;ml\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 0.25,\n \&quot;unitLong\&quot;: \&quot;cups\&quot;,\n \&quot;unitShort\&quot;: \&quot;cups\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;whole wheat\&quot;,\n \&quot;(I used panko)\&quot;\n ],\n \&quot;name\&quot;: \&quot;whole wheat bread crumbs\&quot;,\n \&quot;original\&quot;: \&quot;1/4 cup whole wheat bread crumbs (I used panko)\&quot;,\n \&quot;originalName\&quot;: \&quot;whole wheat bread crumbs (I used panko)\&quot;,\n \&quot;unit\&quot;: \&quot;cup\&quot;\n }\n ],\n \&quot;summary\&quot;: \&quot;Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs might be a good recipe to expand your main course repertoire. One portion of this dish contains approximately 19g of protein, 20g of fat, and a total of 584 calories. For $1.63 per serving, this recipe covers 23% of your daily requirements of vitamins and minerals. This recipe serves 2. It is brought to you by fullbellysisters.blogspot.com. 209 people were glad they tried this recipe. A mixture of scallions, salt and pepper, white wine, and a handful of other ingredients are all it takes to make this recipe so scrumptious. From preparation to the plate, this recipe takes approximately 45 minutes. All things considered, we decided this recipe deserves a spoonacular score of 83%. This score is awesome.\n\n#### Parameters\n If you like this recipe, take a look at these similar recipes: Cauliflower Gratin with Garlic Breadcrumbs, \u003c href\u003d\\\&quot;https://spoonacular.com/recipes/pasta-with-cauliflower-sausage-breadcrumbs-30437\\\&quot;\u003ePasta With Cauliflower, Sausage, \u0026 Breadcrumbs, and Pasta With Roasted Cauliflower, Parsley, And Breadcrumbs.\&quot;,\n \&quot;winePairing\&quot;: {\n \&quot;pairedWines\&quot;: [\n \&quot;chardonnay\&quot;,\n \&quot;gruener veltliner\&quot;,\n \&quot;sauvignon blanc\&quot;\n ],\n \&quot;pairingText\&quot;: \&quot;Chardonnay, Gruener Veltliner, and Sauvignon Blanc are great choices for Pasta. Sauvignon Blanc and Gruner Veltliner both have herby notes that complement salads with enough acid to match tart vinaigrettes, while a Chardonnay can be a good pick for creamy salad dressings. The Buddha Kat Winery Chardonnay with a 4 out of 5 star rating seems like a good match. It costs about 25 dollars per bottle.\&quot;,\n \&quot;productMatches\&quot;: [\n {\n \&quot;id\&quot;: 469199,\n \&quot;title\&quot;: \&quot;Buddha Kat Winery Chardonnay\&quot;,\n \&quot;description\&quot;: \&quot;We barrel ferment our Chardonnay and age it in a mix of Oak and Stainless. Giving this light bodied wine modest oak character, a delicate floral aroma, and a warming finish.\&quot;,\n \&quot;price\&quot;: \&quot;$25.0\&quot;,\n \&quot;imageUrl\&quot;: \&quot;https://img.spoonacular.com/products/469199-312x231.jpg\&quot;,\n \&quot;averageRating\&quot;: 0.8,\n \&quot;ratingCount\&quot;: 1.0,\n \&quot;score\&quot;: 0.55,\n \&quot;link\&quot;: \&quot;https://www.amazon.com/2015-Buddha-Kat-Winery-Chardonnay/dp/B00OSAVVM4?tag\u003dspoonacular-20\&quot;\n }\n ]\n }\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.1 points\n\nif `includeNutrition` is true +\n\n1 point\n\nif `addWinePairing` is true and +\n\n0.5 points\n\nif `addTasteData` is true..\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Recipe Information Bulk\nGet information about multiple recipes at once. This is equivalent to calling the Get Recipe Information endpoint multiple times, but faster.\n\nGET\n\nhttps://api.spoonacular.com/recipes/informationBulk\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ids`** | string | 715538,716429 | A comma-separated list of recipe ids. |\n| `includeNutrition` | boolean | false | Include nutrition data to the recipe information. Nutrition data is per serving. If you want the nutrition data for the entire recipe, just multiply by the number of servings. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/informationBulk?ids\u003d715538,716429\n\n```\n[\n {/* recipe data as in Get Recipe Information endpoint */},\n {/* recipe data as in Get Recipe Information endpoint */}\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nfor the first recipe and\n\n0.5 points\n\nfor every additional recipe returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Similar Recipes\nFind recipes which are similar to the given one.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/similar\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 715538 | The id of the source recipe for which similar recipes should be found. |\n| `number` | number | 1 | The number of random recipes to be returned (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/715538/similar\n\n```\n[\n {\n \&quot;id\&quot;: 209128,\n \&quot;title\&quot;: \&quot;Dinner Tonight: Grilled Romesco-Style Pork\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;readyInMinutes\&quot;: 45,\n \&quot;servings\&quot;: 4,\n \&quot;sourceUrl\&quot;: \&quot;http://www.seriouseats.com/recipes/2008/07/grilled-romesco-style-pork-salad-recipe.html\&quot;\n },\n {\n \&quot;id\&quot;: 31868,\n \&quot;title\&quot;: \&quot;Dinner Tonight: Chickpea Bruschetta\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;readyInMinutes\&quot;: 45,\n \&quot;servings\&quot;: 2,\n \&quot;sourceUrl\&quot;: \&quot;http://www.seriouseats.com/recipes/2009/06/dinner-tonight-chickpea-bruschetta-babbo-nyc-recipe.html\&quot;\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper recipe returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Random Recipes\nFind random (popular) recipes. If you need to filter recipes by diet, nutrition etc. you might want to consider using the complex recipe search endpoint and set the `sort` request parameter to `random`.\n\nGET\n\nhttps://api.spoonacular.com/recipes/random\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| `includeNutrition` | boolean | true | Whether to include nutritional information to returned recipes. |\n| `include-tags` | string | vegetarian, dessert | The tags (can be diets, meal types, cuisines, or intolerances) that the recipe must have. |\n| `exclude-tags` | string | dairy | The tags (can be diets, meal types, cuisines, or intolerances) that the recipe must NOT have. |\n| `number` | number | 1 | The number of random recipes to be returned (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/random?number\u003d1\u0026include-tags\u003dvegetarian,dessert\u0026exclude-tags\u003dquinoa\n\n```\n{\n \&quot;recipes\&quot;:[\n {/* recipe data as in Get Recipe Information endpoint */}\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper recipe returned and\n\n0.5 points\n\nper recipe returned if `includeNutrition` is set to true.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Autocomplete Recipe Search\nAutocomplete a partial input to suggest possible recipe names.\n\nGET\n\nhttps://api.spoonacular.com/recipes/autocomplete\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | burger | The query to be autocompleted. |\n| `number` | number | 10 | The number of results to return (between 1 and 25). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/autocomplete?number\u003d10\u0026query\u003dchick\n\n```\n[\n {\n \&quot;id\&quot;: 296687,\n \&quot;title\&quot;: \&quot;chicken\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n },\n {\n \&quot;id\&quot;: 42569,\n \&quot;title\&quot;: \&quot;chicken bbq\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n },\n\n {\n \&quot;id\&quot;: 83890,\n \&quot;title\&quot;: \&quot;chicken blt\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n },\n {\n \&quot;id\&quot;: 737543,\n \&quot;title\&quot;: \&quot;chicken pie\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Taste by ID\nGet a recipe\u0027s taste. The tastes supported are sweet, salty, sour, bitter, savory, and fatty. These tastes are between 0 and 100 while the spiciness value is in scoville on an open scale of 0 and above.\n\nEvery ingredient has each of these values and it is weighted by how much they contribute to the recipe. Spiciness is taking the weight of the spicy ingredient and multiplying it with its scoville amount. Of course, taste is also very personal and it depends on how it is prepared so all of the values should only give you an indication of how the dish tastes.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/tasteWidget.json\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 69095 | The recipe id. |\n| `normalize` | boolean | false | Normalize to the strongest taste. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/69095/tasteWidget.json\n\n```\n{\n \&quot;sweetness\&quot;: 28.79,\n \&quot;saltiness\&quot;: 26.74,\n \&quot;sourness\&quot;: 6.22,\n \&quot;bitterness\&quot;: 12.38,\n \&quot;savoriness\&quot;: 11.8,\n \&quot;fattiness\&quot;: 100,\n \&quot;spiciness\&quot;: 0\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Equipment by ID\nGet a recipe\u0027s equipment list.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/equipmentWidget.json\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1003464 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1003464/equipmentWidget.json\n\n```\n{\n \&quot;equipment\&quot;: [\n {\n \&quot;image\&quot;: \&quot;pie-pan.png\&quot;,\n \&quot;name\&quot;: \&quot;pie form\&quot;\n },\n {\n \&quot;image\&quot;: \&quot;bowl.jpg\&quot;,\n \&quot;name\&quot;: \&quot;bowl\&quot;\n },\n {\n \&quot;image\&quot;: \&quot;oven.jpg\&quot;,\n \&quot;name\&quot;: \&quot;oven\&quot;\n },\n {\n \&quot;image\&quot;: \&quot;pan.png\&quot;,\n \&quot;name\&quot;: \&quot;frying pan\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Price Breakdown by ID\nGet a recipe\u0027s price breakdown data.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/priceBreakdownWidget.json\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1003464 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1003464/priceBreakdownWidget.json\n\n```\n{\n \&quot;ingredients\&quot;: [\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 222.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;cups\&quot;,\n \&quot;value\&quot;: 1.5\n }\n },\n \&quot;image\&quot;: \&quot;blueberries.jpg\&quot;,\n \&quot;name\&quot;: \&quot;blueberries\&quot;,\n \&quot;price\&quot;: 174.43\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 1.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 1.0\n }\n },\n \&quot;image\&quot;: \&quot;egg-white.jpg\&quot;,\n \&quot;name\&quot;: \&quot;egg white\&quot;,\n \&quot;price\&quot;: 18.21\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n }\n },\n \&quot;image\&quot;: \&quot;flour.png\&quot;,\n \&quot;name\&quot;: \&quot;flour\&quot;,\n \&quot;price\&quot;: 2.0\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 150.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;cup\&quot;,\n \&quot;value\&quot;: 0.75\n }\n },\n \&quot;image\&quot;: \&quot;sugar-in-bowl.png\&quot;,\n \&quot;name\&quot;: \&quot;granulated sugar\&quot;,\n \&quot;price\&quot;: 20.67\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;tsp\&quot;,\n \&quot;value\&quot;: 1.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;tsp\&quot;,\n \&quot;value\&quot;: 1.0\n }\n },\n \&quot;image\&quot;: \&quot;lemon-juice.jpg\&quot;,\n \&quot;name\&quot;: \&quot;fresh lemon juice\&quot;,\n \&quot;price\&quot;: 3.39\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;pinch\&quot;,\n \&quot;value\&quot;: 1.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;pinch\&quot;,\n \&quot;value\&quot;: 1.0\n }\n },\n \&quot;image\&quot;: \&quot;ground-nutmeg.jpg\&quot;,\n \&quot;name\&quot;: \&quot;nutmeg\&quot;,\n \&quot;price\&quot;: 7.39\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 2.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 2.0\n }\n },\n \&quot;image\&quot;: \&quot;pie-crust.jpg\&quot;,\n \&quot;name\&quot;: \&quot;pie dough round\&quot;,\n \&quot;price\&quot;: 364.29\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n }\n },\n \&quot;image\&quot;: \&quot;tapioca-pearls.png\&quot;,\n \&quot;name\&quot;: \&quot;quick cooking tapioca\&quot;,\n \&quot;price\&quot;: 50.89\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 305.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;cups\&quot;,\n \&quot;value\&quot;: 2.5\n }\n },\n \&quot;image\&quot;: \&quot;rhubarb.jpg\&quot;,\n \&quot;name\&quot;: \&quot;trimmed rhubarb\&quot;,\n \&quot;price\&quot;: 185.18\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 0.5\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 0.5\n }\n },\n \&quot;image\&quot;: \&quot;butter-sliced.jpg\&quot;,\n \&quot;name\&quot;: \&quot;unsalted butter\&quot;,\n \&quot;price\&quot;: 6.0\n }\n ],\n \&quot;totalCost\&quot;: 832.45,\n \&quot;totalCostPerServing\&quot;: 104.06\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Ingredients by ID\nGet a recipe\u0027s ingredient list.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/ingredientWidget.json\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1003464 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1003464/ingredientWidget.json\n\n```\n{\n \&quot;ingredients\&quot;: [\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 222.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;cups\&quot;,\n \&quot;value\&quot;: 1.5\n }\n },\n \&quot;image\&quot;: \&quot;blueberries.jpg\&quot;,\n \&quot;name\&quot;: \&quot;blueberries\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 1.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 1.0\n }\n },\n \&quot;image\&quot;: \&quot;egg-white.jpg\&quot;,\n \&quot;name\&quot;: \&quot;egg white\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n }\n },\n \&quot;image\&quot;: \&quot;flour.png\&quot;,\n \&quot;name\&quot;: \&quot;flour\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 150.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;cup\&quot;,\n \&quot;value\&quot;: 0.75\n }\n },\n \&quot;image\&quot;: \&quot;sugar-in-bowl.png\&quot;,\n \&quot;name\&quot;: \&quot;granulated sugar\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;tsp\&quot;,\n \&quot;value\&quot;: 1.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;tsp\&quot;,\n \&quot;value\&quot;: 1.0\n }\n },\n \&quot;image\&quot;: \&quot;lemon-juice.jpg\&quot;,\n \&quot;name\&quot;: \&quot;fresh lemon juice\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;pinch\&quot;,\n \&quot;value\&quot;: 1.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;pinch\&quot;,\n \&quot;value\&quot;: 1.0\n }\n },\n \&quot;image\&quot;: \&quot;ground-nutmeg.jpg\&quot;,\n \&quot;name\&quot;: \&quot;nutmeg\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 2.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 2.0\n }\n },\n \&quot;image\&quot;: \&quot;pie-crust.jpg\&quot;,\n \&quot;name\&quot;: \&quot;pie dough round\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n }\n },\n \&quot;image\&quot;: \&quot;tapioca-pearls.png\&quot;,\n \&quot;name\&quot;: \&quot;quick cooking tapioca\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 305.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;cups\&quot;,\n \&quot;value\&quot;: 2.5\n }\n },\n \&quot;image\&quot;: \&quot;rhubarb.jpg\&quot;,\n \&quot;name\&quot;: \&quot;trimmed rhubarb\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;tsps\&quot;,\n \&quot;value\&quot;: 0.333\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;tsps\&quot;,\n \&quot;value\&quot;: 0.333\n }\n },\n \&quot;image\&quot;: \&quot;salt.jpg\&quot;,\n \&quot;name\&quot;: \&quot;salt\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 0.5\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 0.5\n }\n },\n \&quot;image\&quot;: \&quot;butter-sliced.jpg\&quot;,\n \&quot;name\&quot;: \&quot;unsalted butter\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Nutrition Label Widget\nGet a recipe\u0027s nutrition label as an HTML widget.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/nutritionLabel\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 641166 | The recipe id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showOptionalNutrients` | boolean | false | Whether to show optional nutrients. |\n| `showZeroValues` | boolean | false | Whether to show zero values. |\n| `showIngredients` | boolean | false | Whether to show a list of ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/641166/nutritionLabel\n\nThe response will be an HTML that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Product Nutrition Label Widget\nGet a product\u0027s nutrition label as an HTML widget.\n\nGET\n\nhttps://api.spoonacular.com/food/products/{id}/nutritionLabel\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 22347 | The product id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showOptionalNutrients` | boolean | false | Whether to show optional nutrients. |\n| `showZeroValues` | boolean | false | Whether to show zero values. |\n| `showIngredients` | boolean | false | Whether to show a list of ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/22347/nutritionLabel\n\n```\n/* HTML response */\n```\n\nThe response will be an HTML widget that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Product Nutrition Label Image\nGet a product\u0027s nutrition label as an image.\n\nGET\n\nhttps://api.spoonacular.com/food/products/{id}/nutritionLabel.png\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 22347 | The product id. |\n| `showOptionalNutrients` | boolean | false | Whether to show optional nutrients. |\n| `showZeroValues` | boolean | false | Whether to show zero values. |\n| `showIngredients` | boolean | false | Whether to show a list of ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/22347/nutritionLabel.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Nutrition Label Image\nGet a recipe\u0027s nutrition label as an image.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/nutritionLabel.png\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 641166 | The recipe id. |\n| `showOptionalNutrients` | boolean | false | Whether to show optional nutrients. |\n| `showZeroValues` | boolean | false | Whether to show zero values. |\n| `showIngredients` | boolean | false | Whether to show a list of ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/641166/nutritionLabel.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Nutrition by ID\nGet a recipe\u0027s nutrition widget data.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/nutritionWidget.json\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1003464 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1003464/nutritionWidget.json\n\n```\n{\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 316.49,\n \&quot;unit\&quot;: \&quot;kcal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 15.82\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 12.09,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 18.6\n },\n {\n \&quot;name\&quot;: \&quot;Saturated Fat\&quot;,\n \&quot;amount\&quot;: 3.98,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 24.88\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 49.25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 16.42\n },\n {\n \&quot;name\&quot;: \&quot;Net Carbohydrates\&quot;,\n \&quot;amount\&quot;: 46.76,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17.0\n },\n {\n \&quot;name\&quot;: \&quot;Sugar\&quot;,\n \&quot;amount\&quot;: 21.98,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 24.42\n },\n {\n \&quot;name\&quot;: \&quot;Cholesterol\&quot;,\n \&quot;amount\&quot;: 1.88,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.63\n },\n {\n \&quot;name\&quot;: \&quot;Sodium\&quot;,\n \&quot;amount\&quot;: 279.1,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 12.13\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 3.79,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 7.57\n },\n ...\n ],\n \&quot;properties\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Glycemic Index\&quot;,\n \&quot;amount\&quot;: 33.51,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Glycemic Load\&quot;,\n \&quot;amount\&quot;: 15.63,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Nutrition Score\&quot;,\n \&quot;amount\&quot;: 5.868695652173913,\n \&quot;unit\&quot;: \&quot;%\&quot;\n }\n ],\n \&quot;flavonoids\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Cyanidin\&quot;,\n \&quot;amount\&quot;: 2.35,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Petunidin\&quot;,\n \&quot;amount\&quot;: 8.75,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Delphinidin\&quot;,\n \&quot;amount\&quot;: 9.83,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n ...\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 9050,\n \&quot;name\&quot;: \&quot;blueberries\&quot;,\n \&quot;amount\&quot;: 0.19,\n \&quot;unit\&quot;: \&quot;cups\&quot;,\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Vitamin E\&quot;,\n \&quot;amount\&quot;: 0.16,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 3.19\n },\n {\n \&quot;name\&quot;: \&quot;Zinc\&quot;,\n \&quot;amount\&quot;: 0.04,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.96\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0.09,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 18.6\n },\n {\n \&quot;name\&quot;: \&quot;Folate\&quot;,\n \&quot;amount\&quot;: 1.66,\n \&quot;unit\&quot;: \&quot;µg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9.48\n },\n {\n \&quot;name\&quot;: \&quot;Phosphorus\&quot;,\n \&quot;amount\&quot;: 3.33,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 4.24\n },\n {\n \&quot;name\&quot;: \&quot;Manganese\&quot;,\n \&quot;amount\&quot;: 0.09,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 18.69\n },\n ...\n },\n ...\n ],\n \&quot;caloricBreakdown\&quot;: {\n \&quot;percentProtein\&quot;: 4.72,\n \&quot;percentFat\&quot;: 33.9,\n \&quot;percentCarbs\&quot;: 61.38\n },\n \&quot;weightPerServing\&quot;: {\n \&quot;amount\&quot;: 138,\n \&quot;unit\&quot;: \&quot;g\&quot;\n }\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Analyzed Recipe Instructions\nGet an analyzed breakdown of a recipe\u0027s instructions. Each step is enriched with the ingredients and equipment required.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/analyzedInstructions\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 324694 | The recipe id. |\n| `stepBreakdown` | boolean | true | Whether to break down the recipe steps even more. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/324694/analyzedInstructions\n\n```\n[\n {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;steps\&quot;: [\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404784,\n \&quot;image\&quot;: \&quot;oven.jpg\&quot;,\n \&quot;name\&quot;: \&quot;oven\&quot;,\n \&quot;temperature\&quot;: {\n \&quot;number\&quot;: 200.0,\n \&quot;unit\&quot;: \&quot;Fahrenheit\&quot;\n }\n }\n ],\n \&quot;ingredients\&quot;: [],\n \&quot;number\&quot;: 1,\n \&quot;step\&quot;: \&quot;Preheat the oven to 200 degrees F.\&quot;\n },\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404661,\n \&quot;image\&quot;: \&quot;whisk.png\&quot;,\n \&quot;name\&quot;: \&quot;whisk\&quot;\n },\n {\n \&quot;id\&quot;: 404783,\n \&quot;image\&quot;: \&quot;bowl.jpg\&quot;,\n \&quot;name\&quot;: \&quot;bowl\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 19334,\n \&quot;image\&quot;: \&quot;light-brown-sugar.jpg\&quot;,\n \&quot;name\&quot;: \&quot;light brown sugar\&quot;\n },\n {\n \&quot;id\&quot;: 19335,\n \&quot;image\&quot;: \&quot;sugar-in-bowl.png\&quot;,\n \&quot;name\&quot;: \&quot;granulated sugar\&quot;\n },\n {\n \&quot;id\&quot;: 18371,\n \&quot;image\&quot;: \&quot;white-powder.jpg\&quot;,\n \&quot;name\&quot;: \&quot;baking powder\&quot;\n },\n {\n \&quot;id\&quot;: 18372,\n \&quot;image\&quot;: \&quot;white-powder.jpg\&quot;,\n \&quot;name\&quot;: \&quot;baking soda\&quot;\n },\n {\n \&quot;id\&quot;: 12142,\n \&quot;image\&quot;: \&quot;pecans.jpg\&quot;,\n \&quot;name\&quot;: \&quot;pecans\&quot;\n },\n {\n \&quot;id\&quot;: 20081,\n \&quot;image\&quot;: \&quot;flour.png\&quot;,\n \&quot;name\&quot;: \&quot;all purpose flour\&quot;\n },\n {\n \&quot;id\&quot;: 2047,\n \&quot;image\&quot;: \&quot;salt.jpg\&quot;,\n \&quot;name\&quot;: \&quot;salt\&quot;\n }\n ],\n \&quot;number\&quot;: 2,\n \&quot;step\&quot;: \&quot;Whisk together the flour, pecans, granulated sugar, light brown sugar, baking powder, baking soda, and salt in a medium bowl.\&quot;\n },\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404661,\n \&quot;image\&quot;: \&quot;whisk.png\&quot;,\n \&quot;name\&quot;: \&quot;whisk\&quot;\n },\n {\n \&quot;id\&quot;: 404783,\n \&quot;image\&quot;: \&quot;bowl.jpg\&quot;,\n \&quot;name\&quot;: \&quot;bowl\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 2050,\n \&quot;image\&quot;: \&quot;vanilla-extract.jpg\&quot;,\n \&quot;name\&quot;: \&quot;vanilla extract\&quot;\n },\n {\n \&quot;id\&quot;: 93622,\n \&quot;image\&quot;: \&quot;vanilla.jpg\&quot;,\n \&quot;name\&quot;: \&quot;vanilla bean\&quot;\n },\n {\n \&quot;id\&quot;: 1230,\n \&quot;image\&quot;: \&quot;buttermilk.jpg\&quot;,\n \&quot;name\&quot;: \&quot;buttermilk\&quot;\n },\n {\n \&quot;id\&quot;: 1123,\n \&quot;image\&quot;: \&quot;egg.png\&quot;,\n \&quot;name\&quot;: \&quot;egg\&quot;\n }\n ],\n \&quot;number\&quot;: 3,\n \&quot;step\&quot;: \&quot;Whisk together the eggs, buttermilk, butter and vanilla extract and vanilla bean in a small bowl.\&quot;\n },\n {\n \&quot;equipment\&quot;: [],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 1123,\n \&quot;image\&quot;: \&quot;egg.png\&quot;,\n \&quot;name\&quot;: \&quot;egg\&quot;\n }\n ],\n \&quot;number\&quot;: 4,\n \&quot;step\&quot;: \&quot;Add the egg mixture to the dry mixture and gently mix to combine. Do not overmix.\&quot;\n },\n {\n \&quot;equipment\&quot;: [],\n \&quot;ingredients\&quot;: [],\n \&quot;length\&quot;: {\n \&quot;number\&quot;: 15,\n \&quot;unit\&quot;: \&quot;minutes\&quot;\n },\n \&quot;number\&quot;: 5,\n \&quot;step\&quot;: \&quot;Let the batter sit at room temperature for at least 15 minutes and up to 30 minutes before using.\&quot;\n },\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404779,\n \&quot;image\&quot;: \&quot;griddle.jpg\&quot;,\n \&quot;name\&quot;: \&quot;griddle\&quot;\n },\n {\n \&quot;id\&quot;: 404645,\n \&quot;image\&quot;: \&quot;pan.png\&quot;,\n \&quot;name\&quot;: \&quot;frying pan\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [],\n \&quot;length\&quot;: {\n \&quot;number\&quot;: 3,\n \&quot;unit\&quot;: \&quot;minutes\&quot;\n },\n \&quot;number\&quot;: 6,\n \&quot;step\&quot;: \&quot;Heat a cast iron or nonstick griddle pan over medium heat and brush with melted butter.\n\n#### Parameters\n Once the butter begins to sizzle, use 2 tablespoons of the batter for each pancake and cook until the bubbles appear on the surface and the bottom is golden brown, about 2 minutes, flip over and cook until the bottom is golden brown, 1 to 2 minutes longer.\&quot;\n },\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404784,\n \&quot;image\&quot;: \&quot;oven.jpg\&quot;,\n \&quot;name\&quot;: \&quot;oven\&quot;,\n \&quot;temperature\&quot;: {\n \&quot;number\&quot;: 200.0,\n \&quot;unit\&quot;: \&quot;Fahrenheit\&quot;\n }\n }\n ],\n \&quot;ingredients\&quot;: [],\n \&quot;number\&quot;: 7,\n \&quot;step\&quot;: \&quot;Transfer the pancakes to a platter and keep warm in a 200 degree F oven.\&quot;\n },\n {\n \&quot;equipment\&quot;: [],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 10014037,\n \&quot;image\&quot;: \&quot;bourbon.png\&quot;,\n \&quot;name\&quot;: \&quot;bourbon\&quot;\n }\n ],\n \&quot;number\&quot;: 8,\n \&quot;step\&quot;: \&quot;Serve 6 pancakes per person, top each with some of the bourbon butter.\&quot;\n },\n {\n \&quot;equipment\&quot;: [],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 19336,\n \&quot;image\&quot;: \&quot;powdered-sugar.jpg\&quot;,\n \&quot;name\&quot;: \&quot;powdered sugar\&quot;\n },\n {\n \&quot;id\&quot;: 19911,\n \&quot;image\&quot;: \&quot;maple-syrup.png\&quot;,\n \&quot;name\&quot;: \&quot;maple syrup\&quot;\n }\n ],\n \&quot;number\&quot;: 9,\n \&quot;step\&quot;: \&quot;Drizzle with warm maple syrup and dust with confectioners\u0027 sugar.\&quot;\n },\n {\n \&quot;equipment\&quot;: [],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 12142,\n \&quot;image\&quot;: \&quot;pecans.jpg\&quot;,\n \&quot;name\&quot;: \&quot;pecans\&quot;\n }\n ],\n \&quot;number\&quot;: 10,\n \&quot;step\&quot;: \&quot;Garnish with fresh mint sprigs and more toasted pecans, if desired.\&quot;\n }\n ]\n },\n {\n \&quot;name\&quot;: \&quot;Bourbon Molasses Butter\&quot;,\n \&quot;steps\&quot;: [\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404669,\n \&quot;image\&quot;: \&quot;sauce-pan.jpg\&quot;,\n \&quot;name\&quot;: \&quot;sauce pan\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 10014037,\n \&quot;image\&quot;: \&quot;bourbon.png\&quot;,\n \&quot;name\&quot;: \&quot;bourbon\&quot;\n },\n {\n \&quot;id\&quot;: 19335,\n \&quot;image\&quot;: \&quot;sugar-in-bowl.png\&quot;,\n \&quot;name\&quot;: \&quot;sugar\&quot;\n }\n ],\n \&quot;number\&quot;: 1,\n \&quot;step\&quot;: \&quot;Combine the bourbon and sugar in a small saucepan and cook over high heat until reduced to 3 tablespoons, remove and let cool.\&quot;\n },\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404771,\n \&quot;image\&quot;: \&quot;food-processor.png\&quot;,\n \&quot;name\&quot;: \&quot;food processor\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 19304,\n \&quot;image\&quot;: \&quot;molasses.jpg\&quot;,\n \&quot;name\&quot;: \&quot;molasses\&quot;\n },\n {\n \&quot;id\&quot;: 10014037,\n \&quot;image\&quot;: \&quot;bourbon.png\&quot;,\n \&quot;name\&quot;: \&quot;bourbon\&quot;\n },\n {\n \&quot;id\&quot;: 2047,\n \&quot;image\&quot;: \&quot;salt.jpg\&quot;,\n \&quot;name\&quot;: \&quot;salt\&quot;\n }\n ],\n \&quot;number\&quot;: 2,\n \&quot;step\&quot;: \&quot;Put the butter, molasses, salt and cooled bourbon mixture in a food processor and process until smooth.\&quot;\n },\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404730,\n \&quot;image\&quot;: \&quot;plastic-wrap.jpg\&quot;,\n \&quot;name\&quot;: \&quot;plastic wrap\&quot;\n },\n {\n \&quot;id\&quot;: 404783,\n \&quot;image\&quot;: \&quot;bowl.jpg\&quot;,\n \&quot;name\&quot;: \&quot;bowl\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [],\n \&quot;number\&quot;: 3,\n \&quot;step\&quot;: \&quot;Scrape into a bowl, cover with plastic wrap and refrigerate for at least 1 hour to allow the flavors to meld.\&quot;\n },\n {\n \&quot;equipment\&quot;: [],\n \&quot;ingredients\&quot;: [],\n \&quot;length\&quot;: {\n \&quot;number\&quot;: 30,\n \&quot;unit\&quot;: \&quot;minutes\&quot;\n },\n \&quot;number\&quot;: 4,\n \&quot;step\&quot;: \&quot;Remove from the refrigerator about 30 minutes before using to soften.\&quot;\n }\n ]\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Extract Recipe from Website\nThis endpoint lets you extract recipe data such as title, ingredients, and instructions from any properly formatted Website.\n\nGET\n\nhttps://api.spoonacular.com/recipes/extract\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`url`** | string | https://foodista.com/recipe/ZHK4KPB6/chocolate-crinkle-cookies | The URL of the recipe page. |\n| `forceExtraction` | boolean | true | If true, the extraction will be triggered whether we already know the recipe or not. Use this only if information is missing as this operation is slower. |\n| `analyze` | boolean | false | If true, the recipe will be analyzed and classified resolving in more data such as cuisines, dish types, and more. |\n| `includeNutrition` | boolean | false | Whether nutrition data should be added to correctly parsed ingredients. |\n| `includeTaste` | boolean | false | Whether taste data should be added to correctly parsed ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/extract?url\u003dhttps://foodista.com/recipe/ZHK4KPB6/chocolate-crinkle-cookies\n\n```\n{/* recipe data as in Get Recipe Information endpoint */}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n1 points\n\nif `analyze` is set to true.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Ingredients by ID Widget\nVisualize a recipe\u0027s ingredient list.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/ingredientWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1082038 | The recipe id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `measure` | string | us | Whether the the measures should be \u0027us\u0027 or \u0027metric\u0027. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1082038/ingredientWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Ingredients by ID Image\nVisualize a recipe\u0027s ingredient list.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/ingredientWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1082038 | The recipe id. |\n| `measure` | string | metric | Whether the the measures should be \u0027us\u0027 or \u0027metric\u0027. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1082038/ingredientWidget\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Taste by ID Widget\nGet a recipe\u0027s taste. The tastes supported are sweet, salty, sour, bitter, savory, and fatty.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/tasteWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 69095 | The recipe id. |\n| `normalize` | boolean | false | Normalize to the strongest taste. |\n| `rgb` | string | 75,192,192 | Red, green, blue values for the chart color. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/69095/tasteWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Taste by ID Image\nGet a recipe\u0027s taste as an image. The tastes supported are sweet, salty, sour, bitter, savory, and fatty.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/tasteWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 69095 | The recipe id. |\n| `normalize` | boolean | false | Normalize to the strongest taste. |\n| `rgb` | string | 75,192,192 | Red, green, blue values for the chart color. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/69095/tasteWidget.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Equipment by ID Widget\nVisualize a recipe\u0027s equipment list.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/equipmentWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 44860 | The recipe id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/44860/equipmentWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Equipment by ID Image\nVisualize a recipe\u0027s equipment list as an image.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/equipmentWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 44860 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/44860/equipmentWidget.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Price Breakdown by ID Widget\nVisualize a recipe\u0027s price breakdown.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/priceBreakdownWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1082038 | The recipe id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `mode` | number | 1 | The mode in which the widget should be delivered. 1 \u003d separate views (compact), 2 \u003d all in one view (full). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1082038/priceBreakdownWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Price Breakdown by ID Image\nVisualize a recipe\u0027s price breakdown.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/priceBreakdownWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1082038 | The recipe id. |\n| `mode` | number | 1 | The mode in which the widget should be delivered. 1 \u003d separate views (compact), 2 \u003d all in one view (full). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1082038/priceBreakdownWidget.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Taste Widget\nVisualize a recipe\u0027s taste information as HTML including CSS. You can play around with that endpoint!\n\nFull example code of how to work with widgets can be found in our [spoonacular-widget GitHub](https://github.com/ddsky/spoonacular-widgets).\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeTaste\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientList`** | string | 1 lemon | The ingredient list of the recipe, one ingredient per line. |\n| `normalize` | boolean | false | Normalize to the strongest taste. |\n| `rgb` | string | 75,192,192 | Red, green, blue values for the chart color. |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeTaste\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Nutrition Widget\nVisualize a recipe\u0027s nutritional information as HTML including CSS. You can play around with that endpoint!\n\nFull example code of how to work with widgets can be found in our [spoonacular-widget GitHub](https://github.com/ddsky/spoonacular-widgets).\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeNutrition\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientList`** | string | 3 oz flour | The ingredient list of the recipe, one ingredient per line. |\n| **`servings`** | number | 2 | The number of servings. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showBacklink` | boolean | true | Whether to show a backlink to spoonacular. If set false, this call counts against your quota. |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeNutrition\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nunless \&quot;showBacklink\&quot; is true, then 0 points. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Price Breakdown Widget\nVisualize the price breakdown of a recipe. You can play around with that endpoint!\n\nFull example code of how to work with widgets can be found in our [spoonacular-widget GitHub](https://github.com/ddsky/spoonacular-widgets).\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizePriceEstimator\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientList`** | string | 3 oz flour | The ingredient list of the recipe, one ingredient per line. |\n| **`servings`** | number | 2 | The number of servings. |\n| `mode` | number | 1 | The mode in which the widget should be delivered. 1 \u003d separate views (compact), 2 \u003d all in one view (full). |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showBacklink` | boolean | true | Whether to show a backlink to spoonacular. If set false, this call counts against your quota. |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizePriceEstimator\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example::\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nunless \&quot;showBacklink\&quot; is true, then 0 points. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Equipment Widget\nVisualize the equipment used to make a recipe. You can play around with that endpoint!\n\nFull example code of how to work with widgets can be found in our [spoonacular-widget GitHub](https://github.com/ddsky/spoonacular-widgets).\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeEquipment\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`instructions`** | string | Preheat oven. Cut cucumber with a knife and put in a blender. | The recipe\u0027s instructions. |\n| `view` | string | grid | How to visualize the equipment, either \&quot;grid\&quot; or \&quot;list\&quot;. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showBacklink` | boolean | true | Whether to show a backlink to spoonacular. If set false, this call counts against your quota. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeEquipment\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nunless \&quot;showBacklink\&quot; is true, then 0 points. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Analyze Recipe\nThis endpoint allows you to send raw recipe information, such as title, servings, and ingredients, to then see what we compute (badges, diets, nutrition, and more). This is useful if you have your own recipe data and want to enrich it with our semantic analysis.\n\nPOST\n\nhttps://api.spoonacular.com/recipes/analyze\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n| `includeNutrition` | boolean | false | Whether nutrition data should be added to correctly parsed ingredients. |\n| `includeTaste` | boolean | false | Whether taste data should be added to correctly parsed ingredients. |\n\nExample Request and Body\n\nPOST\n\nhttps://api.spoonacular.com/recipes/analyze\n\n```\n{\n \&quot;title\&quot;: \&quot;Spaghetti Carbonara\&quot;,\n \&quot;servings\&quot;: 2,\n \&quot;ingredients\&quot;: [\n \&quot;1 lb spaghetti\&quot;,\n \&quot;3.5 oz pancetta\&quot;,\n \&quot;2 Tbsps olive oil\&quot;,\n \&quot;1 egg\&quot;,\n \&quot;0.5 cup parmesan cheese\&quot;\n ],\n \&quot;instructions\&quot;: \&quot;Bring a large pot of water to a boil and season generously with salt. Add the pasta to the water once boiling and cook until al dente. Reserve 2 cups of cooking water and drain the pasta. \&quot;\n}\n```\n\nExample Response\n\n```\n/* recipe data as in Get Recipe Information endpoint */\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. If `includeNutrition` is set to true\n\n0.5 points\n\nwill be added. If `includeTaste` is set to true\n\n0.5 points\n\nwill be added. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Summarize Recipe\nAutomatically generate a short description that summarizes key information about the recipe.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/summary\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 4632 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/4632/summary\n\n```\n{\n \&quot;id\&quot;: 4632,\n \&quot;summary\&quot;: \&quot;The recipe Soy-and-Ginger-Glazed Salmon with Udon Noodles can be made in approximately 1 hour and 35 minutes. One portion of this dish contains about 48g of protein, 17g of fat, and a total of 552 calories. This recipe serves 4. For $5.91 per serving, this recipe covers 47% of your daily requirements of vitamins and minerals. It works well as a main course. 1 person has tried and liked this recipe. It is brought to you by Food and Wine. If you have fresh ginger, udon noodles, salmon fillets, and a few other ingredients on hand, you can make it. It is a good option if you\u0027re following a dairy free and pescatarian diet. All things considered, we decided this recipe deserves a spoonacular score of 92%. This score is great. If you like this recipe, take a look at these similar recipes: Salmon With Soy-ginger Noodles, Ginger-Soy Salmon With Soba Noodles, and Soy \u0026 ginger salmon with soba noodles.\&quot;,\n \&quot;title\&quot;: \&quot;Soy-and-Ginger-Glazed Salmon with Udon Noodles\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Create Recipe Card\nGenerate a recipe card for a recipe.\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeRecipe\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: multipart/form-data`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`title`** | string | My recipe | The title of the recipe. |\n| **`ingredients`** | string | 2 cups of green beans | The ingredient list of the recipe, one ingredient per line (separate lines with \\\\n). |\n| **`instructions`** | string | cook the beans | The instructions to make the recipe. One step per line (separate lines with \\\\n). |\n| **`readyInMinutes`** | number | 60 | The number of minutes it takes to get the recipe on the table. |\n| **`servings`** | number | 2 | The number of servings the recipe makes. |\n| **`mask`** | string | ellipseMask | The mask to put over the recipe image (\&quot;ellipseMask\&quot;, \&quot;diamondMask\&quot;, \&quot;starMask\&quot;, \&quot;heartMask\&quot;, \&quot;potMask\&quot;, \&quot;fishMask\&quot;). |\n| **`backgroundImage`** | string | background1 | The background image (\&quot;none\&quot;,\&quot;background1\&quot;, or \&quot;background2\&quot;). |\n| `image` | binary | The binary image of the recipe as jpg. |\n| `imageUrl` | string | https://recipe.com/image.jpg | If you do not sent a binary image you can also pass the image URL. |\n| `author` | string | Anna Banana | The author of the recipe. |\n| `backgroundColor` | string | #ffffff | The background color for the recipe card as a hex-string. |\n| `fontColor` | string | #333333 | The font color for the recipe card as a hex-string. |\n| `source` | string | spoonacular.com | The source of the recipe. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeRecipe\n\n```\n{\n \&quot;url\&quot;: \&quot;https://spoonacular.com/url-to-generated-recipe-card.jpg\&quot;\n}\n```\n\nThe API response will contain a link to the generated image. It could look like this for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Create Recipe Card\nGenerate a recipe card for a recipe.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/card\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 4632 | The recipe id. |\n| `mask` | string | ellipseMask | The mask to put over the recipe image (\&quot;ellipseMask\&quot;, \&quot;diamondMask\&quot;, \&quot;starMask\&quot;, \&quot;heartMask\&quot;, \&quot;potMask\&quot;, \&quot;fishMask\&quot;). |\n| `backgroundImage` | string | background1 | The background image (\&quot;none\&quot;,\&quot;background1\&quot;, or \&quot;background2\&quot;). |\n| `backgroundColor` | string | ffffff | The background color for the recipe card as a hex-string. |\n| `fontColor` | string | 333333 | The font color for the recipe card as a hex-string. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/4632/card\n\n```\n{\n \&quot;url\&quot;: \&quot;https://spoonacular.com/url-to-generated-recipe-card.jpg\&quot;,\n}\n```\n\nThe API response will contain a link to the generated image. It could look like this for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Analyze Recipe Instructions\nThis endpoint allows you to break down instructions into atomic steps. Furthermore, each step will contain the ingredients and equipment required. Additionally, all ingredients and equipment from the recipe\u0027s instructions will be extracted independently of the step they\u0027re used in.\n\nPOST\n\nhttps://api.spoonacular.com/recipes/analyzeInstructions\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`instructions`** | string | Put the garlic in a pan and then add the onion. Add some salt and oregano. | The instructions to be analyzed. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/analyzeInstructions\n\n```\n{\n \&quot;parsedInstructions\&quot;: [\n {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;steps\&quot;: [\n {\n \&quot;number\&quot;: 1,\n \&quot;step\&quot;: \&quot;Put the garlic in a pan and then add the onion.\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 11215,\n \&quot;name\&quot;: \&quot;garlic\&quot;,\n \&quot;localizedName\&quot;: \&quot;garlic\&quot;,\n \&quot;image\&quot;: \&quot;garlic.png\&quot;\n },\n {\n \&quot;id\&quot;: 11282,\n \&quot;name\&quot;: \&quot;onion\&quot;,\n \&quot;localizedName\&quot;: \&quot;onion\&quot;,\n \&quot;image\&quot;: \&quot;brown-onion.png\&quot;\n }\n ],\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404645,\n \&quot;name\&quot;: \&quot;frying pan\&quot;,\n \&quot;localizedName\&quot;: \&quot;frying pan\&quot;,\n \&quot;image\&quot;: \&quot;pan.png\&quot;\n }\n ]\n },\n {\n \&quot;number\&quot;: 2,\n \&quot;step\&quot;: \&quot;Add some salt and oregano.\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 2027,\n \&quot;name\&quot;: \&quot;oregano\&quot;,\n \&quot;localizedName\&quot;: \&quot;oregano\&quot;,\n \&quot;image\&quot;: \&quot;oregano.jpg\&quot;\n },\n {\n \&quot;id\&quot;: 2047,\n \&quot;name\&quot;: \&quot;salt\&quot;,\n \&quot;localizedName\&quot;: \&quot;salt\&quot;,\n \&quot;image\&quot;: \&quot;salt.jpg\&quot;\n }\n ],\n \&quot;equipment\&quot;: []\n }\n ]\n }\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 2027,\n \&quot;name\&quot;: \&quot;oregano\&quot;\n },\n {\n \&quot;id\&quot;: 11215,\n \&quot;name\&quot;: \&quot;garlic\&quot;\n },\n {\n \&quot;id\&quot;: 11282,\n \&quot;name\&quot;: \&quot;onion\&quot;\n },\n {\n \&quot;id\&quot;: 2047,\n \&quot;name\&quot;: \&quot;salt\&quot;\n }\n ],\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404645,\n \&quot;name\&quot;: \&quot;frying pan\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Classify Cuisine\nClassify the recipe\u0027s cuisine.\n\nPOST\n\nhttps://api.spoonacular.com/recipes/cuisine\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`title`** | string | Pork roast with green beans | The title of the recipe. |\n| **`ingredientList`** | string | 3 oz pork shoulder | The ingredient list of the recipe, one ingredient per line (separate lines with \\\\n). |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/cuisine\n\n```\n{\n \&quot;cuisine\&quot;: \&quot;Mediterranean\&quot;,\n \&quot;cuisines\&quot;: [\n \&quot;Mediterranean\&quot;,\n \&quot;European\&quot;,\n \&quot;Italian\&quot;\n ],\n \&quot;confidence\&quot;: 0.0\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Analyze a Recipe Search Query\nParse a recipe search query to find out its intention.\n\nGET\n\nhttps://api.spoonacular.com/recipes/queries/analyze\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`q`** | string | salmon with fusilli and no nuts | The recipe search query. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/queries/analyze?q\u003dsalmon+with+fusilli+and+no+nuts\n\n```\n{\n \&quot;dishes\&quot;: [\n {\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/salmon.png\&quot;,\n \&quot;name\&quot;: \&quot;salmon\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;image\&quot;: \&quot;fusilli.jpg\&quot;,\n \&quot;include\&quot;: true,\n \&quot;name\&quot;: \&quot;fusilli\&quot;\n },\n {\n \&quot;image\&quot;: \&quot;nuts-mixed.jpg\&quot;,\n \&quot;include\&quot;: false,\n \&quot;name\&quot;: \&quot;nuts mixed\&quot;\n }\n ],\n \&quot;cuisines\&quot;: [],\n \&quot;modifiers\&quot;: []\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Convert Amounts\nConvert amounts like \&quot;2 cups of flour to grams\&quot;.\n\nGET\n\nhttps://api.spoonacular.com/recipes/convert\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientName`** | string | flour | The ingredient which you want to convert. |\n| **`sourceAmount`** | number | 2.5 | The amount from which you want to convert, e.g. the 2.5 in \&quot;2.5 cups of flour to grams\&quot;. |\n| **`sourceUnit`** | string | cups | The unit from which you want to convert, e.g. the grams in \&quot;2.5 cups of flour to grams\&quot;. You can also use \&quot;piece\&quot;, e.g. \&quot;3.4 oz tomatoes to piece\&quot; |\n| **`targetUnit`** | string | grams | The unit to which you want to convert, e.g. the grams in \&quot;2.5 cups of flour to grams\&quot;. You can also use \&quot;piece\&quot;, e.g. \&quot;3.4 oz tomatoes to piece\&quot; |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/convert?ingredientName\u003dflour\u0026sourceAmount\u003d2.5\u0026sourceUnit\u003dcups\u0026targetUnit\u003dgrams\n\n```\n{\n \&quot;sourceAmount\&quot;: 2.5,\n \&quot;sourceUnit\&quot;: \&quot;cups\&quot;,\n \&quot;targetAmount\&quot;: 312.5,\n \&quot;targetUnit\&quot;: \&quot;grams\&quot;,\n \&quot;answer\&quot;: \&quot;2.5 cups flour translates to 312.5 grams.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Parse Ingredients\nExtract an ingredient from plain text.\n\nPOST\n\nhttps://api.spoonacular.com/recipes/parseIngredients\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientList`** | string | 1 cup green tea | The ingredient list of the recipe, one ingredient per line. |\n| **`servings`** | number | 1 | The number of servings that you can make from the ingredients. |\n| `includeNutrition` | boolean | true | Whether nutrition data should be added to correctly parsed ingredients. |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/parseIngredients\n\n```\n[\n {\n \&quot;id\&quot;: 10014355,\n \&quot;original\&quot;: \&quot;1 cup green tea\&quot;,\n \&quot;originalName\&quot;: \&quot;green tea\&quot;,\n \&quot;name\&quot;: \&quot;tea\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;cup\&quot;,\n \&quot;unitShort\&quot;: \&quot;cup\&quot;,\n \&quot;unitLong\&quot;: \&quot;cup\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;g\&quot;,\n \&quot;oz\&quot;,\n \&quot;fluid ounce\&quot;,\n \&quot;cup\&quot;\n ],\n \&quot;estimatedCost\&quot;: {\n \&quot;value\&quot;: 1786.86,\n \&quot;unit\&quot;: \&quot;US Cents\&quot;\n },\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;aisle\&quot;: \&quot;Tea and Coffee\&quot;,\n \&quot;image\&quot;: \&quot;green-tea-leaves.jpg\&quot;,\n \&quot;meta\&quot;: [\n \&quot;green\&quot;\n ],\n \&quot;nutrition\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 2.36,\n \&quot;unit\&quot;: \&quot;kcal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.12\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.0\n },\n {\n \&quot;name\&quot;: \&quot;Saturated Fat\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.03\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0.71,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.24\n },\n {\n \&quot;name\&quot;: \&quot;Net Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0.71,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.26\n },\n {\n \&quot;name\&quot;: \&quot;Sugar\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.0\n },\n {\n \&quot;name\&quot;: \&quot;Cholesterol\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.0\n },\n {\n \&quot;name\&quot;: \&quot;Sodium\&quot;,\n \&quot;amount\&quot;: 7.08,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.31\n },\n {\n \&quot;name\&quot;: \&quot;Caffeine\&quot;,\n \&quot;amount\&quot;: 47.2,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 15.73\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.0\n },\n {\n \&quot;name\&quot;: \&quot;Manganese\&quot;,\n \&quot;amount\&quot;: 0.52,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 25.84\n },\n {\n \&quot;name\&quot;: \&quot;Folate\&quot;,\n \&quot;amount\&quot;: 11.8,\n \&quot;unit\&quot;: \&quot;Âµg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 2.95\n },\n {\n \&quot;name\&quot;: \&quot;Potassium\&quot;,\n \&quot;amount\&quot;: 87.32,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 2.49\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin B2\&quot;,\n \&quot;amount\&quot;: 0.03,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.94\n },\n {\n \&quot;name\&quot;: \&quot;Magnesium\&quot;,\n \&quot;amount\&quot;: 7.08,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.77\n },\n {\n \&quot;name\&quot;: \&quot;Copper\&quot;,\n \&quot;amount\&quot;: 0.02,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.18\n }\n ],\n \&quot;properties\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Glycemic Index\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Glycemic Load\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n }\n ],\n \&quot;flavonoids\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Cyanidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Petunidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Delphinidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Malvidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Pelargonidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Peonidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Catechin\&quot;,\n \&quot;amount\&quot;: 3.56,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Epigallocatechin\&quot;,\n \&quot;amount\&quot;: 19.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Epicatechin\&quot;,\n \&quot;amount\&quot;: 5.03,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Epicatechin 3-gallate\&quot;,\n \&quot;amount\&quot;: 13.83,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Epigallocatechin 3-gallate\&quot;,\n \&quot;amount\&quot;: 22.09,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Theaflavin\&quot;,\n \&quot;amount\&quot;: 3.73,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Thearubigins\&quot;,\n \&quot;amount\&quot;: 191.87,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Eriodictyol\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Hesperetin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Naringenin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Apigenin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Luteolin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Isorhamnetin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Kaempferol\&quot;,\n \&quot;amount\&quot;: 3.33,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Myricetin\&quot;,\n \&quot;amount\&quot;: 1.06,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Quercetin\&quot;,\n \&quot;amount\&quot;: 5.17,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Theaflavin-3,3\u0027-digallate\&quot;,\n \&quot;amount\&quot;: 4.13,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n \n\n#### Parameters\n},\n {\n \&quot;name\&quot;: \&quot;Theaflavin-3\u0027-gallate\&quot;,\n \&quot;amount\&quot;: 3.56,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Theaflavin-3-gallate\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Gallocatechin\&quot;,\n \&quot;amount\&quot;: 2.95,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n }\n ],\n \&quot;caloricBreakdown\&quot;: {\n \&quot;percentProtein\&quot;: 0.0,\n \&quot;percentFat\&quot;: 0.0,\n \&quot;percentCarbs\&quot;: 100.0\n },\n \&quot;weightPerServing\&quot;: {\n \&quot;amount\&quot;: 236,\n \&quot;unit\&quot;: \&quot;g\&quot;\n }\n }\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nper parsed ingredient. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Compute Glycemic Load\nRetrieve the glycemic index for a list of ingredients and compute the individual and total glycemic load.\n\nPOST\n\nhttps://api.spoonacular.com/food/ingredients/glycemicLoad\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/json`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`(post body)`** | string | { \&quot;ingredients\&quot;:\\[ \&quot;1 kiwi\&quot;, \&quot;2 cups rice\&quot;, \&quot;2 glasses of water\&quot; \\]} | A json body. |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request\n\nPOST\n\nhttps://api.spoonacular.com/food/ingredients/glycemicLoad\n\n```\n{\n \&quot;ingredients\&quot;:[\n \&quot;1 kiwi\&quot;,\n \&quot;2 cups rice\&quot;,\n \&quot;2 glasses of water\&quot;\n ]\n}\n```\n\nExample Response\n\n```\n{\n \&quot;totalGlycemicLoad\&quot;: 183.64,\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 9148,\n \&quot;original\&quot;: \&quot;1 kiwi\&quot;,\n \&quot;glycemicIndex\&quot;: 52.67,\n \&quot;glycemicLoad\&quot;: 5.59\n },\n {\n \&quot;id\&quot;: 20444,\n \&quot;original\&quot;: \&quot;2 cups rice\&quot;,\n \&quot;glycemicIndex\&quot;: 61.19,\n \&quot;glycemicLoad\&quot;: 178.05\n },\n {\n \&quot;id\&quot;: 14412,\n \&quot;original\&quot;: \&quot;2 glasses of water\&quot;,\n \&quot;glycemicIndex\&quot;: 0.0,\n \&quot;glycemicLoad\&quot;: 0.0\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.1 points\n\nper ingredient.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Autocomplete Ingredient Search\nAutocomplete the entry of an ingredient.\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/autocomplete\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | appl | The partial or full ingredient name. |\n| `number` | number | 10 | The number of results to return (between 1 and 100). |\n| `language` | text | en | Language code, either \&quot;en\&quot; or \&quot;de\&quot;. |\n| `metaInformation` | boolean | false | Whether to return more meta information about the ingredients. |\n| `intolerances` | string | egg | A comma-separated list of intolerances. All recipes returned must not contain ingredients that are not suitable for people with the intolerances entered. See a full [list of supported intolerances](https://spoonacular.com/food-api/docs#Intolerances). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/autocomplete?query\u003dappl\u0026number\u003d5\n\n```\n[\n {\n \&quot;name\&quot;: \&quot;apple\&quot;,\n \&quot;image\&quot;: \&quot;apple.jpg\&quot;,\n \&quot;id\&quot;: 9003,\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;small\&quot;,\n \&quot;large\&quot;,\n \&quot;piece\&quot;,\n \&quot;slice\&quot;,\n \&quot;g\&quot;,\n \&quot;extra small\&quot;,\n \&quot;medium\&quot;,\n \&quot;oz\&quot;,\n \&quot;cup slice\&quot;,\n \&quot;cup\&quot;,\n \&quot;serving\&quot;\n ]\n },\n {\n \&quot;name\&quot;: \&quot;applesauce\&quot;,\n \&quot;image\&quot;: \&quot;applesauce.png\&quot;,\n \&quot;id\&quot;: 9019,\n \&quot;aisle\&quot;: \&quot;Canned and Jarred\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;g\&quot;,\n \&quot;oz\&quot;,\n \&quot;cup\&quot;,\n \&quot;serving\&quot;,\n \&quot;tablespoon\&quot;\n ]\n },\n {\n \&quot;name\&quot;: \&quot;apple juice\&quot;,\n \&quot;image\&quot;: \&quot;apple-juice.jpg\&quot;,\n \&quot;id\&quot;: 9016,\n \&quot;aisle\&quot;: \&quot;Beverages\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;g\&quot;,\n \&quot;drink box\&quot;,\n \&quot;fl oz\&quot;,\n \&quot;oz\&quot;,\n \&quot;teaspoon\&quot;,\n \&quot;cup\&quot;,\n \&quot;serving\&quot;,\n \&quot;tablespoon\&quot;\n ]\n },\n {\n \&quot;name\&quot;: \&quot;apple cider\&quot;,\n \&quot;image\&quot;: \&quot;apple-cider.jpg\&quot;,\n \&quot;id\&quot;: 1009016,\n \&quot;aisle\&quot;: \&quot;Beverages\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;g\&quot;,\n \&quot;drink box\&quot;,\n \&quot;fl oz\&quot;,\n \&quot;oz\&quot;,\n \&quot;teaspoon\&quot;,\n \&quot;bottle NFS\&quot;,\n \&quot;cup\&quot;,\n \&quot;serving\&quot;,\n \&quot;tablespoon\&quot;\n ]\n },\n {\n \&quot;name\&quot;: \&quot;apple jelly\&quot;,\n \&quot;image\&quot;: \&quot;apple-jelly.jpg\&quot;,\n \&quot;id\&quot;: 10019297,\n \&quot;aisle\&quot;: \&quot;Nut butters, Jams, and Honey\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;g\&quot;,\n \&quot;oz\&quot;,\n \&quot;packet\&quot;,\n \&quot;teaspoon\&quot;,\n \&quot;cup\&quot;,\n \&quot;serving\&quot;,\n \&quot;tablespoon\&quot;\n ]\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\nand\n\n0.01 points\n\nif `metaInformation` is set to true.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Ingredient Search\nSearch for simple whole foods (e.g. fruits, vegetables, nuts, grains, meat, fish, dairy etc.).\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | apple | The partial or full ingredient name. |\n| `addChildren` | boolean | true | Whether to add children of found foods. |\n| `minProteinPercent` | number | 10 | The minimum percentage of protein the food must have (between 0 and 100). |\n| `maxProteinPercent` | number | 90 | The maximum percentage of protein the food can have (between 0 and 100). |\n| `minFatPercent` | number | 10 | The minimum percentage of fat the food must have (between 0 and 100). |\n| `maxFatPercent` | number | 90 | The maximum percentage of fat the food can have (between 0 and 100). |\n| `minCarbsPercent` | number | 10 | The minimum percentage of carbs the food must have (between 0 and 100). |\n| `maxCarbsPercent` | number | 90 | The maximum percentage of carbs the food can have (between 0 and 100). |\n| `metaInformation` | boolean | false | Whether to return more meta information about the ingredients. |\n| `intolerances` | string | egg | A comma-separated list of intolerances. All recipes returned must not contain ingredients that are not suitable for people with the intolerances entered. See a full [list of supported intolerances](https://spoonacular.com/food-api/docs#Intolerances). |\n| `sort` | string | calories | The strategy to sort ingredients by. You can sort by any nutrient listed [here](https://spoonacular.com/food-api/docs#Recipe-Sorting-Options). |\n| `sortDirection` | string | asc | The direction in which to sort. Must be either \u0027asc\u0027 (ascending) or \u0027desc\u0027 (descending). |\n| `language` | text | en | Language code, either \&quot;en\&quot; or \&quot;de\&quot;. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 990). |\n| `number` | number | 10 | The number of expected results (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/search?query\u003dbanana\u0026number\u003d2\u0026sort\u003dcalories\u0026sortDirection\u003ddesc\n\n```\n{\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 19400,\n \&quot;name\&quot;: \&quot;banana chips\&quot;,\n \&quot;image\&quot;: \&quot;banana-chips.jpg\&quot;\n },\n {\n \&quot;id\&quot;: 93779,\n \&quot;name\&quot;: \&quot;banana liqueur\&quot;,\n \&quot;image\&quot;: \&quot;limoncello.jpg\&quot;\n }\n ],\n \&quot;offset\&quot;: 0,\n \&quot;number\&quot;: 2,\n \&quot;totalResults\&quot;: 13\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper result if `metaInformation` is set to true.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Ingredient Substitutes\nSearch for substitutes for a given ingredient.\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/substitutes\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientName`** | string | butter | The name of the ingredient you want to replace. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/substitutes?ingredientName\u003dbutter\n\n```\n{\n \&quot;ingredient\&quot;: \&quot;butter\&quot;,\n \&quot;substitutes\&quot;: [\n \&quot;1 cup \u003d 7/8 cup shortening and 1/2 tsp salt\&quot;,\n \&quot;1 cup \u003d 7/8 cup vegetable oil + 1/2 tsp salt\&quot;,\n \&quot;1/2 cup \u003d 1/4 cup buttermilk + 1/4 cup unsweetened applesauce\&quot;,\n \&quot;1 cup \u003d 1 cup margarine\&quot;\n ],\n \&quot;message\&quot;: \&quot;Found 4 substitutes for the ingredient.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Ingredient Substitutes by ID\nSearch for substitutes for a given ingredient.\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/{id}/substitutes\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1001 | The id of the ingredient you want substitutes for. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/1001/substitutes\n\n```\n{\n \&quot;ingredient\&quot;: \&quot;butter\&quot;,\n \&quot;substitutes\&quot;: [\n \&quot;1 cup \u003d 7/8 cup shortening and 1/2 tsp salt\&quot;,\n \&quot;1 cup \u003d 7/8 cup vegetable oil + 1/2 tsp salt\&quot;,\n \&quot;1/2 cup \u003d 1/4 cup buttermilk + 1/4 cup unsweetened applesauce\&quot;,\n \&quot;1 cup \u003d 1 cup margarine\&quot;\n ],\n \&quot;message\&quot;: \&quot;Found 4 substitutes for the ingredient.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Compute Ingredient Amount\nCompute the amount you need of a certain ingredient for a certain nutritional goal. For example, how much pineapple do you have to eat to get 10 grams of protein?\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/{id}/amount\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 9266 | The id of the ingredient you want the amount for. |\n| **`nutrient`** | string | protein | The target nutrient. See a [list of supported nutrients](https://spoonacular.com/food-api/docs#Nutrition). |\n| **`target`** | number | 2 | The target number of the given nutrient. |\n| `unit` | string | oz | The target unit. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/9266/amount?nutrient\u003dprotein\u0026target\u003d10\u0026unit\u003doz\n\n```\n{\n \&quot;amount\&quot;: 65.32,\n \&quot;unit\&quot;: \&quot;oz\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Ingredients Widget\nVisualize ingredients of a recipe. You can play around with that endpoint!\n\nFull example code of how to work with widgets can be found in our [spoonacular-widget GitHub](https://github.com/ddsky/spoonacular-widgets).\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeIngredients\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientList`** | string | 3 oz flour | The ingredient list of the recipe, one ingredient per line. |\n| **`servings`** | number | 2 | The number of servings. |\n| `measure` | string | metric | The original system of measurement, either \&quot;metric\&quot; or \&quot;us\&quot;. |\n| `view` | string | grid | How to visualize the ingredients, either \&quot;grid\&quot; or \&quot;list\&quot;. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showBacklink` | boolean | true | Whether to show a backlink to spoonacular. If set false, this call counts against your quota. |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeIngredients\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nunless \&quot;showBacklink\&quot; is true, then 0 points. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Product Information\nUse a product id to get full information about a product, such as ingredients, nutrition, etc. The nutritional information is per serving.\n\nGET\n\nhttps://api.spoonacular.com/food/products/{id}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 22347 | The id of the packaged food. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/22347\n\n```\n{\n \&quot;id\&quot;: 22347,\n \&quot;title\&quot;: \&quot;SNICKERS Minis Size Chocolate Candy Bars Variety Mix 10.5-oz. Bag\&quot;,\n \&quot;breadcrumbs\&quot;: [\n \&quot;bars\&quot;\n ],\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;badges\&quot;: [\n \&quot;msg_free\&quot;,\n \&quot;no_artificial_colors\&quot;,\n \&quot;no_artificial_flavors\&quot;,\n \&quot;no_artificial_ingredients\&quot;,\n \&quot;gluten_free\&quot;\n ],\n \&quot;importantBadges\&quot;: [\n \&quot;no_artificial_flavors\&quot;,\n \&quot;no_artificial_colors\&quot;,\n \&quot;no_artificial_ingredients\&quot;,\n \&quot;gluten_free\&quot;,\n \&quot;msg_free\&quot;\n ],\n \&quot;ingredientCount\&quot;: 32,\n \&quot;generatedText\&quot;: null,\n \&quot;ingredientList\&quot;: \&quot;Snickers Brand Almond Bar: Milk Chocolate (Sugar, Cocoa Butter, Chocolate, Skim Milk, Lactose, Milkfat, Soy Lecithin, Artificial Flavor), Corn Syrup, Almonds, Sugar, Milkfat, Skim Milk, Less than 2% - Lactose, Salt, Hydrogenated Palm Kernel Oil and/or Palm Oil, Egg Whites, Chocolate, Artificial Flavor. Snickers Brand: Milk Chocolate (Sugar, Cocoa Butter, Chocolate, Skim Milk, Lactose, Milkfat, Soy Lecithin, Artificial Flavor), Peanuts, Corn Syrup, Sugar, Milkfat, Skim Milk, Partially Hydrogenated Soybean Oil, Lactose, Salt, Egg Whites, Chocolate, Artificial Flavor. Snickers Brand Peanut Butter Squared Bars: Milk Chocolate (Sugar, Cocoa Butter, Chocolate, Skim Milk, Lactose, Milkfat, Soy Lecithin, Artificial Flavor), Peanut Butter (Peanuts, Partially Hydrogenated Soybean Oil), Peanuts, Sugar, Corn Syrup, Vegetable Oil (Hydrogenated Palm Kernel Oil, Palm Oil, Rapeseed Oil and Cottonseed Oil and/or Partially Hydrogenated Palm Kernel Oil), Lactose, Corn Syrup Solids, Invert Sugar, Less than 2% - Glycerin, Dextrose, Skim Milk, Salt, Calcium Carbonate, Partially Hydrogenated Soybean Oil, Egg Whites, Artificial Flavor, TBHQ to Maintain Freshness\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;emulsifier\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;added sugar\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;sweetener\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;cooking fat\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;cooking oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;lecithin\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;yeast\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;menu item type\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;nuts\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;partially hydrogenated vegetable oil\&quot;,\n \&quot;safety_level\&quot;: \&quot;low\&quot;\n },\n {\n \&quot;description\&quot;: \&quot;Unlike partially hydrogenated oils, fully hydrogenated oils do not contain trans fat and thus are currently considered safer.\&quot;,\n \&quot;name\&quot;: \&quot;hydrogenated vegetable oil\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;calcium\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;nut butter\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;legumes\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;refined sweetener\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;non food item\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;tree nuts\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;chocolate\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;sugar\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;snack\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;corn syrup\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;drink\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;milk\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;spread\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;vegetable oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;yeast nutrient\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;palm kernel oil\&quot;,\n \n\n#### Parameters\n\&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;artificial ingredient\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;stabilizer\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;additive\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;nutrient\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;soybean oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;supplement\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;mineral\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;artificial flavor\&quot;,\n \&quot;safety_level\&quot;: \&quot;medium\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;skim milk\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;peanuts\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;corn syrup solids\&quot;,\n \&quot;safety_level\&quot;: \&quot;medium\&quot;\n },\n {\n \&quot;description\&quot;: \&quot;Unlike partially hydrogenated oils, fully hydrogenated oils do not contain trans fat and thus are currently considered safer.\&quot;,\n \&quot;name\&quot;: \&quot;hydrogenated palm kernel oil\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;cottonseed oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;milkfat\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;lactose\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;corn syrup\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;cocoa butter\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;tbhq to maintain freshness\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;peanut butter\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;egg whites\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;sugar\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;milk chocolate\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;palm oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;artificial flavor\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;salt\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;almonds\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;skim milk less than 2% - lactose\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;vegetable oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;less than 2% - glycerin\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;dextrose\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: \&quot;Soy lecithin is not a concern for most people allergic to soy.\&quot;,\n \&quot;name\&quot;: \&quot;soy lecithin\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;invert sugar\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;chocolate\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;rapeseed oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;partially hydrogenated soybean oil\&quot;,\n \&quot;safety_level\&quot;: \&quot;low\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;calcium carbonate\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;partially hydrogenated palm kernel oil\&quot;,\n \&quot;safety_level\&quot;: \&quot;low\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;artificial flavor.snickers brand\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;snickers brand almond bar\&quot;,\n \&quot;safety_level\&quot;: null\n }\n ],\n \&quot;likes\&quot;: 0,\n \&quot;aisle\&quot;: \&quot;Sweet Snacks\&quot;,\n \&quot;nutrition\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 4,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 6.15\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 10,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 20\n },\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 200,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 10\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 26,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9.45\n }\n ],\n \&quot;caloricBreakdown\&quot;: {\n \&quot;percentProtein\&quot;: 22.22,\n \&quot;percentFat\&quot;: 20,\n \&quot;percentCarbs\&quot;: 57.78\n }\n },\n \&quot;price\&quot;: 324.0,\n \&quot;servings\&quot;: {\n \&quot;number\&quot;: 8,\n \&quot;size\&quot;: 4,\n \&quot;unit\&quot;: \&quot;pieces\&quot;,\n \&quot;raw\&quot;: \&quot;pcs\&quot;\n },\n \&quot;spoonacularScore\&quot;: 0.0\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Grocery Products\nThe spoonacular grocery products API allows you to search through all products. You can [find products](https://spoonacular.com/spoonacular.com#Search-Grocery-Products) by query (e.g. \&quot;pizza\&quot;) and/or by macro-nutrients (e.g. \u003c500 calories).\n\nOnce you found a product, you can get a lot of [detailed information](https://spoonacular.com/spoonacular.com#Get-Product-Information) about it such as nutrition, ingredients, cost, and where to find it in the supermarket.\n\nspoonacular analyzes every product and tries to retrieve meta information. This information is stored in `badges`.\n\nHere is a list of all possible badges a product can have:\n\n- egg\\_free\n- wheat\\_free\n- grain\\_free\n- peanut\\_free\n- primal\n- vegetarian\n- nut\\_free\n- vegan\n- pescetarian\n- dairy\\_free\n- gluten\\_free\n- paleo\n- msg\\_free\n- no\\_artificial\\_colors\n- no\\_artificial\\_flavors\n- no\\_artificial\\_ingredients\n- grass\\_fed\n- no\\_added\\_sugar\n- pasture\\_raised\n- free\\_range\n- cage\\_free\n- wild\\_caught\n- fair\\_trade\n- no\\_additives\n- hormone\\_free\n- no\\_preservatives\n- sugar\\_free\n- sulfite\\_free\n- corn\\_free\n- soy\\_free\n- nitrate\\_free\n- gmo\\_free\n- organic\n- kosher\n- halal\n- sustainable\n- non\\_alcoholic\n- lactose\\_free\n- whole\\_grain\n- whole\\_wheat\n- multigrain\n- sprouted\\_grain\n\n## Search Grocery Products\nSearch packaged food products, such as frozen pizza or Greek yogurt.\n\nGET\n\nhttps://api.spoonacular.com/food/products/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | greek yogurt | The search query. |\n| `minCalories` | number | 50 | The minimum amount of calories the product must have per serving. |\n| `maxCalories` | number | 800 | The maximum amount of calories the product can have per serving. |\n| `minCarbs` | number | 10 | The minimum amount of carbohydrates in grams the product must have per serving. |\n| `maxCarbs` | number | 100 | The maximum amount of carbohydrates in grams the product can have per serving. |\n| `minProtein` | number | 10 | The minimum amount of protein in grams the product must have per serving. |\n| `maxProtein` | number | 100 | The maximum amount of protein in grams the product can have per serving. |\n| `minFat` | number | 1 | The minimum amount of fat in grams the product must have per serving. |\n| `maxFat` | number | 100 | The maximum amount of fat in grams the product can have per serving. |\n| `addProductInformation` | boolean | false | If set to true, you get more information about the products returned. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 990). |\n| `number` | number | 10 | The number of expected results (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/search?query\u003dpizza\u0026number\u003d2\n\n```\n{\n \&quot;products\&quot;: [\n {\n \&quot;id\&quot;: 192386,\n \&quot;title\&quot;: \&quot;Pizza Buddy: Frozen Pizza Dough, 16 Oz\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n },\n {\n \&quot;id\&quot;: 27693,\n \&quot;title\&quot;: \&quot;Uno Pizza\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n ],\n \&quot;totalProducts\&quot;: 1258,\n \&quot;type\&quot;: \&quot;product\&quot;,\n \&quot;offset\&quot;: 0,\n \&quot;number\&quot;: 2\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper result returned. Since this endpoint combines the capabilities of four different endpoints into one, additional points may be required depending on the parameters you set. If `addProductInformation` is set to true,\n\n1 point\n\nwill be added per product returned. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Grocery Products by UPC\nGet information about a packaged food using its UPC.\n\nGET\n\nhttps://api.spoonacular.com/food/products/upc/{upc}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`upc`** | number | 041631000564 | The product\u0027s UPC. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/upc/041631000564\n\n```\n{\n \&quot;id\&quot;: 30004,\n \&quot;title\&quot;: \&quot;Swan Flour\&quot;,\n \&quot;badges\&quot;: [\n \&quot;egg_free\&quot;,\n \&quot;wheat_free\&quot;,\n \&quot;grain_free\&quot;,\n \&quot;peanut_free\&quot;,\n \&quot;primal\&quot;,\n \&quot;vegetarian\&quot;,\n \&quot;nut_free\&quot;,\n \&quot;vegan\&quot;,\n \&quot;pescetarian\&quot;,\n \&quot;dairy_free\&quot;,\n \&quot;paleo\&quot;,\n \&quot;gluten_free\&quot;\n ],\n \&quot;importantBadges\&quot;: [\n \&quot;gluten_free\&quot;,\n \&quot;paleo\&quot;,\n \&quot;primal\&quot;,\n \&quot;wheat_free\&quot;,\n \&quot;grain_free\&quot;\n ],\n \&quot;breadcrumbs\&quot;: [\n \&quot;flour\&quot;\n ],\n \&quot;generatedText\&quot;: \&quot;Swan Flour: This product is an awesome fit if you are searching for a healthy flour. This product has 1 ingredient (in our experience: the fewer ingredients, the better!) This product contains no ingredients that some research suggests you should avoid. One serving of this product provides 30 calories, 0g grams of fat, 0g grams of protein, and 8g grams of carbs.\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;ingredientCount\&quot;: null,\n \&quot;ingredientList\&quot;: \&quot;Potato Starch\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;starch\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;potato starch\&quot;,\n \&quot;safety_level\&quot;: null\n }\n ],\n \&quot;likes\&quot;: 0,\n \&quot;nutrition\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 30,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 10\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 8,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9.45\n }\n ],\n \&quot;caloricBreakdown\&quot;: {\n \&quot;percentProtein\&quot;: 22.22,\n \&quot;percentFat\&quot;: 20,\n \&quot;percentCarbs\&quot;: 57.78\n }\n },\n \&quot;price\&quot;: 0.0,\n \&quot;servings\&quot;: {\n \&quot;number\&quot;: 34,\n \&quot;size\&quot;: 1,\n \&quot;unit\&quot;: \&quot;tbsp\&quot;\n },\n \&quot;spoonacularScore\&quot;: 99.0,\n \&quot;credits\&quot;: {\n \&quot;text\&quot;: \&quot;openfoodtacts.org under (ODbL) v1.0\&quot;,\n \&quot;link\&quot;: \&quot;https://opendatacommons.org/licenses/odbl/1-0/\&quot;,\n \&quot;image\&quot;: \&quot;openfoodfacts.org under CC BY-SA 3.0 DEED\&quot;,\n \&quot;imageLink\&quot;: \&quot;https://creativecommons.org/licenses/by-sa/3.0/deed.en\&quot;\n }\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Custom Foods\nSearch custom foods in a user\u0027s account.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nGET\n\nhttps://api.spoonacular.com/food/customFoods/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | brat | The search query. |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 990). |\n| `number` | number | 10 | The number of expected results (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/customFoods/search?query\u003dbrat\u0026number\u003d2\u0026username\u003ddsky\u0026hash\u003d4b5v4398573406\n\n```\n{\n \&quot;customFoods\&quot;: [\n {\n \&quot;id\&quot;: 15,\n \&quot;title\&quot;: \&quot;Max Cafe Curry Bratwurst\&quot;,\n \&quot;servings\&quot;: 1,\n \&quot;imageUrl\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/bratwurst.jpg\&quot;,\n \&quot;price\&quot;: 6.9\n }\n ],\n \&quot;type\&quot;: \&quot;customFood\&quot;,\n \&quot;offset\&quot;: 0,\n \&quot;number\&quot;: 10\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper custom food returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Add Custom Foods\nAdd custom foods to a user\u0027s account. This could be something as simple as \&quot;1 banana\&quot; or even mini recipes like \&quot;1 toast with jam\&quot;.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nPOST\n\nhttps://api.spoonacular.com/food/customFoods/add\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`(post body)`** | string | { \&quot;title\&quot;: \&quot;My little afternoon snack\&quot;, \&quot;servings\&quot;: 2} | The json representing the custom food. |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nHere\u0027s the sample post request. The \&quot;id\&quot; should only be sent if you update an existing custom food for the user. Only \&quot;title\&quot; and \&quot;servings\&quot; is required, everything else is optional.\n\nThe response will be the custom food\u0027s id. If an image is available you can get it via https://img.spoonacular.com/custom-foods/#ID#-90x90.jpg where #ID# is the custom food\u0027s id.\n\nExample Request Body\n\nPOST\n\nhttps://api.spoonacular.com/food/customFoods/add\n\n```\n{\n \&quot;id\&quot;: 1,\n \&quot;title\&quot;: \&quot;Chickpea Lunchbox\&quot;,\n \&quot;servings\&quot;: 1,\n \&quot;customFoodBoxId\&quot;: 123,\n \&quot;nutrition\&quot;: {\n \&quot;calories\&quot;: 300\n },\n \&quot;meta\&quot;: {\&quot;diets\&quot;:[\&quot;vegan\&quot;,\&quot;vegetarian\&quot;],\&quot;intolerances\&quot;:[\&quot;sesame\&quot;,\&quot;soy\&quot;]},\n \&quot;imageUrl\&quot;: \&quot;https://images.unsplash.com/photo-1543353071-c953d88f7033?q\u003d80\u0026w\u003d500\u0026auto\u003dformat\u0026fit\u003dcrop\&quot;\n}\n\n```\n\n#### Quotas\nCalling this endpoint requires\n\n5 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Comparable Products\nFind comparable products to the given one.\n\nGET\n\nhttps://api.spoonacular.com/food/products/upc/{upc}/comparable\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`upc`** | number | 033698816271 | The UPC of the product for which you want to find comparable products. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/upc/033698816271/comparable\n\n```\n{\n \&quot;comparableProducts\&quot;: {\n \&quot;calories\&quot;: [],\n \&quot;likes\&quot;: [],\n \&quot;price\&quot;: [],\n \&quot;protein\&quot;: [\n {\n \&quot;difference\&quot;: 3,\n \&quot;id\&quot;: 11797,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/11797.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Casa Visco Capers\&quot;\n },\n {\n \&quot;difference\&quot;: 1,\n \&quot;id\&quot;: 90962,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/90962.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Colavita Capers\&quot;\n },\n {\n \&quot;difference\&quot;: 1,\n \&quot;id\&quot;: 88139,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/88139.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Mezzetta Capers\&quot;\n },\n {\n \&quot;difference\&quot;: 1,\n \&quot;id\&quot;: 152832,\n \&quot;image\&quot;: \&quot;https://spoonacular.com/com/productImages/152832.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Victoria Imported Capers\&quot;\n }\n ],\n \&quot;spoonacularScore\&quot;: [\n {\n \&quot;difference\&quot;: 7,\n \&quot;id\&quot;: 125354,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/125354.jpg\&quot;,\n \&quot;title\&quot;: \&quot;DeLallo Capers\&quot;\n },\n {\n \&quot;difference\&quot;: 7,\n \&quot;id\&quot;: 118361,\n \&quot;image\&quot;: \&quot;https://spoonacular.com/com/productImages/118361.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Haddon House Non Pareil Capers\&quot;\n },\n {\n \&quot;difference\&quot;: 7,\n \&quot;id\&quot;: 113686,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/113686.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Dell Alpe Capers\&quot;\n },\n {\n \&quot;difference\&quot;: 7,\n \&quot;id\&quot;: 112078,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/112078.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Paesana Imported Capers\&quot;\n }\n ],\n \&quot;sugar\&quot;: []\n }\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Autocomplete Product Search\nGenerate suggestions for grocery products based on a (partial) query. The matches will be found by looking in the title only.\n\nGET\n\nhttps://api.spoonacular.com/food/products/suggest\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | chicke | The (partial) search query. |\n| `number` | number | 10 | The number of results to return (between 1 and 25). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/suggest?query\u003dchicke\u0026number\u003d2\n\n```\n{\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 208698,\n \&quot;title\&quot;: \&quot;buddig premium deli chicken breast - rotisserie flavored\&quot;\n },\n {\n \&quot;id\&quot;: 41291,\n \&quot;title\&quot;: \&quot;tyson all natural chicken breasts tenderloins\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Product Nutrition by ID Widget\nVisualize a product\u0027s nutritional information as HTML including CSS.\n\nGET\n\nhttps://api.spoonacular.com/food/products/{id}/nutritionWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 7657 | The id of the product. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/7657/nutritionWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Product Nutrition by ID Image\nVisualize a product\u0027s nutritional information as an image.\n\nGET\n\nhttps://api.spoonacular.com/food/products/{id}/nutritionWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 7657 | The id of the product. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/7657/nutritionWidget.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Nutrition by ID Widget\nVisualize a recipe\u0027s nutritional information as HTML including CSS.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/nutritionWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1082038 | The recipe id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1082038/nutritionWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Nutrition by ID Image\nVisualize a recipe\u0027s nutritional information as an image.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/nutritionWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1082038 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1082038/nutritionWidget.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Classify Grocery Product\nThis endpoint allows you to match a packaged food to a basic category, e.g. a specific brand of milk to the category milk.\n\nPOST\n\nhttps://api.spoonacular.com/food/products/classify\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/json`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`(post body)`** | string | { \&quot;title\&quot;: \&quot;Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\&quot;, \&quot;upc\&quot;: \&quot;\&quot;, \&quot;plu\\_code\&quot;: \&quot;\&quot;} | A json object containing the product title. |\n| `locale` | string | en\\_US | The display name of the returned category, supported is en\\_US (for American English) and en\\_GB (for British English). |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/food/products/classify\n\n```\n{\n \&quot;cleanTitle\&quot;: \&quot;Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/milk.png\&quot;,\n \&quot;category\&quot;: \&quot;2 percent milk\&quot;,\n \&quot;breadcrumbs\&quot;: [\n \&quot;2 percent milk\&quot;,\n \&quot;milk\&quot;,\n \&quot;drink\&quot;,\n \&quot;ingredient\&quot;\n ],\n \&quot;usdaCode\&quot;: 1174\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.5 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Classify Grocery Product Bulk\nProvide a set of product jsons, get back classified products.\n\nPOST\n\nhttps://api.spoonacular.com/food/products/classifyBatch\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/json`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`(post body)`** | string | \\[{ \&quot;title\&quot;: \&quot;Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\&quot;, \&quot;upc\&quot;: \&quot;\&quot;, \&quot;plu\\_code\&quot;: \&quot;\&quot;}\\] | A json array containing objects, each with the product title. |\n| `locale` | string | en\\_US | The display name of the returned category, supported is en\\_US (for American English) and en\\_GB (for British English). |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/food/products/classifyBatch\n\n```\n[\n { /* see classify grocery product result */ }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.5 points\n\nper classified product. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Map Ingredients to Grocery Products\nMap a set of ingredients to products you can buy in the grocery store.\n\nPOST\n\nhttps://api.spoonacular.com/food/ingredients/map\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/json`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`(post body)`** | string | { \&quot;ingredients\&quot;: \\[\&quot;eggs\&quot;,\&quot;bacon\&quot;\\], \&quot;servings\&quot;: 2} | Input for grocery product mapping. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/food/ingredients/map\n\n```\n[\n {\n \&quot;original\&quot;: \&quot;eggs\&quot;,\n \&quot;originalName\&quot;: \&quot;eggs\&quot;,\n \&quot;ingredientImage\&quot;: \&quot;egg.png\&quot;,\n \&quot;meta\&quot;: [\n \&quot;egg\&quot;\n ],\n \&quot;products\&quot;: [\n {\n \&quot;id\&quot;: 209945,\n \&quot;title\&quot;: \&quot;Crystal Farms Eggs - Fresh Accents Peeled Hard Cooked 2 ct Packs\&quot;,\n \&quot;upc\&quot;: \&quot;075925889498\&quot;\n },\n {\n \&quot;id\&quot;: 214723,\n \&quot;title\&quot;: \&quot;Organic Valley Eggs - Organic Medium Brown\&quot;,\n \&quot;upc\&quot;: \&quot;093966811100\&quot;\n },\n {\n \&quot;id\&quot;: 183228,\n \&quot;title\&quot;: \&quot;Eggland\u0027s Best Grade A Eggs Jumbo - 12 CT\&quot;,\n \&quot;upc\&quot;: \&quot;715141328615\&quot;\n }\n ]\n },\n {\n \&quot;ingredientImage\&quot;: \&quot;raw-bacon.png\&quot;,\n \&quot;meta\&quot;: [\n \&quot;bacon\&quot;\n ],\n \&quot;original\&quot;: \&quot;bacon\&quot;,\n \&quot;originalName\&quot;: \&quot;bacon\&quot;,\n \&quot;products\&quot;: [\n {\n \&quot;id\&quot;: 159164,\n \&quot;title\&quot;: \&quot;Wright Bacon - Naturally Hickory Smoked\&quot;,\n \&quot;upc\&quot;: \&quot;079621461552\&quot;\n },\n {\n \&quot;id\&quot;: 87924,\n \&quot;title\&quot;: \&quot;Sugardale Bacon\&quot;,\n \&quot;upc\&quot;: \&quot;073890006025\&quot;\n },\n {\n \&quot;id\&quot;: 213315,\n \&quot;title\&quot;: \&quot;John Morrell Bacon - Applewood Smoked\&quot;,\n \&quot;upc\&quot;: \&quot;070100060877\&quot;\n },\n {\n \&quot;id\&quot;: 94585,\n \&quot;title\&quot;: \&quot;Hormel Black Label Bacon Thick Cut\&quot;,\n \&quot;upc\&quot;: \&quot;037600153041\&quot;\n }\n ]\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nper mapped ingredient. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Guess Nutrition by Dish Name\nEstimate the macronutrients of a dish based on its title.\n\nGET\n\nhttps://api.spoonacular.com/recipes/guessNutrition\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`title`** | string | Spaghetti Aglio et Olio | The title of the dish. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/guessNutrition?title\u003dSpaghetti+Aglio+et+Olio\n\n```\n{\n \&quot;calories\&quot;: {\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;max\&quot;: 574.07,\n \&quot;min\&quot;: 389.92\n },\n \&quot;standardDeviation\&quot;: 148.55,\n \&quot;unit\&quot;: \&quot;calories\&quot;,\n \&quot;value\&quot;: 428.0\n },\n \&quot;carbs\&quot;: {\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;max\&quot;: 78.19,\n \&quot;min\&quot;: 55.54\n },\n \&quot;standardDeviation\&quot;: 18.27,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 65.0\n },\n \&quot;fat\&quot;: {\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;max\&quot;: 19.2,\n \&quot;min\&quot;: 12.27\n },\n \&quot;standardDeviation\&quot;: 5.59,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 16.0\n },\n \&quot;protein\&quot;: {\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;max\&quot;: 29.31,\n \&quot;min\&quot;: 8.12\n },\n \&quot;standardDeviation\&quot;: 17.09,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 13.0\n },\n \&quot;recipesUsed\&quot;: 10\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Autocomplete Menu Item Search\nGenerate suggestions for menu items based on a (partial) query. The matches will be found by looking in the title only.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/suggest\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | chicke | The (partial) search query. |\n| `number` | number | 10 | The number of results to return (between 1 and 25). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/suggest?query\u003dchicke\u0026number\u003d2\n\n```\n{\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 253419,\n \&quot;title\&quot;: \&quot;pei wei asian diner thai chicken lettuce wraps\&quot;\n },\n {\n \&quot;id\&quot;: 380722,\n \&quot;title\&quot;: \&quot;camille\u0027s chicken caesar salad includes 2 oz. caesar dressing\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Menu Items\nSearch over 115,000 menu items from over 800 fast food and chain restaurants. For example, McDonald\u0027s Big Mac or Starbucks Mocha.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | snickers | The search query. |\n| `minCalories` | number | 50 | The minimum amount of calories the menu item must have per serving. |\n| `maxCalories` | number | 800 | The maximum amount of calories the menu item can have per serving. |\n| `minCarbs` | number | 10 | The minimum amount of carbohydrates in grams the menu item must have per serving. |\n| `maxCarbs` | number | 100 | The maximum amount of carbohydrates in grams the menu item can have per serving. |\n| `minProtein` | number | 10 | The minimum amount of protein in grams the menu item must have per serving. |\n| `maxProtein` | number | 100 | The maximum amount of protein in grams the menu item can have per serving. |\n| `minFat` | number | 1 | The minimum amount of fat in grams the menu item must have per serving. |\n| `maxFat` | number | 100 | The maximum amount of fat in grams the menu item can have per serving. |\n| `addMenuItemInformation` | boolean | false | If set to true, you get more information about the menu items returned. |\n| `offset` | number | 0 | The offset number for paging (between 0 and 990). |\n| `number` | number | 100 | The number of expected results (between 1 and 10). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/search?query\u003dburger\u0026number\u003d2\n\n```\n{\n \&quot;menuItems\&quot;: [\n {\n \&quot;id\&quot;: 419357,\n \&quot;title\&quot;: \&quot;Burger Sliders\&quot;,\n \&quot;restaurantChain\&quot;: \&quot;Hooters\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/menu-items/419357-312x231.png\&quot;,\n \&quot;imageType\&quot;: \&quot;png\&quot;,\n \&quot;servings\&quot;: {\n \&quot;number\&quot;: 1,\n \&quot;size\&quot;: 2,\n \&quot;unit\&quot;: \&quot;oz\&quot;\n }\n },\n {\n \&quot;id\&quot;: 424571,\n \&quot;title\&quot;: \&quot;Bacon King Burger\&quot;,\n \&quot;restaurantChain\&quot;: \&quot;Burger King\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/menu-items/424571-312x231.png\&quot;,\n \&quot;imageType\&quot;: \&quot;png\&quot;,\n \&quot;servings\&quot;: {\n \&quot;number\&quot;: 1,\n \&quot;size\&quot;: 2,\n \&quot;unit\&quot;: \&quot;oz\&quot;\n }\n }\n ],\n \&quot;totalMenuItems\&quot;: 6749,\n \&quot;type\&quot;: \&quot;menuItem\&quot;,\n \&quot;offset\&quot;: 0,\n \&quot;number\&quot;: 2\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper result returned. Since this endpoint combines the capabilities of four different endpoints into one, additional points may be required depending on the parameters you set. If `addMenuItemInformation` is set to true,\n\n1 point\n\nwill be added per menu item returned. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Menu Item Nutrition Label Widget\nVisualize a menu item\u0027s nutritional label information as HTML including CSS.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/{id}/nutritionLabel\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 342313 | The menu item id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showOptionalNutrients` | boolean | false | Whether to show optional nutrients. |\n| `showZeroValues` | boolean | false | Whether to show zero values. |\n| `showIngredients` | boolean | false | Whether to show a list of ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/342313/nutritionLabel\n\n```\n/* HTML response */\n```\n\nThe response will be an HTML widget that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Menu Item Nutrition Label Image\nVisualize a menu item\u0027s nutritional label information as an image.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/{id}/nutritionLabel.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 342313 | The menu item id. |\n| `showOptionalNutrients` | boolean | false | Whether to show optional nutrients. |\n| `showZeroValues` | boolean | false | Whether to show zero values. |\n| `showIngredients` | boolean | false | Whether to show a list of ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/342313/nutritionLabel.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Menu Item Nutrition by ID Widget\nVisualize a menu item\u0027s nutritional information as HTML including CSS.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/{id}/nutritionWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 424571 | The menu item id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/424571/nutritionWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Menu Item Nutrition by ID Image\nVisualize a menu item\u0027s nutritional information as HTML including CSS.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/{id}/nutritionWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 424571 | The menu item id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/424571/nutritionWidget.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Menu Item Information\nUse a menu item id to get all available information about a menu item, such as nutrition.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/{id}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 424571 | The menu item id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/424571\n\n```\n{\n \&quot;id\&quot;: 424571,\n \&quot;title\&quot;: \&quot;Bacon King Burger\&quot;,\n \&quot;restaurantChain\&quot;: \&quot;Burger King\&quot;,\n \&quot;nutrition\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 69,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 30\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 57,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 35\n },\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1040,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 50\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 48,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 35\n }\n ],\n \&quot;caloricBreakdown\&quot;: {\n \&quot;percentProtein\&quot;: 35,\n \&quot;percentFat\&quot;: 30,\n \&quot;percentCarbs\&quot;: 35\n }\n },\n \&quot;badges\&quot;: [],\n \&quot;breadcrumbs\&quot;: [\n \&quot;burger\&quot;,\n \&quot;main course\&quot;,\n \&quot;food product category\&quot;\n ],\n \&quot;generatedText\&quot;: null,\n \&quot;imageType\&quot;: \&quot;png\&quot;,\n \&quot;likes\&quot;: 0,\n \&quot;servings\&quot;: {\n \&quot;number\&quot;: 1,\n \&quot;size\&quot;: 2,\n \&quot;unit\&quot;: \&quot;oz\&quot;\n },\n \&quot;price\&quot;: null,\n \&quot;spoonacularScore\&quot;: null\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Generate Meal Plan\nGenerate a meal plan with three meals per day (breakfast, lunch, and dinner).\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/generate\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| `timeFrame` | string | day | Either for one \&quot;day\&quot; or an entire \&quot;week\&quot;. |\n| `targetCalories` | number | 2000 | What is the caloric target for one day? The meal plan generator will try to get as close as possible to that goal. |\n| `diet` | string | vegetarian | Enter a diet that the meal plan has to adhere to. See a full [list of supported diets](https://spoonacular.com/food-api/docs#Diets). |\n| `exclude` | string | shellfish, olives | A comma-separated list of allergens or ingredients that must be excluded. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/generate?timeFrame\u003dday\n\n```\n{\n \&quot;meals\&quot;: [\n {\n \&quot;id\&quot;: 655219,\n \&quot;title\&quot;: \&quot;Peanut Butter And Chocolate Oatmeal\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;readyInMinutes\&quot;: 45,\n \&quot;servings\&quot;: 1,\n \&quot;sourceUrl\&quot;: \&quot;https://spoonacular.com/recipes/peanut-butter-and-chocolate-oatmeal-655219\&quot;\n },\n {\n \&quot;id\&quot;: 649931,\n \&quot;title\&quot;: \&quot;Lentil Salad With Vegetables\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;readyInMinutes\&quot;: 45,\n \&quot;servings\&quot;: 4,\n \&quot;sourceUrl\&quot;: \&quot;https://spoonacular.com/recipes/lentil-salad-with-vegetables-649931\&quot;\n },\n {\n \&quot;id\&quot;: 632854,\n \&quot;title\&quot;: \&quot;Asian Noodles\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;readyInMinutes\&quot;: 45,\n \&quot;servings\&quot;: 4,\n \&quot;sourceUrl\&quot;: \&quot;https://spoonacular.com/recipes/asian-noodles-632854\&quot;\n }\n ],\n \&quot;nutrients\&quot;: {\n \&quot;calories\&quot;: 1735.81,\n \&quot;carbohydrates\&quot;: 235.17,\n \&quot;fat\&quot;: 69.22,\n \&quot;protein\&quot;: 55.43\n }\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Meal Plan Week\nRetrieve a meal planned week for the given user. The `username` must be a spoonacular user and the `hash` must the the user\u0027s hash that can be found in his/her account.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/{username}/week/{start-date}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`start-date`** | string | 2020-06-01 | The start date of the meal planned week in the format yyyy-mm-dd. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/dsky/week/2020-06-01?hash\u003d4b5v4398573406\n\n```\n{\n \&quot;days\&quot;: [\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 310,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 16\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 38\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 20,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 40\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 310,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 16\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 38\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 20,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 40\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;date\&quot;: 1589155200,\n \&quot;day\&quot;: \&quot;Monday\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 1976489,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 1,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;servings\&quot;: 2,\n \&quot;id\&quot;: 1023004,\n \&quot;title\&quot;: \&quot;Foolproof Meatloaf\&quot;,\n \&quot;imageType\&quot;: \&quot;\&quot;\n }\n },\n {\n \&quot;id\&quot;: 1976490,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 2,\n \&quot;type\&quot;: \&quot;CUSTOM_FOOD\&quot;,\n \&quot;value\&quot;: {\n \&quot;servings\&quot;: 1,\n \&quot;id\&quot;: 345,\n \&quot;title\&quot;: \&quot;Denn\u0027s Lamb Bratwurst - 1/2 Pkg\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/bratwurst.jpg\&quot;\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 200,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 10\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 52,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 2,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 4\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 200,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 10\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 52,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 2,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 4\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;date\&quot;: 1589241600,\n \&quot;day\&quot;: \n\n#### Parameters\n\&quot;Tuesday\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 1976491,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 3,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;title\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: 1,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;apple\&quot;,\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;amount\&quot;: \&quot;1\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/apple.jpg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;banana\&quot;,\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;amount\&quot;: \&quot;1\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/bananas.jpg\&quot;\n }\n ]\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 180,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 6,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 22,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 7\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 10,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 20\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 180,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 6,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 22,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 7\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 10,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 20\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;date\&quot;: 1589328000,\n \&quot;day\&quot;: \&quot;Wednesday\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 1976492,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 4,\n \&quot;type\&quot;: \&quot;MENU_ITEM\&quot;,\n \&quot;value\&quot;: {\n \&quot;servings\&quot;: 1,\n \&quot;id\&quot;: 378557,\n \&quot;title\&quot;: \&quot;BBQ Steak Pizza, 9\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/menu-items/378557-312x231.png\&quot;,\n \&quot;imageType\&quot;: \&quot;png\&quot;\n }\n }\n ]\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Meal Plan Day\nRetrieve a meal planned day for the given user. The `username` must be a spoonacular user and the `hash` must the the user\u0027s hash that can be found in his/her account.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/{username}/day/{date}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`date`** | string | 2020-06-01 | The date of the meal planned day in the format yyyy-mm-dd. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/dsky/day/2020-06-01?hash\u003d4b5v4398573406\n\n```\n{\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 310,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 16\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 38\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 20,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 40\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 310,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 16\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 38\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 20,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 40\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;date\&quot;: 1589155200,\n \&quot;day\&quot;: \&quot;Monday\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 1976489,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 1,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;servings\&quot;: 2,\n \&quot;id\&quot;: 1023004,\n \&quot;title\&quot;: \&quot;Foolproof Meatloaf\&quot;,\n \&quot;imageType\&quot;: \&quot;\&quot;\n }\n },\n {\n \&quot;id\&quot;: 1976490,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 2,\n \&quot;type\&quot;: \&quot;CUSTOM_FOOD\&quot;,\n \&quot;value\&quot;: {\n \&quot;servings\&quot;: 1,\n \&quot;id\&quot;: 345,\n \&quot;title\&quot;: \&quot;Denn\u0027s Lamb Bratwurst - 1/2 Pkg\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/bratwurst.jpg\&quot;\n }\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Add to Meal Plan\nAdd an item to the user\u0027s meal plan.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/{username}/items\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Body\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/dsky/items\n\n```\n{\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;1 banana\&quot;\n }\n ]\n }\n}\n```\n\nThe field `date` is the timestamp of the day the item should be added to.\n\nThe field `slot` is either 1, 2, or 3 for breakfast, lunch, or dinner respectively.\n\nThe field `position` is the order in the slot.\n\nThe field `type` is either INGREDIENTS for simple foods such as \&quot;1 banana\&quot;, PRODUCT for a grocery product, MENU\\_ITEM for a menu item, RECIPE for a recipe, or CUSTOM\\_FOOD for custom food.\n\nThe field `value` is information about the item and the structure depends on what `type` is set to. The example above shows what it would look like for type ingredient. If the type is PRODUCT, MENU\\_ITEM, or RECIPE the value must contain the field `servings` and the `id` of the respective item.\n\nExample for adding a recipe with `type` RECIPE.\n\n```\n{\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 296213,\n \&quot;servings\&quot;: 2,\n \&quot;title\&quot;: \&quot;Spinach Salad with Roasted Vegetables and Spiced Chickpea\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n }\n}\n```\n\nExample for adding a grocery product with `type` PRODUCT.\n\n```\n{\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 183433,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Ahold Lasagna with Meat Sauce\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n}\n```\n\nExample for adding a menu item with `type` MENU\\_ITEM.\n\n```\n{\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;MENU_ITEM\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 378557,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Pizza 73 BBQ Steak Pizza, 9\&quot;,\n \&quot;imageType\&quot;: \&quot;png\&quot;\n }\n}\n```\n\nExample for adding a custom food with `type` CUSTOM\\_FOOD.\n\n```\n{\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;CUSTOM_FOOD\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 348,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Aldi Spicy Cashews - 30g\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/cashews.jpg\&quot;\n }\n}\n```\n\nExample for adding simple foods with `type` INGREDIENTS. You can either just pass a name with amount and unit or pass a more complex object with amount, name, and unit in separate fields (recommended).\n\n```\n{\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;1 banana\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;coffee\&quot;,\n \&quot;unit\&quot;: \&quot;cup\&quot;,\n \&quot;amount\&quot;: \&quot;1\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/brewed-coffee.jpg\&quot;\n },\n ]\n }\n}\n```\n\nAlternatively you can add all items of a meal plan template to a user\u0027s meal plan with one call. Just pass the `mealPlanTemplateId` and the `startDate` in your request. The user\u0027s meal plan will be filled with template items starting on startDate (day 1 of the specified meal plan template).\n\n```\n{\n \&quot;mealPlanTemplateId\&quot;: 120,\n \&quot;startDate\&quot;: 1596575356,\n}\n```\n\nYou can also add multiple items with one request. Just pass a JSON Array with multiple items. See below for an example.\n\n```\n[\n {\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;1 banana\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;coffee\&quot;,\n \&quot;unit\&quot;: \&quot;cup\&quot;,\n \&quot;amount\&quot;: \&quot;1\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/brewed-coffee.jpg\&quot;\n },\n ]\n }\n },\n {\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;CUSTOM_FOOD\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 348,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Aldi Spicy Cashews - 30g\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/cashews.jpg\&quot;\n }\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.1 points\n\nper additional item added.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Clear Meal Plan Day\nDelete all planned items from the user\u0027s meal plan for a specific day.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/{username}/day/{date}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`date`** | string | 2020-06-01 | The date in the format yyyy-mm-dd. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/dsky/day/2020-06-01?hash\u003d4b5v4398573406\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Delete from Meal Plan\nDelete an item from the user\u0027s meal plan.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/{username}/items/{id}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`id`** | number | 15678 | The shopping list item id. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/dsky/items/15678?hash\u003d4b5v4398573406\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Meal Plan Templates\nGet meal plan templates from user or public ones.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nGet user\u0027s templates.\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/{username}/templates\n\n```\n{\n \&quot;templates\&quot;: [\n {\n \&quot;id\&quot;: 37,\n \&quot;name\&quot;: \&quot;Busy Work Week\&quot;\n },\n {\n \&quot;id\&quot;: 480,\n \&quot;name\&quot;: \&quot;Keto Meal Plan\&quot;\n },\n {\n \&quot;id\&quot;: 120,\n \&quot;name\&quot;: \&quot;Not-So-Strict Paleo Meal Plan\&quot;\n },\n {\n \&quot;id\&quot;: 451,\n \&quot;name\&quot;: \&quot;Week 1 Meal Plan\&quot;\n },\n {\n \&quot;id\&quot;: 581,\n \&quot;name\&quot;: \&quot;Whole30 Meal Plan\&quot;\n }\n ]\n}\n```\n\nGet public templates.\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/public-templates\n\n```\n{\n \&quot;templates\&quot;: [\n {\n \&quot;id\&quot;: 37,\n \&quot;name\&quot;: \&quot;Busy Work Week\&quot;\n },\n {\n \&quot;id\&quot;: 480,\n \&quot;name\&quot;: \&quot;Keto Meal Plan\&quot;\n },\n {\n \&quot;id\&quot;: 120,\n \&quot;name\&quot;: \&quot;Not-So-Strict Paleo Meal Plan\&quot;\n },\n {\n \&quot;id\&quot;: 451,\n \&quot;name\&quot;: \&quot;Week 1 Meal Plan\&quot;\n },\n {\n \&quot;id\&quot;: 581,\n \&quot;name\&quot;: \&quot;Whole30 Meal Plan\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Meal Plan Template\nGet information about a meal plan template.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/{username}/templates/{id}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`id`** | number | 15678 | The shopping list item id. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/dsky/templates/128?hash\u003d4b5v4398573406\n\n```\n{\n \&quot;id\&quot;: 128,\n \&quot;name\&quot;: \&quot;1500 Calorie Meal Plan\&quot;,\n \&quot;days\&quot;: [\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1293,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 65\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 65,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 100\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 102,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 34\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 83,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 166\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 132,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 7\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 3,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 4\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 8\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 3,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 5\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 455,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 23\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 34,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 52\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 35,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 70\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 706,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 35\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 29,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 45\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 76,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 25\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 46,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 91\n }\n ]\n },\n \&quot;day\&quot;: \&quot;1\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2403,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 630657,\n \&quot;title\&quot;: \&quot;Double Chocolate Protein Cookies\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2404,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;orange\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/orange.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2405,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 296213,\n \&quot;title\&quot;: \&quot;Spinach Salad with Roasted Vegetables and Spiced Chickpea\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2406,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 237677,\n \&quot;title\&quot;: \&quot;Chicken Parmesan with Spaghetti\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2407,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;broccoli\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/broccoli.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;cup\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2408,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 146191,\n \&quot;title\&quot;: \&quot;Lindt Dark Chocolate\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1386,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 69\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 66,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 102\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 162,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 54\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 48,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 96\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 239,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 12\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 11,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 34,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 11\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 5,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9\n }\n ]\n },\n \n\n#### Parameters\n\&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 732,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 37\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 33,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 51\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 91,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 30\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 22,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 44\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 414,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 21\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 22,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 33\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 37,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 12\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 21,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 43\n }\n ]\n },\n \&quot;day\&quot;: \&quot;2\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2409,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 101999,\n \&quot;title\&quot;: \&quot;Greek Gods Yogurt\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2410,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;berries\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/berries-mixed.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;cup\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2411,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 516377,\n \&quot;title\&quot;: \&quot;Southwest Quinoa Salad\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2412,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 247683,\n \&quot;title\&quot;: \&quot;Pesto Caprese Omelette\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2413,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 484337,\n \&quot;title\&quot;: \&quot;One Ingredient Banana Ice Cream\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1589,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 79\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 77,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 118\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 158,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 53\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 84,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 168\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 472,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 24\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 14,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 21\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 62,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 21\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 27,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 54\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 568,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 28\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 45,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 69\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 31,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 10\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 18,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 36\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 549,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 27\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 18,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 27\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 65,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 22\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 39,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 78\n }\n ]\n },\n \&quot;day\&quot;: \&quot;3\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2414,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 157259,\n \&quot;title\&quot;: \&quot;Cocoa Protein Pancakes\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2415,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;orange\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/orange.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2416,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 535856,\n \&quot;title\&quot;: \&quot;BLT Chopped Salad\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2417,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 71144,\n \&quot;title\&quot;: \&quot;Kind Plus Fruit \u0026 Nut Bar - Almond Walnut Macadamia \n\n#### Parameters\nwith Peanuts Plus Protein\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2418,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 519197,\n \&quot;title\&quot;: \&quot;Zesty Sriracha Shrimp and Quinoa\&quot;,\n \&quot;imageType\&quot;: \&quot;png\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2419,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 163427,\n \&quot;title\&quot;: \&quot;Green Giant Valley Fresh Steamers - Select Sugar Snap Peas\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2420,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 146191,\n \&quot;title\&quot;: \&quot;Lindt Dark Chocolate\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1343,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 67\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 70,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 108\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 123,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 41\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 61,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 122\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 239,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 12\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 11,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 34,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 11\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 5,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 406,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 20\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 17,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 26\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 56,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 10,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 21\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 698,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 35\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 43,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 66\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 34,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 11\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 46,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 92\n }\n ]\n },\n \&quot;day\&quot;: \&quot;4\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2421,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 101999,\n \&quot;title\&quot;: \&quot;Greek Gods Yogurt\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2422,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;berries\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/berries-mixed.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;cup\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2423,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 535563,\n \&quot;title\&quot;: \&quot;Black Bean Quinoa Salad\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2424,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 622598,\n \&quot;title\&quot;: \&quot;Pittata - Pizza Frittata\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2425,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 484337,\n \&quot;title\&quot;: \&quot;One Ingredient Banana Ice Cream\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1247,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 62\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 61,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 95\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 103,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 34\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 78,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 156\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 295,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 15\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 12,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 42,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 14\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 11,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 23\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 455,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 23\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 34,\n \n\n#### Parameters\n\&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 52\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 35,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 70\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 497,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 25\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 15,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 24\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 60,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 20\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 32,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 63\n }\n ]\n },\n \&quot;day\&quot;: \&quot;5\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2426,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 71144,\n \&quot;title\&quot;: \&quot;Kind Plus Fruit \u0026 Nut Bar - Almond Walnut Macadamia with Peanuts Plus Protein\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2427,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;banana\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/bananas.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2428,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 296213,\n \&quot;title\&quot;: \&quot;Spinach Salad with Roasted Vegetables and Spiced Chickpea\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2429,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 497301,\n \&quot;title\&quot;: \&quot;Shrimp Scampi\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2430,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 581021,\n \&quot;title\&quot;: \&quot;Black Bean Brownies: Fudgy Fun\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1683,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 84\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 68,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 105\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 139,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 46\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 106,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 212\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 490,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 24\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 15,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 23\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 65,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 22\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 26,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 53\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 378,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 33,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 51\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 16,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 5\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 8,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 16\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 816,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 41\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 21,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 32\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 58,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 72,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 144\n }\n ]\n },\n \&quot;day\&quot;: \&quot;6\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2431,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 157259,\n \&quot;title\&quot;: \&quot;Cocoa Protein Pancakes\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2432,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;berries\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/berries-mixed.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;cup\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2433,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 535856,\n \&quot;title\&quot;: \&quot;BLT Chopped Salad\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2434,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 149425,\n \&quot;title\&quot;: \&quot;Herb and Cheddar Cordon Bleu\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2435,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: \n\n#### Parameters\n{\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;brussels sprouts\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/brussels-sprouts.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;cup\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2436,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;wine\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/white-wine.jpg\&quot;,\n \&quot;amount\&quot;: 5,\n \&quot;unit\&quot;: \&quot;ounces\&quot;\n }\n ]\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1442,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 72\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 69,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 106\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 147,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 49\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 73,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 147\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 444,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 22\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 12,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 51,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 38,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 76\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 406,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 20\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 17,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 26\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 56,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 10,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 21\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 593,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 30\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 40,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 62\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 41,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 14\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 50\n }\n ]\n },\n \&quot;day\&quot;: \&quot;7\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2437,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 619085,\n \&quot;title\&quot;: \&quot;Protein Packed Healthy French Toast with Chocolate and Peanut Butter {Super Simple, Whole Wheat}\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2438,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;orange\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/orange.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2439,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 535563,\n \&quot;title\&quot;: \&quot;Black Bean Quinoa Salad\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2440,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 590570,\n \&quot;title\&quot;: \&quot;Asian Beef Lettuce Wraps\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2441,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 146191,\n \&quot;title\&quot;: \&quot;Lindt Dark Chocolate\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n }\n ]\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Add Meal Plan Template\nAdd a meal plan template for a user.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/{username}/templates\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request Body\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/dsky/templates\n\n```\n{\n \&quot;name\&quot;: \&quot;My new meal plan template\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;day\&quot;: 1,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 296213,\n \&quot;servings\&quot;: 2,\n \&quot;title\&quot;: \&quot;Spinach Salad with Roasted Vegetables and Spiced Chickpea\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;day\&quot;: 2,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 183433,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Ahold Lasagna with Meat Sauce\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;day\&quot;: 3,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;MENU_ITEM\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 378557,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Pizza 73 BBQ Steak Pizza, 9\&quot;,\n \&quot;imageType\&quot;: \&quot;png\&quot;\n }\n },\n {\n \&quot;day\&quot;: 4,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;CUSTOM_FOOD\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 348,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Aldi Spicy Cashews - 30g\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/cashews.jpg\&quot;\n }\n },\n {\n \&quot;day\&quot;: 5,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;1 banana\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;coffee\&quot;,\n \&quot;unit\&quot;: \&quot;cup\&quot;,\n \&quot;amount\&quot;: \&quot;1\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/brewed-coffee.jpg\&quot;\n }\n ]\n }\n }\n ],\n \&quot;publishAsPublic\&quot;: false\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Delete Meal Plan Template\nDelete a meal plan template for a user.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/{username}/templates/{id}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`id`** | number | 15678 | The shopping list item id. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/dsky/templates/128?hash\u003d4b5v4398573406\n\n```\n{\n \&quot;status\&quot;: \&quot;success\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Shopping List\nGet the current shopping list for the given user.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/{username}/shopping-list\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/dsky/shopping-list\n\n```\n{\n \&quot;aisles\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 115388,\n \&quot;name\&quot;: \&quot;baking powder\&quot;,\n \&quot;measures\&quot;: {\n \&quot;original\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;package\&quot;\n },\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;pkg\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;pkg\&quot;\n }\n },\n \&quot;pantryItem\&quot;: false,\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;cost\&quot;: 0.71,\n \&quot;ingredientId\&quot;: 18369\n }\n ]\n }\n ],\n \&quot;cost\&quot;: 1.43,\n \&quot;startDate\&quot;: 1588291200,\n \&quot;endDate\&quot;: 1588896000\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Generate Shopping List\nGenerate the shopping list for a user from the meal planner in a given time frame.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/{username}/shopping-list/{start-date}/{end-date}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`start-date`** | string | 2020-06-01 | The start date in the format yyyy-mm-dd. |\n| **`end-date`** | string | 2020-06-07 | The end date in the format yyyy-mm-dd. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/dsky/shopping-list/2020-06-01/2020-06-07?hash\u003d4b5v4398573406\n\n```\n{\n \&quot;aisles\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 115388,\n \&quot;name\&quot;: \&quot;baking powder\&quot;,\n \&quot;measures\&quot;: {\n \&quot;original\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;package\&quot;\n },\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;pkg\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;pkg\&quot;\n }\n },\n \&quot;pantryItem\&quot;: false,\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;cost\&quot;: 0.71,\n \&quot;ingredientId\&quot;: 18369\n }\n ]\n }\n ],\n \&quot;cost\&quot;: 0.71,\n \&quot;startDate\&quot;: 1588291200,\n \&quot;endDate\&quot;: 1588896000\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Compute Shopping List\nCompute a shopping list from a set of simple foods. This endpoint does not require usernames.\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/shopping-list/compute\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\nExample Request and Body\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/shopping-list/compute\n\n```\n{\n \&quot;items\&quot;: [\n \&quot;4 lbs tomatoes\&quot;,\n \&quot;10 tomatoes\&quot;,\n \&quot;20 Tablespoons Olive Oil\&quot;,\n \&quot;6 tbsp Olive Oil\&quot;\n ]\n}\n```\n\nExample Response\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/shopping-list/compute\n\n```\n{\n \&quot;aisles\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Pantry Items\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;name\&quot;: \&quot;olive oil\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 364.0,\n \&quot;unit\&quot;: \&quot;ml\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 12.4,\n \&quot;unit\&quot;: \&quot;fl oz\&quot;\n }\n },\n \&quot;pantryItem\&quot;: true,\n \&quot;aisle\&quot;: \&quot;Pantry Items\&quot;,\n \&quot;cost\&quot;: 333.55,\n \&quot;ingredientId\&quot;: 4053\n }\n ]\n },\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;name\&quot;: \&quot;tomatoes\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 3044.4,\n \&quot;unit\&quot;: \&quot;g\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 6.8,\n \&quot;unit\&quot;: \&quot;lb\&quot;\n }\n },\n \&quot;pantryItem\&quot;: false,\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;cost\&quot;: 532.21,\n \&quot;ingredientId\&quot;: 11529\n }\n ]\n }\n ],\n \&quot;cost\&quot;: 1326.62\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Connect User\nIn order to call user-specific endpoints, you need to connect your app\u0027s users to spoonacular users.\n\nJust call this endpoint with your user\u0027s information and you will get back a username and hash that you must save on your side. In future requests that you make on this user\u0027s behalf you simply pass their username and hash alongside your API key.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nPOST\n\nhttps://api.spoonacular.com/users/connect\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`(post body)`** | string | { \&quot;username\&quot;: \&quot;cool user\&quot;,} | A json body. |\n\nExample Request Body\n\nPOST\n\nhttps://api.spoonacular.com/users/connect\n\n```\n{\n \&quot;username\&quot;: \&quot;your user\u0027s name\&quot;,\n \&quot;firstName\&quot;: \&quot;your user\u0027s first name\&quot;,\n \&quot;lastName\&quot;: \&quot;your user\u0027s last name\&quot;,\n \&quot;email\&quot;: \&quot;your user\u0027s email\&quot;\n}\n```\n\nThe response will give you the corresponding spoonacular usernamem, the password with which the user can log in to spoonacular.com, and the hash. Save this information permanently on your end and connect it with your user.\n\n```\n{\n \&quot;username\&quot;: \&quot;api_123_user\&quot;,\n \&quot;spoonacularPassword\&quot;: \&quot;meadwith31grapejam\&quot;,\n \&quot;hash\&quot;: \&quot;q572587bq2405724q05\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Add to Shopping List\nAdd an item to the current shopping list of a user.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/{username}/shopping-list/items\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request Body\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/dsky/shopping-list/items\n\n```\n{\n \&quot;item\&quot;: \&quot;1 package baking powder\&quot;,\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;parse\&quot;: true\n}\n```\n\nThe field `aisle` is optional and will be added if not given.\n\nSet `parse` false if you want to put a non-food item to the shopping list.\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/dsky/shopping-list/items\n\n```\n{\n \&quot;aisles\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 115388,\n \&quot;name\&quot;: \&quot;baking powder\&quot;,\n \&quot;measures\&quot;: {\n \&quot;original\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;package\&quot;\n },\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;pkg\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;pkg\&quot;\n }\n },\n \&quot;pantryItem\&quot;: false,\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;cost\&quot;: 0.71,\n \&quot;ingredientId\&quot;: 18369\n }\n ]\n }\n ],\n \&quot;cost\&quot;: 0.71,\n \&quot;startDate\&quot;: 1588291200,\n \&quot;endDate\&quot;: 1588896000\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Delete from Shopping List\nDelete an item from the current shopping list of the user.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/{username}/shopping-list/items/{id}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`id`** | number | 15678 | The shopping list item id. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/dsky/shopping-list/items/15678?hash\u003d4b5v4398573406\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Dish Pairing for Wine\nFind a dish that goes well with a given wine.\n\nGET\n\nhttps://api.spoonacular.com/food/wine/dishes\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`wine`** | string | malbec | The type of wine that should be paired, e.g. \&quot;merlot\&quot;, \&quot;riesling\&quot;, or \&quot;malbec\&quot;. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/wine/dishes?wine\u003dmalbec\n\n```\n{\n \&quot;pairings\&quot;: [\n \&quot;stew\&quot;,\n \&quot;steak\&quot;,\n \&quot;chili\&quot;,\n \&quot;burger\&quot;\n ],\n \&quot;text\&quot;: \&quot;Malbec is a dry red wine which is bold and full bodied. It goes especially well with round steak, tri tip steak, steak, boneless pork chops, and pizza burger.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Wine Pairing\nFind a wine that goes well with a food. Food can be a dish name (\&quot;steak\&quot;), an ingredient name (\&quot;salmon\&quot;), or a cuisine (\&quot;italian\&quot;).\n\nGET\n\nhttps://api.spoonacular.com/food/wine/pairing\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`food`** | string | steak | The food to get a pairing for. This can be a dish (\&quot;steak\&quot;), an ingredient (\&quot;salmon\&quot;), or a cuisine (\&quot;italian\&quot;). |\n| `maxPrice` | number | 50 | The maximum price for the specific wine recommendation in USD. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/wine/pairing?food\u003dsteak\n\n```\n{\n \&quot;pairedWines\&quot;: [\n \&quot;merlot\&quot;,\n \&quot;cabernet sauvignon\&quot;,\n \&quot;pinot noir\&quot;\n ],\n \&quot;pairingText\&quot;: \&quot;Merlot, Cabernet Sauvignon, and Pinot Noir are my top picks for Steak. After all, beef and red wine are a classic combination. Generally, leaner steaks go well with light or medium-bodied reds, such as pinot noir or merlot, while fattier steaks can handle a bold red, such as cabernet sauvingnon. The Sterling Vineyards Merlot with a 5 out of 5 star rating seems like a good match. It costs about 29 dollars per bottle.\&quot;,\n \&quot;productMatches\&quot;: [\n {\n \&quot;id\&quot;: 428278,\n \&quot;title\&quot;: \&quot;Sterling Vineyards Merlot\&quot;,\n \&quot;averageRating\&quot;: 1.0,\n \&quot;description\&quot;: null,\n \&quot;imageUrl\&quot;: \&quot;https://img.spoonacular.com/products/428278-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://www.amazon.com/2014-Sterling-Vineyards-Valley-Merlot/dp/B071FP8NPG?tag\u003dspoonacular-20\&quot;,\n \&quot;price\&quot;: \&quot;$28.99\&quot;,\n \&quot;ratingCount\&quot;: 1.0,\n \&quot;score\&quot;: 0.75\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Wine Description\nGet a simple description of a certain wine, e.g. \&quot;malbec\&quot;, \&quot;riesling\&quot;, or \&quot;merlot\&quot;.\n\nGET\n\nhttps://api.spoonacular.com/food/wine/description\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`wine`** | string | merlot | The name of the wine that should be paired, e.g. \&quot;merlot\&quot;, \&quot;riesling\&quot;, or \&quot;malbec\&quot;. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/wine/description?wine\u003dmerlot\n\n```\n{\n \&quot;wineDescription\&quot;: \&quot;Merlot is a dry red wine which is smooth and medium bodied.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Wine Recommendation\nGet a specific wine recommendation (concrete product) for a given wine type, e.g. \&quot;merlot\&quot;.\n\nGET\n\nhttps://api.spoonacular.com/food/wine/recommendation\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`wine`** | string | merlot | The type of wine to get a specific product recommendation for. |\n| `maxPrice` | number | 50 | The maximum price for the specific wine recommendation in USD. |\n| `minRating` | number | 0.7 | The minimum rating of the recommended wine between 0 and 1. For example, 0.8 equals 4 out of 5 stars. |\n| `number` | number | 3 | The number of wine recommendations expected (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/wine/recommendation?wine\u003dmerlot\u0026number\u003d2\n\n```\n{\n \&quot;recommendedWines\&quot;: [\n {\n \&quot;id\&quot;: 447938,\n \&quot;title\&quot;: \&quot;Rombauer Merlot\&quot;,\n \&quot;averageRating\&quot;: 0.96,\n \&quot;description\&quot;: \&quot;Enticing and lively red color; beautifully aromatic with black cherry and ripe plum. On the palate a purity of blackcurrant, cedar and mint flavors blend together seamlessly. Soft and supple, this wine has a medium-bodied mouth-feel with plush tannins that integrate with the generous finish.Our favorite pairings for this wine include chicken parmesan, cedar-planked salmon over wild rice, and mushroom pizza.\&quot;,\n \&quot;imageUrl\&quot;: \&quot;https://img.spoonacular.com/products/447938-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://click.linksynergy.com/deeplink?id\u003d*QCiIS6t4gA\u0026mid\u003d2025\u0026murl\u003dhttps%3A%2F%2Fwww.wine.com%2Fproduct%2Frombauer-merlot-2008%2F116883\&quot;,\n \&quot;price\&quot;: \&quot;$25.59\&quot;,\n \&quot;ratingCount\&quot;: 5.0,\n \&quot;score\&quot;: 0.8975\n },\n {\n \&quot;id\&quot;: 430475,\n \&quot;title\&quot;: \&quot;NV The Big Kahuna Merlot\&quot;,\n \&quot;averageRating\&quot;: 0.9,\n \&quot;description\&quot;: \&quot;A ripe and rounded Merlot with notes of plum, blackberry, and hint of spice.\&quot;,\n \&quot;imageUrl\&quot;: \&quot;https://img.spoonacular.com/products/430475-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://www.amazon.com/Big-Kahuna-Merlot-Red-Wine/dp/B01F5XPTUW?tag\u003dspoonacular-20\&quot;,\n \&quot;price\&quot;: \&quot;$6.99\&quot;,\n \&quot;ratingCount\&quot;: 4.0,\n \&quot;score\&quot;: 0.823076923076923\n }\n ],\n \&quot;totalFound\&quot;: 21\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper wine returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Image Classification by File\nClassify a food image. You can play around with that endpoint!\n\nSee here for a [full list of supported categories](https://spoonacular.com/food-api/docs#Image-Classification-Categories).\n\nPOST\n\nhttps://api.spoonacular.com/food/images/classify\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`file`** | binary | - | The binary file of the image. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/food/images/classify\n\n```\n{\n \&quot;category\&quot;: \&quot;burger\&quot;,\n \&quot;probability\&quot;: 0.91354\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n2 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Image Classification by URL\nClassify a food image. You can play around with that endpoint!\n\nSee here for a [full list of supported categories](https://spoonacular.com/food-api/docs#Image-Classification-Categories).\n\nGET\n\nhttps://api.spoonacular.com/food/images/classify\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`imageUrl`** | string | https://img.spoonacular.com/recipes/635350-240x150.jpg | The URL of the image to be classified. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/images/classify?imageUrl\u003dhttps://img.spoonacular.com/recipes/635350-240x150.jpg\n\n```\n{\n \&quot;category\&quot;: \&quot;burger\&quot;,\n \&quot;probability\&quot;: 0.91354\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n2 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Image Analysis by File\nAnalyze a food image. The API tries to classify the image, guess the nutrition, and find a matching recipes. You can play around with that endpoint!\n\nSee here for a [full list of supported categories](https://spoonacular.com/food-api/docs#Image-Classification-Categories).\n\nPOST\n\nhttps://api.spoonacular.com/food/images/analyze\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`file`** | binary | - | The binary file of the image. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/food/images/analyze\n\n```\n{\n \&quot;nutrition\&quot;: {\n \&quot;recipesUsed\&quot;: 25,\n \&quot;calories\&quot;: {\n \&quot;value\&quot;: 508,\n \&quot;unit\&quot;: \&quot;calories\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 428.97,\n \&quot;max\&quot;: 571.98\n },\n \&quot;standardDeviation\&quot;: 182.4\n },\n \&quot;fat\&quot;: {\n \&quot;value\&quot;: 21,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 21.29,\n \&quot;max\&quot;: 32.95\n },\n \&quot;standardDeviation\&quot;: 14.88\n },\n \&quot;protein\&quot;: {\n \&quot;value\&quot;: 29,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 22.58,\n \&quot;max\&quot;: 33.7\n },\n \&quot;standardDeviation\&quot;: 14.19\n },\n \&quot;carbs\&quot;: {\n \&quot;value\&quot;: 40,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 29.74,\n \&quot;max\&quot;: 44.96\n },\n \&quot;standardDeviation\&quot;: 19.42\n }\n },\n \&quot;category\&quot;: {\n \&quot;name\&quot;: \&quot;burger\&quot;,\n \&quot;probability\&quot;: 0.99\n },\n \&quot;recipes\&quot;: [\n {\n \&quot;id\&quot;: 477749,\n \&quot;title\&quot;: \&quot;Burger Club: Award-Winning Logan County Burger Patty Melt\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.barbarabakes.com/2010/05/burger-club-award-winning-logan-county/\&quot;\n },\n {\n \&quot;id\&quot;: 493632,\n \&quot;title\&quot;: \&quot;New York Burger Week: Pretzel Burger with Beer Cheese\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.foodrepublic.com/2013/09/23/new-york-burger-week-pretzel-burger-beer-cheese\&quot;\n },\n {\n \&quot;id\&quot;: 23359,\n \&quot;title\&quot;: \&quot;Beef Burger Recipe (elvis Burger With Salad \u0026 Gherkin)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.jamieoliver.com/recipes/beef-recipes/elvis-burger-with-pickled-gherkin\&quot;\n },\n {\n \&quot;id\&quot;: 149115,\n \&quot;title\&quot;: \&quot;Surf N\u0027 Turf Burger (Grilled Burger with Lobster and Bacon)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.seriouseats.com/recipes/2013/06/lobster-bacon-burger-recipe.html\&quot;\n },\n {\n \&quot;id\&quot;: 861442,\n \&quot;title\&quot;: \&quot;Istanbul-Style Wet Burger (Islak Burger)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.epicurious.com/recipes/food/views/istanbul-style-wet-burger-islak-burger?mbid\u003dnl_02272017_Daily_CTN_PM+(1)\&quot;\n },\n {\n \&quot;id\&quot;: 600423,\n \&quot;title\&quot;: \&quot;Rajma Burger (Red Kidney Beans Burger)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.spiceupthecurry.com/rajma-burger-red-kidney-beans-burger/\&quot;\n },\n {\n \&quot;id\&quot;: 493634,\n \&quot;title\&quot;: \&quot;Chicago Burger Week: The Chicago Deep Dish Pizza Burger\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.foodrepublic.com/2013/09/30/chicago-burger-week-chicago-deep-dish-pizza-burger\&quot;\n },\n {\n \&quot;id\&quot;: 487346,\n \&quot;title\&quot;: \&quot;aloo tikki burger , north indian style aloo tikki burger\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.vegrecipesofindia.com/aloo-tikki-burger/\&quot;\n },\n {\n \&quot;id\&quot;: 607330,\n \&quot;title\&quot;: \&quot;Aloo Tikki Burger | How to make aloo tikki burger at home\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.spiceupthecurry.com/aloo-tikki-burger-recipe/\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n4 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Image Analysis by URL\nAnalyze a food image. The API tries to classify the image, guess the nutrition, and find a matching recipes. You can play around with that endpoint!\n\nSee here for a [full list of supported categories](https://spoonacular.com/food-api/docs#Image-Classification-Categories).\n\nGET\n\nhttps://api.spoonacular.com/food/images/analyze\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`imageUrl`** | string | https://img.spoonacular.com/recipes/635350-240x150.jpg | The URL of the image to be analyzed. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/images/analyze?imageUrl\u003dhttps://img.spoonacular.com/recipes/635350-240x150.jpg\n\n```\n{\n \&quot;nutrition\&quot;: {\n \&quot;recipesUsed\&quot;: 25,\n \&quot;calories\&quot;: {\n \&quot;value\&quot;: 508,\n \&quot;unit\&quot;: \&quot;calories\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 428.97,\n \&quot;max\&quot;: 571.98\n },\n \&quot;standardDeviation\&quot;: 182.4\n },\n \&quot;fat\&quot;: {\n \&quot;value\&quot;: 21,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 21.29,\n \&quot;max\&quot;: 32.95\n },\n \&quot;standardDeviation\&quot;: 14.88\n },\n \&quot;protein\&quot;: {\n \&quot;value\&quot;: 29,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 22.58,\n \&quot;max\&quot;: 33.7\n },\n \&quot;standardDeviation\&quot;: 14.19\n },\n \&quot;carbs\&quot;: {\n \&quot;value\&quot;: 40,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 29.74,\n \&quot;max\&quot;: 44.96\n },\n \&quot;standardDeviation\&quot;: 19.42\n }\n },\n \&quot;category\&quot;: {\n \&quot;name\&quot;: \&quot;burger\&quot;,\n \&quot;probability\&quot;: 0.9998999999999999\n },\n \&quot;recipes\&quot;: [\n {\n \&quot;id\&quot;: 477749,\n \&quot;title\&quot;: \&quot;Burger Club: Award-Winning Logan County Burger Patty Melt\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.barbarabakes.com/2010/05/burger-club-award-winning-logan-county/\&quot;\n },\n {\n \&quot;id\&quot;: 493632,\n \&quot;title\&quot;: \&quot;New York Burger Week: Pretzel Burger with Beer Cheese\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.foodrepublic.com/2013/09/23/new-york-burger-week-pretzel-burger-beer-cheese\&quot;\n },\n {\n \&quot;id\&quot;: 23359,\n \&quot;title\&quot;: \&quot;Beef Burger Recipe (elvis Burger With Salad \u0026 Gherkin)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.jamieoliver.com/recipes/beef-recipes/elvis-burger-with-pickled-gherkin\&quot;\n },\n {\n \&quot;id\&quot;: 149115,\n \&quot;title\&quot;: \&quot;Surf N\u0027 Turf Burger (Grilled Burger with Lobster and Bacon)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.seriouseats.com/recipes/2013/06/lobster-bacon-burger-recipe.html\&quot;\n },\n {\n \&quot;id\&quot;: 861442,\n \&quot;title\&quot;: \&quot;Istanbul-Style Wet Burger (Islak Burger)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.epicurious.com/recipes/food/views/istanbul-style-wet-burger-islak-burger?mbid\u003dnl_02272017_Daily_CTN_PM+(1)\&quot;\n },\n {\n \&quot;id\&quot;: 600423,\n \&quot;title\&quot;: \&quot;Rajma Burger (Red Kidney Beans Burger)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.spiceupthecurry.com/rajma-burger-red-kidney-beans-burger/\&quot;\n },\n {\n \&quot;id\&quot;: 493634,\n \&quot;title\&quot;: \&quot;Chicago Burger Week: The Chicago Deep Dish Pizza Burger\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.foodrepublic.com/2013/09/30/chicago-burger-week-chicago-deep-dish-pizza-burger\&quot;\n },\n {\n \&quot;id\&quot;: 487346,\n \&quot;title\&quot;: \&quot;aloo tikki burger , north indian style aloo tikki burger\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.vegrecipesofindia.com/aloo-tikki-burger/\&quot;\n },\n {\n \&quot;id\&quot;: 607330,\n \&quot;title\&quot;: \&quot;Aloo Tikki Burger | How to make aloo tikki burger at home\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.spiceupthecurry.com/aloo-tikki-burger-recipe/\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n4 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Quick Answer\nAnswer a nutrition related natural language question.\n\nGET\n\nhttps://api.spoonacular.com/recipes/quickAnswer\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`q`** | string | How much vitamin c is in 2 apples? | The nutrition related question. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/quickAnswer?q\u003dHow+much+vitamin+c+is+in+2+apples\n\n```\n{\n \&quot;answer\&quot;: \&quot;There are 16.74 mg of Vitamin C in 2 apples. This covers about 20% of your daily needs of Vitamin C.\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/apple.jpg\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Detect Food in Text\nTake any text and find all mentions of food contained within it. This task is also called **Named Entity Recognition (NER)**. In this case, the entities are foods. Either dishes, such as pizza or cheeseburger, or ingredients, such as cucumber or almonds.\n\nPOST\n\nhttps://api.spoonacular.com/food/detect\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`text`** | string | I like to eat delicious tacos. The only thing better is a cheeseburger with cheddar. But then again, pizza with pepperoni, mushrooms, and tomatoes is so good too! | The text in which food items, such as dish names and ingredients, should be detected in. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/food/detect\n\n```\n{\n \&quot;annotations\&quot;: [\n {\n \&quot;annotation\&quot;: \&quot;cheeseburger\&quot;,\n \&quot;image\&quot;: \&quot;https://spoonacular.com/menuItemImages/cheeseburger.jpg\&quot;,\n \&quot;tag\&quot;: \&quot;dish\&quot;\n },\n {\n \&quot;annotation\&quot;: \&quot;mushrooms\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/mushrooms.png\&quot;,\n \&quot;tag\&quot;: \&quot;ingredient\&quot;\n },\n {\n \&quot;annotation\&quot;: \&quot;pepperoni\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/pepperoni.png\&quot;,\n \&quot;tag\&quot;: \&quot;ingredient\&quot;\n },\n {\n \&quot;annotation\&quot;: \&quot;tomatoes\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/tomato.png\&quot;,\n \&quot;tag\&quot;: \&quot;ingredient\&quot;\n },\n {\n \&quot;annotation\&quot;: \&quot;cheddar\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/cheddar-cheese.png\&quot;,\n \&quot;tag\&quot;: \&quot;ingredient\&quot;\n },\n {\n \&quot;annotation\&quot;: \&quot;tacos\&quot;,\n \&quot;image\&quot;: \&quot;https://spoonacular.com/menuItemImages/taco-isolated.jpg\&quot;,\n \&quot;tag\&quot;: \&quot;dish\&quot;\n },\n {\n \&quot;annotation\&quot;: \&quot;pizza\&quot;,\n \&quot;image\&quot;: \&quot;https://spoonacular.com/menuItemImages/cheese-pizza.png\&quot;,\n \&quot;tag\&quot;: \&quot;dish\&quot;\n }\n ]\n}\n```\n\n#### Interactive Demo\nChange the text in the box and press \&quot;Detect\&quot;. The detected dishes will be displayed in red and the detected ingredients in purple.\n\nDetect\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Site Content\nSearch spoonacular\u0027s site content. You\u0027ll be able to find everything that you could also find using the search suggestions on spoonacular.com. This is a suggest API so you can send partial strings as queries.\n\nGET\n\nhttps://api.spoonacular.com/food/site/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | past | The query to search for. You can also use partial queries such as \&quot;spagh\&quot; to already find spaghetti recipes, articles, grocery products, and other content. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/site/search?query\u003dpast\n\n```\n{\n \&quot;Articles\&quot;: [\n {\n \&quot;dataPoints\&quot;: [],\n \&quot;image\&quot;: \&quot;https://spoonacular.com/application/frontend/images/academy/vietnamese-cuisine.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/academy/vietnamese\&quot;,\n \&quot;name\&quot;: \&quot;Traditional Vietnamese Recipes\&quot;\n },\n {\n \&quot;dataPoints\&quot;: [],\n \&quot;image\&quot;: \&quot;https://spoonacular.com/application/frontend/images/academy/thai-cuisine.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/academy/thai\&quot;,\n \&quot;name\&quot;: \&quot;Authentic Thai Recipes\&quot;\n },\n {\n \&quot;dataPoints\&quot;: [],\n \&quot;image\&quot;: \&quot;https://spoonacular.com/application/frontend/images/academy/korean-food.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/academy/korean\&quot;,\n \&quot;name\&quot;: \&quot;Typical Korean Recipes\&quot;\n }\n ],\n \&quot;Grocery Products\&quot;: [\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;30 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;2g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;0.0g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;6g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/218909-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/products/vine-ripe-tomato-paste-218909\&quot;,\n \&quot;name\&quot;: \&quot;Vine-ripe Tomato Paste\&quot;\n },\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;30 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;2g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;0.0g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;6g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/178883-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/products/contadina-tomato-paste-178883\&quot;,\n \&quot;name\&quot;: \&quot;Contadina Tomato Paste\&quot;\n },\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;30 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;2g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;0.0g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;6g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/137031-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/products/cento-tomato-paste-137031\&quot;,\n \&quot;name\&quot;: \&quot;Cento Tomato Paste\&quot;\n }\n ],\n \&quot;Menu Items\&quot;: [\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;230 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;1g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;15g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;23g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://spoonacular.com/menuItemImages/stir-fry.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/menu-items/thai-express-stir-fry-chilli-paste-401670\&quot;,\n \&quot;name\&quot;: \&quot;Thai Express Stir-Fry, Chilli Paste\&quot;\n }\n ],\n \&quot;Recipes\&quot;: [\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Cost\&quot;,\n \&quot;value\&quot;: \&quot;$10.51 per serving\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;400 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;9g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;32g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;26g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/224844-556x370.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/recipes/chermoula-paste-224844\&quot;,\n \&quot;name\&quot;: \&quot;Chermoula Paste\&quot;\n },\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Cost\&quot;,\n \&quot;value\&quot;: \&quot;$8.37 per serving\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;3560 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;119g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;319g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;54g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/146847-556x370.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/recipes/lulu-paste-146847\&quot;,\n \&quot;name\&quot;: \&quot;Lulu Paste\&quot;\n },\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Cost\&quot;,\n \&quot;value\&quot;: \&quot;$6.68 per serving\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;990 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;53g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;86g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;0.82g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/84670-556x370.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/recipes/steak-paste-84670\&quot;,\n \&quot;name\&quot;: \&quot;Steak Paste\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search All Food\nSearch all food content with one call. That includes recipes, grocery products, menu items, simple foods (ingredients), and food videos.\n\nGET\n\nhttps://api.spoonacular.com/food/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | apple | The search query. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 990). |\n| `number` | number | 10 | The number of expected results (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/search?query\u003dapple\u0026number\u003d2\n\n```\n{\n \&quot;query\&quot;: \&quot;apple\&quot;,\n \&quot;totalResults\&quot;: 5826,\n \&quot;limit\&quot;: 2,\n \&quot;offset\&quot;: 0,\n \&quot;searchResults\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Recipes\&quot;,\n \&quot;totalResults\&quot;: 167,\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 632485,\n \&quot;name\&quot;: \&quot;Apple Cake\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/632485-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/recipes/apple-cake-632485\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 10000,\n \&quot;content\&quot;: \&quot;Apple Cake might be just the dessert you are searching for...\&quot;\n },\n {\n \&quot;id\&quot;: 632522,\n \&quot;name\&quot;: \&quot;Apple Crumble\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/632522-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/recipes/apple-crumble-632522\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 9999,\n \&quot;content\&quot;: \&quot;Apple Crumble might be just the dessert you are searching for...\&quot;\n }\n ]\n },\n {\n \&quot;name\&quot;: \&quot;Products\&quot;,\n \&quot;totalResults\&quot;: 3219,\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 428571,\n \&quot;name\&quot;: \&quot;Pleasant Valley Apple Wine\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/469604-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/products/pleasant-valley-apple-wine-469604\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 10000\n },\n {\n \&quot;id\&quot;: 428573,\n \&quot;name\&quot;: \&quot;NV Georgetown Vineyards Apple Wine\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/428573-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/products/nv-georgetown-vineyards-apple-wine-428573\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 9999\n }\n ]\n },\n {\n \&quot;name\&quot;: \&quot;Menu Items\&quot;,\n \&quot;totalResults\&quot;: 2410,\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 334550,\n \&quot;name\&quot;: \&quot;Old Chicago Applewood Spiced BBQ Chicken Pizza, Chicago Thick, 12 Inch (Slice)\&quot;,\n \&quot;image\&quot;: null,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/menu-items/old-chicago-applewood-spiced-bbq-chicken-pizza-chicago-thick-12-inch--334550\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 10000\n },\n {\n \&quot;id\&quot;: 422013,\n \&quot;name\&quot;: \&quot;Huddle House Apple Cobbler a la mode\&quot;,\n \&quot;image\&quot;: null,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/menu-items/huddle-house-apple-cobbler-a-la-mode-422013\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 9999\n }\n ]\n },\n {\n \&quot;name\&quot;: \&quot;Articles\&quot;,\n \&quot;totalResults\&quot;: 28,\n \&quot;results\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Apples\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/braeburn-apples.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/academy/apples\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 90.46\n },\n {\n \&quot;name\&quot;: \&quot;Vinegar\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/red-wine-vinegar.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/academy/vinegar\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 23.80\n }\n ]\n },\n {\n \&quot;name\&quot;: \&quot;Videos\&quot;,\n \&quot;totalResults\&quot;: 2,\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: \&quot;G0HENy59YkE\&quot;,\n \&quot;name\&quot;: \&quot;Pineapple Bundt Cake\&quot;,\n \&quot;image\&quot;: \&quot;https://i.ytimg.com/vi/G0HENy59YkE/hqdefault.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://www.youtube.com/watch?v\u003dG0HENy59YkE\&quot;,\n \&quot;type\&quot;: \&quot;YOUTUBE_VIDEO\&quot;,\n \&quot;relevance\&quot;: 10000,\n \&quot;content\&quot;: \&quot;FULL RECIPE HERE: https://tatyanaseverydayfood.com/recipe-items/pineapple-bundt-cake/...\&quot;\n },\n {\n \&quot;id\&quot;: \&quot;xEENgO5Z5To\&quot;,\n \&quot;name\&quot;: \&quot;Pineapple Shrimp Tacos\&quot;,\n \&quot;image\&quot;: \&quot;https://i.ytimg.com/vi/xEENgO5Z5To/mqdefault.jpg\&quot;,\n \&quot;link\&quot;: null,\n \&quot;type\&quot;: \&quot;YOUTUBE_VIDEO\&quot;,\n \&quot;relevance\&quot;: 9999,\n \&quot;content\&quot;: \&quot;RECIPE: Below in description.\\nThese Pineapple Shrimp Tacos cook in 5 minutes and assembly is a breeze...\&quot;\n }\n ]\n },\n {\n \&quot;name\&quot;: \&quot;Simple Foods\&quot;,\n \&quot;totalResults\&quot;: 2,\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 78541,\n \&quot;name\&quot;: \&quot;apple\&quot;,\n \&quot;image\&quot;: \&quot;apple.jpg\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 10000\n },\n {\n \&quot;id\&quot;: 8782,\n \&quot;name\&quot;: \&quot;applesauce\&quot;,\n \&quot;image\&quot;: \&quot;applesauce.png\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 9999\n }\n ]\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\nand\n\n0.01 points\n\nper result returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Food Videos\nFind recipe and other food related videos. This endpoint searches YouTube for relevant recipe or other food-related videos. Please be sure to read the [YouTube Terms of Service](https://www.youtube.com/static?template\u003dterms) before embedding videos into your site or app.\n\nGET\n\nhttps://api.spoonacular.com/food/videos/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | chicken soup | The search query. |\n| `type` | string | main course | The type of the recipes. See a full [list of supported meal types](https://spoonacular.com/food-api/docs#Meal-Types). |\n| `cuisine` | string | italian | The cuisine(s) of the recipes. One or more, comma separated. See a full [list of supported cuisines](https://spoonacular.com/food-api/docs#Cuisines). |\n| `diet` | string | vegetarian | The diet for which the recipes must be suitable. See a full [list of supported diets](https://spoonacular.com/food-api/docs#Diets). |\n| `includeIngredients` | string | tomato,cheese | A comma-separated list of ingredients that the recipes should contain. |\n| `excludeIngredients` | string | eggs | A comma-separated list of ingredients or ingredient types that the recipes must not contain. |\n| `minLength` | number | 0 | Minimum video length in seconds. |\n| `maxLength` | number | 999 | Maximum video length in seconds. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 900). |\n| `number` | number | 10 | The number of results to return (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/videos/search?query\u003dpasta\u0026number\u003d2\n\n```\n{\n \&quot;videos\&quot;: [\n {\n \&quot;title\&quot;: \&quot;8 One-Pot Pastas\&quot;,\n \&quot;length\&quot;: 370,\n \&quot;rating\&quot;: 0.985984219269103,\n \&quot;shortTitle\&quot;: \&quot;8 One-Pot Pastas\&quot;,\n \&quot;thumbnail\&quot;: \&quot;https://i.ytimg.com/vi/YTZGPCCB2FU/mqdefault.jpg\&quot;,\n \&quot;views\&quot;: 550467,\n \&quot;youTubeId\&quot;: \&quot;YTZGPCCB2FU\&quot;\n },\n {\n \&quot;title\&quot;: \&quot;Macaroni salad - pasta salad recipes - healthy recipe channel - quick tasty recipe - cooking channel\&quot;,\n \&quot;length\&quot;: 333,\n \&quot;rating\&quot;: 1.0,\n \&quot;shortTitle\&quot;: \&quot;Macaroni salad\&quot;,\n \&quot;thumbnail\&quot;: \&quot;https://i.ytimg.com/vi/81bn4p8H3Kg/mqdefault.jpg\&quot;,\n \&quot;views\&quot;: 307,\n \&quot;youTubeId\&quot;: \&quot;81bn4p8H3Kg\&quot;\n }\n ],\n \&quot;totalResults\&quot;: 172\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper video returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Random Food Joke\nGet a random joke that is related to food. Caution: this is an endpoint for adults!\n\nGET\n\nhttps://api.spoonacular.com/food/jokes/random\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/jokes/random\n\n```\n{\n \&quot;text\&quot;: \&quot;Any salad can be a Caesar salad if you stab it enough.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Random Food Trivia\nReturns random food trivia.\n\nGET\n\nhttps://api.spoonacular.com/food/trivia/random\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/trivia/random\n\n```\n{\n \&quot;text\&quot;: \&quot;The red food-coloring carmine used in Skittles and other candies is made from boiled cochineal bugs, a type of beetle.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Ingredient Information\nUse an ingredient id to get all available information about an ingredient, such as its image and supermarket aisle.\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/{id}/information\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 9266 | The ingredient id. |\n| `amount` | number | 150 | The amount of this ingredient. |\n| `unit` | string | grams | The unit for the given amount. |\n| `locale` | string | en\\_US | The display name of the returned category, supported is en\\_US (for American English) and en\\_GB (for British English). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/9266/information?amount\u003d1\n\n```\n{\n \&quot;id\&quot;: 9266,\n \&quot;original\&quot;: \&quot;pineapples\&quot;,\n \&quot;originalName\&quot;: \&quot;pineapples\&quot;,\n \&quot;name\&quot;: \&quot;pineapples\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;unitShort\&quot;: \&quot;\&quot;,\n \&quot;unitLong\&quot;: \&quot;\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;piece\&quot;,\n \&quot;slice\&quot;,\n \&quot;fruit\&quot;,\n \&quot;g\&quot;,\n \&quot;oz\&quot;,\n \&quot;cup\&quot;,\n \&quot;serving\&quot;\n ],\n \&quot;estimatedCost\&quot;: {\n \&quot;value\&quot;: 299.0,\n \&quot;unit\&quot;: \&quot;US Cents\&quot;\n },\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;shoppingListUnits\&quot;: [\n \&quot;pieces\&quot;\n ],\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;image\&quot;: \&quot;pineapple.jpg\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;nutrition\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 452.5,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 22.63\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 1.09,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.67\n },\n {\n \&quot;name\&quot;: \&quot;Saturated Fat\&quot;,\n \&quot;amount\&quot;: 0.08,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.51\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 118.74,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 39.58\n },\n {\n \&quot;name\&quot;: \&quot;Net Carbohydrates\&quot;,\n \&quot;amount\&quot;: 106.07,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 38.57\n },\n {\n \&quot;name\&quot;: \&quot;Sugar\&quot;,\n \&quot;amount\&quot;: 89.14,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 99.05\n },\n {\n \&quot;name\&quot;: \&quot;Cholesterol\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.0\n },\n {\n \&quot;name\&quot;: \&quot;Sodium\&quot;,\n \&quot;amount\&quot;: 9.05,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.39\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 4.89,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9.77\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin C\&quot;,\n \&quot;amount\&quot;: 432.59,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 524.35\n },\n {\n \&quot;name\&quot;: \&quot;Manganese\&quot;,\n \&quot;amount\&quot;: 8.39,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 419.47\n },\n {\n \&quot;name\&quot;: \&quot;Fiber\&quot;,\n \&quot;amount\&quot;: 12.67,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 50.68\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin B6\&quot;,\n \&quot;amount\&quot;: 1.01,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 50.68\n },\n {\n \&quot;name\&quot;: \&quot;Copper\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 49.78\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin B1\&quot;,\n \&quot;amount\&quot;: 0.72,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 47.66\n },\n {\n \&quot;name\&quot;: \&quot;Folate\&quot;,\n \&quot;amount\&quot;: 162.9,\n \&quot;unit\&quot;: \&quot;µg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 40.73\n },\n {\n \&quot;name\&quot;: \&quot;Potassium\&quot;,\n \&quot;amount\&quot;: 986.45,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 28.18\n },\n {\n \&quot;name\&quot;: \&quot;Magnesium\&quot;,\n \&quot;amount\&quot;: 108.6,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 27.15\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin B3\&quot;,\n \&quot;amount\&quot;: 4.53,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 22.63\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin B5\&quot;,\n \&quot;amount\&quot;: 1.93,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19.28\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin B2\&quot;,\n \&quot;amount\&quot;: 0.29,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17.04\n },\n {\n \&quot;name\&quot;: \&quot;Iron\&quot;,\n \&quot;amount\&quot;: 2.62,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 14.58\n },\n {\n \&quot;name\&quot;: \&quot;Calcium\&quot;,\n \&quot;amount\&quot;: 117.65,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 11.77\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin A\&quot;,\n \&quot;amount\&quot;: 524.9,\n \&quot;unit\&quot;: \&quot;IU\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 10.5\n },\n {\n \&quot;name\&quot;: \&quot;Zinc\&quot;,\n \&quot;amount\&quot;: 1.09,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 7.24\n },\n {\n \&quot;name\&quot;: \&quot;Phosphorus\&quot;,\n \&quot;amount\&quot;: 72.4,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 7.24\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin K\&quot;,\n \&quot;amount\&quot;: 6.34,\n \&quot;unit\&quot;: \&quot;Âµg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 6.03\n },\n {\n \&quot;name\&quot;: \&quot;Selenium\&quot;,\n \&quot;amount\&quot;: 0.91,\n \&quot;unit\&quot;: \&quot;Âµg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.29\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin E\&quot;,\n \&quot;amount\&quot;: 0.18,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.21\n }\n ],\n \&quot;properties\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Glycemic Index\&quot;,\n \&quot;amount\&quot;: 58.67,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Glycemic Load\&quot;,\n \&quot;amount\&quot;: 62.23,\n \&quot;unit\&quot;: \&quot;\&quot;\n }\n ],\n \&quot;flavonoids\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Cyanidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n }\n ],\n \&quot;caloricBreakdown\&quot;: {\n \&quot;percentProtein\&quot;: 3.88,\n \&quot;percentFat\&quot;: 1.94,\n \&quot;percentCarbs\&quot;: 94.18\n },\n \&quot;weightPerServing\&quot;: {\n \&quot;amount\&quot;: 905,\n \&quot;unit\&quot;: \&quot;g\&quot;\n }\n },\n \&quot;categoryPath\&quot;: [\n \n\n#### Parameters\n\&quot;tropical fruit\&quot;,\n \&quot;fruit\&quot;\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Talk to Chatbot\nThis endpoint can be used to have a conversation about food with the spoonacular chatbot. Use the \&quot;Conversation Suggests\&quot; endpoint to show your user what he or she can say.\n\nGET\n\nhttps://api.spoonacular.com/food/converse\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`text`** | string | donut recipes | The request / question / answer from the user to the chatbot. |\n| `contextId` | string | 342938 | An arbitrary globally unique id for your conversation. The conversation can contain states so you should pass your context id if you want the bot to be able to remember the conversation. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/converse?text\u003dtell+me+a+joke\n\n```\n{\n \&quot;answerText\&quot;: \&quot;Baby, if you were a fruit you\u0027d be a fineapple.\&quot;,\n \&quot;media\&quot;: []\n}\n```\n\n#### Learn more\nSee how you can [write your own chatbot](https://spoonacular.com/spoonacular.com#write-a-chatbot) or test spoonacular\u0027s [food chatbot](https://spoonacular.com/chatbot).\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Conversation Suggests\nThis endpoint returns suggestions for things the user can say or ask the chatbot.\n\nGET\n\nhttps://api.spoonacular.com/food/converse/suggest\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | tell | A (partial) query from the user. The endpoint will return if it matches topics it can talk about. |\n| `number` | number | 5 | The number of suggestions to return (between 1 and 25). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/converse/suggest?query\u003dtell\u0026number\u003d5\n\n```\n{\n \&quot;suggests\&quot;: {\n \&quot;_\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Tell me something funny\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Tell me a food fact\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Tell me a joke\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Tell me food trivia\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Tell me a fact about food\&quot;\n }\n ]\n },\n \&quot;words\&quot;: []\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Nutrition\nFood objects (whole foods, recipes, grocery products, menu items) have nutrition. Endpoints that expose nutritional information group nutrition into three categories: Nutrients (Macro and Micro), Food Properties, and Flavonoids.\n\n### Nutrients - Macro and Micro Nutrients\n- Calories (in kcal)\n- Fat (in g)\n- Trans Fat (in g)\n- Saturated Fat (in g)\n- Mono Unsaturated Fat (in g)\n- Poly Unsaturated Fat (in g)\n- Protein (in g)\n- Cholesterol (in mg)\n- Carbohydrates (in g)\n- Net Carbohydrates (in g)\n- Alcohol (in g)\n- Fiber (in g)\n- Sugar (in g)\n- Sodium (in mg)\n- Caffein (in mg)\n- Manganese (in mg)\n- Potassium (in mg)\n- Magnesium (in mg)\n- Calcium (in mg)\n- Copper (in mg)\n- Zinc (in mg)\n- Phosphorus (in mg)\n- Fluoride (in mg)\n- Choline (in mg)\n- Iron (in mg)\n- Vitamin A (in IU)\n- Vitamin B1 (in mg)\n- Vitamin B2 (in mg)\n- Vitamin B3 (in mg)\n- Vitamin B5 (in mg)\n- Vitamin B6 (in mg)\n- Vitamin B12 (in Âµg)\n- Vitamin C (in mg)\n- Vitamin D (in Âµg)\n- Vitamin E (in mg)\n- Vitamin K (in Âµg)\n- Folate (in Âµg)\n- Folic Acid (in Âµg)\n- Iodine (in Âµg)\n- Selenium (in Âµg)\n\n### Food Properties\n- Glycemic Index\n- Glycemic Load\n\n### Flavonoids\nFlavonoids are food compounds called phytonutrients, which are found in many plants (fruit and vegetables) that have multiple health benefits.\n\n- Cyanidin (in mg)\n- Petunidin (in mg)\n- Delphinidin (in mg)\n- Malvidin (in mg)\n- Pelargonidin (in mg)\n- Peonidin (in mg)\n- Catechin (in mg)\n- Epigallocatechin (in mg)\n- Epicatechin (in mg)\n- Epicatechin 3-gallate (in mg)\n- Epigallocatechin 3-gallate (in mg)\n- Theaflavin (in mg)\n- Theaflavin-3,3\u0027-digallate (in mg)\n- Theaflavin-3\u0027-gallate (in mg)\n- Theaflavin-3-gallate (in mg)\n- Thearubigins (in mg)\n- Eriodictyol (in mg)\n- Hesperetin (in mg)\n- Naringenin (in mg)\n- Apigenin (in mg)\n- Luteolin (in mg)\n- Isorhamnetin (in mg)\n- Kaempferol (in mg)\n- Myricetin (in mg)\n- Quercetin (in mg)\n- Gallocatechin (in mg)\n\n## List of Ingredients\nIf you need ingredient names in your application, you can download a list of the 1,000 most frequently used ingredients including their id so you can call the API for more information. You are allowed to cache this list on your end but it is advised to update it every once in a while due to possible ingredient id changes.\n\n[Download ingredient list with possible units](https://spoonacular.com/application/frontend/downloads/ingredients-with-possible-units.csv)\n\n## List of Pantry Items\nIf you need ingredient names in your application, you can download a list of the 1,000 most frequently used ingredients including their id so you can call the API for more information. You are allowed to cache this list on your end but it is advised to update it every once in a while due to possible ingredient id changes.\n\n- Water (id: 14412)\n- Ice (id: 10014412)\n- Flour (id: 20081)\n- Sugar (id: 19335)\n- Cane Sugar (id: 10719335)\n- Olive Oil (id: 4053)\n- Cooking Fat (id: 1004513)\n- Cooking Oil (id: 4582)\n- Vegetable Oil (id: 4513)\n- Black Pepper (id: 1002030)\n- Sea Salt (id: 1012047)\n- Salt (id: 2047)\n\n## List of Supermarket Aisles\n- Baking\n- Health Foods\n- Spices and Seasonings\n- Pasta and Rice\n- Bakery/Bread\n- Refrigerated\n- Canned and Jarred\n- Frozen\n- Nut butters, Jams, and Honey\n- Oil, Vinegar, Salad Dressing\n- Condiments\n- Savory Snacks\n- Milk, Eggs, Other Dairy\n- Ethnic Foods\n- Tea and Coffee\n- Meat\n- Gourmet\n- Sweet Snacks\n- Gluten Free\n- Alcoholic Beverages\n- Cereal\n- Nuts\n- Beverages\n- Produce\n- Not in Grocery Store/Homemade\n- Seafood\n- Cheese\n- Dried Fruits\n- Online\n- Grilling Supplies\n- Bread\n\n## Search Restaurants\nSearch through thousands of restaurants (in North America) by location, cuisine, budget, and more.\n\nGET\n\nhttps://api.spoonacular.com/food/restaurants/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| `query` | string | beach cafe | The search query. |\n| `lat` | number | 37.7786357 | The latitude of the user\u0027s location. |\n| `lng` | number | -122.3918135 | The longitude of the user\u0027s location.\&quot;. |\n| `distance` | number | 2 | The distance around the location in miles. |\n| `budget` | number | 20 | The user\u0027s budget for a meal in USD. |\n| `cuisine` | string | italian | The cuisine of the restaurant. |\n| `min-rating` | number | 4.4 | The minimum rating of the restaurant between 0 and 5. |\n| `is-open` | boolean | true | Whether the restaurant must be open at the time of search. |\n| `sort` | string | distance | How to sort the results, one of the following \u0027cheapest\u0027, \u0027fastest\u0027, \u0027rating\u0027, \u0027distance\u0027 or the default \u0027relevance\u0027. |\n| `page` | number | 0 | The page number of results. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/restaurants/search?cuisine\u003ditalian\u0026lat\u003d37.7786357\u0026lng\u003d-122.3918135\n\n```\n{\n \&quot;restaurants\&quot;: [\n {\n \&quot;_id\&quot;: \&quot;a8b49c84-a92d-4f06-802e-467af49feaf0\&quot;,\n \&quot;name\&quot;: \&quot;South Beach Cafe\&quot;,\n \&quot;phone_number\&quot;: 14159741115,\n \&quot;address\&quot;: {\n \&quot;street_addr\&quot;: \&quot;800 The Embarcadero\&quot;,\n \&quot;city\&quot;: \&quot;San Francisco\&quot;,\n \&quot;state\&quot;: \&quot;CA\&quot;,\n \&quot;zipcode\&quot;: \&quot;94107\&quot;,\n \&quot;country\&quot;: \&quot;US\&quot;,\n \&quot;lat\&quot;: 37.78129959,\n \&quot;lon\&quot;: -122.38869477,\n \&quot;street_addr_2\&quot;: \&quot;\&quot;,\n \&quot;latitude\&quot;: 37.78129959,\n \&quot;longitude\&quot;: -122.38869477\n },\n \&quot;type\&quot;: \&quot;restaurant\&quot;,\n \&quot;description\&quot;: \&quot;Italian, Pizza\&quot;,\n \&quot;local_hours\&quot;: {\n \&quot;operational\&quot;: {\n \&quot;Monday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Tuesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Wednesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Thursday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Friday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Saturday\&quot;: \&quot;08:00AM - 09:00PM\&quot;,\n \&quot;Sunday\&quot;: \&quot;08:00AM - 09:00PM\&quot;\n },\n \&quot;delivery\&quot;: {\n \&quot;Monday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Tuesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Wednesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Thursday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Friday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Saturday\&quot;: \&quot;08:00AM - 09:00PM\&quot;,\n \&quot;Sunday\&quot;: \&quot;08:00AM - 09:00PM\&quot;\n },\n \&quot;pickup\&quot;: {\n \&quot;Monday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Tuesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Wednesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Thursday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Friday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Saturday\&quot;: \&quot;08:00AM - 09:00PM\&quot;,\n \&quot;Sunday\&quot;: \&quot;08:00AM - 09:00PM\&quot;\n },\n \&quot;dine_in\&quot;: {\n \&quot;Monday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Tuesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Wednesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Thursday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Friday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Saturday\&quot;: \&quot;08:00AM - 09:00PM\&quot;,\n \&quot;Sunday\&quot;: \&quot;08:00AM - 09:00PM\&quot;\n }\n },\n \&quot;cuisines\&quot;: [\n \&quot;Breakfast\&quot;,\n \&quot;Dinner\&quot;,\n \&quot;Italian\&quot;,\n \&quot;Lunch\&quot;,\n \&quot;Pickup\&quot;,\n \&quot;Pizza\&quot;,\n \&quot;Salads\&quot;,\n \&quot;Sandwich\&quot;,\n \&quot;Sandwiches\&quot;,\n \&quot;Takeout\&quot;\n ],\n \&quot;food_photos\&quot;: [\n \&quot;https://cdn-img.mealme.ai/f3d0e396f1b552927092bafa65ef2cc4e8b57c22/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f62657462706b3570747a37756a306279616b6a672e6a7067\&quot;\n ],\n \&quot;logo_photos\&quot;: [\n \&quot;https://cdn-img.mealme.ai/25b450d4e72eea47dccd744c326e49e23343bd0d/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f677275626875622f696d6167652f75706c6f61642f76313531383830323236382f63686a6a356173716f6766696e726f7671376f732e706e67\&quot;\n ],\n \&quot;store_photos\&quot;: [],\n \&quot;dollar_signs\&quot;: 2,\n \&quot;pickup_enabled\&quot;: true,\n \&quot;delivery_enabled\&quot;: true,\n \&quot;is_open\&quot;: false,\n \&quot;offers_first_party_delivery\&quot;: false,\n \&quot;offers_third_party_delivery\&quot;: true,\n \&quot;miles\&quot;: 0.2508434381960197,\n \&quot;weighted_rating_value\&quot;: 4.725654450261779,\n \&quot;aggregated_rating_count\&quot;: 191\n },\n ...\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Wine Guide\nHere you can see the classification spoonacular uses for wines. If you are missing a wine please let us know!\n\n### Classification of Wines\n```\nwine\n - white_wine\n - dry_white_wine\n - assyrtiko\n - pinot_blanc\n - cortese\n - roussanne\n - moschofilero\n - muscadet\n - viognier\n - verdicchio\n - greco\n - marsanne\n - white_burgundy\n - chardonnay\n - gruener_veltliner\n - white_rioja\n - frascati\n - gavi\n - l_acadie_blanc\n - trebbiano\n - sauvignon_blanc\n - catarratto\n - albarino\n - arneis\n - verdejo\n - vermentino\n - soave\n - pinot_grigio\n - dry_riesling\n - torrontes\n - mueller_thurgau\n - grechetto\n - gewurztraminer\n - chenin_blanc\n - white_bordeaux\n - semillon\n - riesling\n - sauternes\n - sylvaner\n - lillet_blanc\n - red_wine\n - dry_red_wine\n - petite_sirah\n - zweigelt\n - baco_noir\n - bonarda\n - cabernet_franc\n - bairrada\n - barbera_wine\n - primitivo\n - pinot_noir\n - nebbiolo\n - dolcetto\n - tannat\n - negroamaro\n - red_burgundy\n - corvina\n - rioja\n - cotes_du_rhone\n - grenache\n - malbec\n - zinfandel\n - sangiovese\n - carignan\n - carmenere\n - cesanese\n - cabernet_sauvignon\n - aglianico\n - tempranillo\n - shiraz\n - mourvedre\n - merlot\n - nero_d_avola\n - bordeaux\n - marsala\n - port\n - gamay\n - dornfelder\n - concord_wine\n - sparkling_red_wine\n - pinotage\n - agiorgitiko\n - dessert_wine\n - pedro_ximenez\n - moscato\n - late_harvest\n - ice_wine\n - white_port\n - lambrusco_dolce\n - madeira\n - banyuls\n - vin_santo\n - port\n - rose_wine\n - sparkling_rose\n - sparkling_wine\n - cava\n - cremant\n - champagne\n - prosecco\n - spumante\n - sparkling_rose\n - sherry\n - cream_sherry\n - dry_sherry\n - vermouth\n - dry_vermouth\n - fruit_wine\n - mead\n\n```\n\n## Working with the Meal Planner\nThe spoonacular API allows you to interact with the spoonacular meal planner. Check out the endpoints under \&quot;Meal Planning\&quot; on the left to see what you can do.\n\nSince meal plans and shopping lists are user-specific, you need to also pass a `username` and the user\u0027s `hash` besides your `apiKey`. This guarantees that you have the user\u0027s rights to manipulate her meal plan and/or shopping list.\n\nIf you want to create a [meal planner](https://spoonacular.com/meal-planner) like spoonacular\u0027s you can use these endpoints to realize it.\n\nHere\u0027s an example workflow:\n\n1. Connect your app\u0027s user with spoonacular by calling [Connect User](https://spoonacular.com/spoonacular.com#Connect-User).\n2. During step one you will get the user\u0027s `username` and `hash` from spoonacular. Save this on your side and connect it to your user. This allows you to make requests on the user\u0027s behalf.\n3. Now you can use the meal planning endpoints. For example, your app could do the following:\n1. Offer the user existing meal plans (e.g. vegetarian or keto meal plans) by calling [Get Meal Plan Templates](https://spoonacular.com/spoonacular.com#Get-Meal-Plan-Templates).\n2. Let the user add recipes, products, or simple foods to her meal plan via the [Add to Meal Plan](https://spoonacular.com/spoonacular.com#Get-Meal-Plan-Templates) endpoint.\n3. Now that the user has food on the meal plan, you can let her generate a shopping list by calling the [Generate Shopping List](https://spoonacular.com/spoonacular.com#Generate-Shopping-List) endpoint.\n4. If the user then is in the store you can show her the current shopping list via the [Get Shopping List](https://spoonacular.com/spoonacular.com#Generate-Shopping-List) endpoint and let her remove items as she buys them using the [Delete from Shopping List](https://spoonacular.com/spoonacular.com#Delete-from-Shopping-List) endpoint.\n\nFeel free to reach out to us if you\u0027d like to see specific functionality that we currently do not list here.\n\n#### Ingredients\nEndpoints like the ingredient autosuggestion will only give you an image name. You have to build the full URL by adding the base path to the beginning. The base path for ingredient images is **https://img.spoonacular.com/ingredients\\_{SIZE}/**, where **{SIZE}** is one of the following:\n\n- 100x100\n- 250x250\n- 500x500\n\nSo for \&quot;apple.jpg\&quot; the full path for 100x100 is [https://img.spoonacular.com/ingredients\\_100x100/apple.jpg](https://img.spoonacular.com/ingredients_100x100/apple.jpg)\n\n#### Cooking Equipment\nThe recipe instruction endpoint will give you information about the equipment used for cooking the dish. You will again only receive the image name for the equipment. You have to build the full URL by adding the base path to the beginning. The base path for equipment images is **https://img.spoonacular.com/equipment\\_{SIZE}/**, where **{SIZE}** is one of the following:\n\n- 100x100\n- 250x250\n- 500x500\n\nSo for \&quot;slow-cooker.jpg\&quot; the full path for 100x100 is [https://img.spoonacular.com/equipment\\_100x100/slow-cooker.jpg](https://img.spoonacular.com/equipment_100x100/slow-cooker.jpg)\n\n#### Recipes\nRecipe endpoints will almost always give you a recipe `id` **{ID}**. With that and the `imageType` **{TYPE}** you can build the complete image paths depending on your needs.\n\nThe base path for image URLs is **https://img.spoonacular.com/recipes/**. Once you know the recipe id **{ID}** and image type **{TYPE}**, you can complete that path to show an image.\nThe complete path follows this pattern **https://img.spoonacular.com/recipes/{ID}-{SIZE}.{TYPE}**, where **{SIZE}** is one of the following:\n\n- 90x90\n- 240x150\n- 312x150\n- 312x231\n- 480x360\n- 556x370\n- 636x393\n\nA complete image path might look like this: [https://img.spoonacular.com/recipes/1697885-556x370.jpg](https://img.spoonacular.com/recipes/1697885-556x370.jpg)\n\nOr this: [https://img.spoonacular.com/recipes/1697885-90x90.jpg](https://img.spoonacular.com/recipes/1697885-90x90.jpg)\n\n#### Grocery Products\nGrocery product endpoints will almost always give you a product id **{ID}**. With that and the imageType **{TYPE}** you can build the complete image paths depending on your needs.\n\nThe base path for image URLs is **https://img.spoonacular.com/products/**. Once you know the product id **{ID}** and image type **{TYPE}**, you can complete that path to show an image.\nThe complete path follows this pattern **https://img.spoonacular.com/products/{ID}-{SIZE}.{TYPE}**, where **{SIZE}** is one of the following:\n\n- 90x90\n- 312x231\n- 636x393\n\nA complete image path might look like this: [https://img.spoonacular.com/products/35507-636x393.jpeg](https://img.spoonacular.com/products/35507-636x393.jpeg)\n\nOr this: [https://img.spoonacular.com/products/35507-90x90.jpeg](https://img.spoonacular.com/products/35507-90x90.jpeg)\n\n#### Menu Items\nMenu item will almost always give you a menu item id **{ID}**. With that and the imageType **{TYPE}** you can build the complete image paths depending on your needs.\n\nThe base path for image URLs is **https://img.spoonacular.com/menu-items/**. Once you know the menu item id **{ID}** and image type **{TYPE}**, you can complete that path to show an image.\nThe complete path follows this pattern **https://img.spoonacular.com/menu-items/{ID}-{SIZE}.{TYPE}**, where **{SIZE}** is one of the following:\n\n- 90x90\n- 312x231\n- 636x393\n\nA complete image path might look like this: [https://img.spoonacular.com/menu-items/423186-636x393.png](https://img.spoonacular.com/menu-items/423186-636x393.png)\n\nOr this: [https://img.spoonacular.com/menu-items/423186-90x90.png](https://img.spoonacular.com/menu-items/423186-90x90.png)\n\n## Intolerances\nEvery API endpoint asking for a `intolerances` parameter can be fed with any of these intolerances.\n\n- Dairy\n- Egg\n- Gluten\n- Grain\n- Peanut\n- Seafood\n- Sesame\n- Shellfish\n- Soy\n- Sulfite\n- Tree Nut\n- Wheat\n\n## Cooking and Eating Equipment\nEvery API endpoint asking for a `equipment` parameter can be fed with any of these cooking equipments.\n\n- skimmer\n- pie form\n- glass baking pan\n- garlic press\n- meat grinder\n- tongs\n- bread knife\n- tajine pot\n- wire rack\n- mincing knife\n- cherry pitter\n- wooden skewers\n- kitchen scissors\n- blow torch\n- broiler pan\n- heart shaped silicone form\n- grill\n- immersion blender\n- baking sheet\n- oven mitt\n- pastry bag\n- palette knife\n- pizza cutter\n- bottle opener\n- bowl\n- pizza pan\n- candy thermometer\n- rolling pin\n- frying pan\n- casserole dish\n- plastic wrap\n- salad spinner\n- broiler\n- silicone muffin tray\n- meat tenderizer\n- edible cake image\n- measuring spoon\n- kitchen thermometer\n- sifter\n- muffin tray\n- chocolate mold\n- kitchen towels\n- potato ricer\n- silicone kugelhopf pan\n- offset spatula\n- cheesecloth\n- lemon squeezer\n- cake form\n- mini muffin tray\n- carving fork\n- egg slicer\n- ice cube tray\n- corkscrew\n- ice cream machine\n- sieve\n- kugelhopf pan\n- pastry brush\n- popsicle sticks\n- spatula\n- cake server\n- poultry shears\n- box grater\n- cupcake toppers\n- funnel\n- drinking straws\n- slotted spoon\n- ceramic pie form\n- pepper grinder\n- mortar and pestle\n- baster\n- melon baller\n- zester\n- pastry cutter\n- ziploc bags\n- aluminum foil\n- toothpicks\n- pot\n- baking pan\n- ladle\n- apple cutter\n- fillet knife\n- toaster\n- heart shaped cake form\n- grill pan\n- wooden spoon\n- paper towels\n- cookie cutter\n- tart form\n- pizza board\n- glass casserole dish\n- madeleine form\n- metal skewers\n- microplane\n- stand mixer\n- whisk\n- mixing bowl\n- deep fryer\n- canning jar\n- cheese knife\n- hand mixer\n- butter curler\n- food processor\n- wax paper\n- grater\n- gravy boat\n- muffin liners\n- butter knife\n- waffle iron\n- double boiler\n- can opener\n- mandoline\n- kitchen twine\n- juicer\n- wok\n- measuring cup\n- ramekin\n- airfryer\n- instant pot\n- spoon\n- dough scraper\n- microwave\n- roasting pan\n- pressure cooker\n- dehydrator\n- baking paper\n- silicone muffin liners\n- loaf pan\n- cake topper\n- dutch oven\n- baking spatula\n- popsicle molds\n- teapot\n- cocktail sticks\n- cleaver\n- rice cooker\n- bread machine\n- fork\n- ice cream scoop\n- slow cooker\n- knife\n- kitchen scale\n- griddle\n- frosting cake topper\n- cutting board\n- cake pop mold\n- oven\n- colander\n- kitchen timer\n- panini press\n- pasta machine\n- popcorn maker\n- lollipop sticks\n- steamer basket\n- chopsticks\n- chefs knife\n- blender\n- pizza stone\n- skewers\n- sauce pan\n- peeler\n- stove\n- pot holder\n- springform pan\n- apple corer\n- potato masher\n- serrated knife\n\n## Meal Types\nEvery API endpoint asking for a `type` parameter can be fed with any of these meal types.\n\n- main course\n- side dish\n- dessert\n- appetizer\n- salad\n- bread\n- breakfast\n- soup\n- beverage\n- sauce\n- marinade\n- fingerfood\n- snack\n- drink\n\n## Recipe Sorting Options\nThis is a list of possible values for the `sort` parameter of the complex recipe search endpoint.\n\n- (empty)\n- meta-score\n- popularity\n- healthiness\n- price\n- time\n- random\n- max-used-ingredients\n- min-missing-ingredients\n- alcohol\n- caffeine\n- copper\n- energy\n- calories\n- calcium\n- carbohydrates\n- carbs\n- choline\n- cholesterol\n- total-fat\n- fluoride\n- trans-fat\n- saturated-fat\n- mono-unsaturated-fat\n- poly-unsaturated-fat\n- fiber\n- folate\n- folic-acid\n- iodine\n- iron\n- magnesium\n- manganese\n- vitamin-b3\n- niacin\n- vitamin-b5\n- pantothenic-acid\n- phosphorus\n- potassium\n- protein\n- vitamin-b2\n- riboflavin\n- selenium\n- sodium\n- vitamin-b1\n- thiamin\n- vitamin-a\n- vitamin-b6\n- vitamin-b12\n- vitamin-c\n- vitamin-d\n- vitamin-e\n- vitamin-k\n- sugar\n- zinc\n\n#### Health Score (\u0027healthiness\u0027)\nScore % (between 0 and 100) \u003d Average coverage of \&quot;good\&quot; nutrients - Average coverage of \&quot;bad\&quot; nutrients.\n\nThat is, the more of your daily requirements of vitamins and minerals are covered and lower amounts of things you should limit (sugar, salt etc.) the higher the score.\n\n## Cuisines\nEvery API endpoint asking for a `cuisine` parameter can be fed with any of these cuisines.\n\n- African\n- Asian\n- American\n- British\n- Cajun\n- Caribbean\n- Chinese\n- Eastern European\n- European\n- French\n- German\n- Greek\n- Indian\n- Irish\n- Italian\n- Japanese\n- Jewish\n- Korean\n- Latin American\n- Mediterranean\n- Mexican\n- Middle Eastern\n- Nordic\n- Southern\n- Spanish\n- Thai\n- Vietnamese\n\n## Image Classification Categories\nThe image classification and image analysis API endpoints can detect the following classes.\n\n- agnolotti\n- ahi\\_tuna\n- antipasto\\_salad\n- apple\\_cake\n- babka\n- baked\\_apple\n- baked\\_beans\n- baked\\_potato\n- baked\\_salmon\n- baklava\n- beef\\_ribs\n- beef\\_stew\n- beef\\_stroganoff\n- beer\n- bibimbap\n- biscotti\n- brisket\n- brownies\n- burger\n- burrito\n- calzone\n- caprese\\_salad\n- cheesecake\n- chicken\\_nuggets\n- chicken\\_wings\n- chili\n- chow\\_mein\n- chowder\n- churros\n- coffee\n- coleslaw\n- cookies\n- creme\\_brulee\n- crepes\n- cupcakes\n- donut\n- falafel\n- fish\\_and\\_chips\n- french\\_toast\n- fruit\\_salad\n- gyros\n- ice\\_cream\n- lasagne\n- lobster\\_roll\n- macarons\n- nachos\n- omelet\n- paella\n- pancakes\n- sushi\n\nInterested in learning more? Read the entire [article](https://spoonacular.com/food-api/docs#Image-Classification).\n\n# Building a Simple Recipe Search App with the Spoonacular API ️\n**Welcome, new developers!** If you\u0027ve just signed up for Spoonacular\u0027s Food API and obtained your API key, this tutorial will guide you through creating a **simple recipe search application** using plain HTML, CSS, and JavaScript. No frameworks or SDKs required -- we\u0027ll use the Spoonacular API directly via `fetch`.\n\nBy the end, you\u0027ll have a small web app where users can type a query (like \&quot;pasta\&quot; or \&quot;chicken\&quot;) and see a list of recipe results with images, titles, and macro nutrition info (calories, proteins, carbs, fats).\n\nHere\u0027s a quick preview of what we\u0027ll build:\n\n_Spoonacular\u0027s Recipe API can return delicious recipe images and nutritional info. For example, a search for \&quot;fajitas\&quot; might return results like this Skirt Steak Fajitas dish. Our app will fetch such recipes and display their images, titles, and key nutrition facts._\n\nThis tutorial assumes you already have an API key from spoonacular.com and are ready to use it (if not, get a [free key now](https://spoonacular.com/food-api/console)). We\u0027ll walk through the process **step by step** in a beginner-friendly way. Here\u0027s what we\u0027ll do:\n\n1. **Set up a basic HTML page** with a search bar and a section to display results.\n2. **Understand the Spoonacular API endpoint** for searching recipes by keyword.\n3. **Write JavaScript code** to call the API (using your API key) when the user searches.\n4. **Display the results** on the page, including each recipe\u0027s image, title, and macro-nutrient info (calories, carbs, protein, fat).\n5. **Provide the complete HTML code** so you can copy, paste, add your API key, and run it on your own machine.\n\nLet\u0027s get started!\n\n## 1Creating the Basic HTML Structure\nFirst, create a new HTML file (for example, `index.html`). We\u0027ll set up a simple structure with a header, an input for the search query, a button to trigger the search, and a container where we\u0027ll display our recipe results.\n\nYour HTML file might start like this:\n\n```\n \n \n \n \n Spoonacular Recipe Search App \n \n \n \n Spoonacular Recipe Search \n \n \n Search \n \n\n \n \n\n \n \n // JavaScript code will go here\n \n \n \n```\n\n**Explanation:** We include a text ` ` for the user\u0027s search term and a ` ` to start the search. The `id` attributes ( `searchInput`, `searchButton`, `results`) will help us access these elements in JavaScript. The ` ` is where we\u0027ll inject the recipe results (like images, titles, etc.) dynamically. We\u0027ve also added a ` ` tag at the bottom of the body where our JavaScript code will live (placing the script at the end ensures the HTML elements are loaded before the script runs).\n\n## 2Understanding the Spoonacular Recipe Search API\nNext, let\u0027s understand which Spoonacular API endpoint we need. Spoonacular provides a **\&quot;Search Recipes\&quot;** endpoint (also known as **Complex Search**) that lets us search through thousands of recipes by keyword. We\u0027ll use this endpoint to find recipes by a query term (like `\&quot;pizza\&quot;` or `\&quot;tofu stir fry\&quot;`). The base URL is:\n\n`https://api.spoonacular.com/recipes/complexSearch`\n\nWhen calling this endpoint, we can add query parameters to refine our search. At minimum, we should provide:\n\n- `query` \\-\\- the search term (e.g., `query\u003dpasta`). This tells the API what recipes to search for by name or ingredients.\n- `apiKey` \\-\\- your unique API key (e.g., `apiKey\u003dYOUR_API_KEY`). This authenticates your requests. Without this, the API will reject the call.\n- Optionally, `number` \\-\\- how many results to return. If not specified, the API might return a default number (typically 10). We can use this to limit results, say `number\u003d5` for 5 recipes.\n\nTo fulfill our app\u0027s requirements, we also want **nutritional information** for each recipe result (specifically the macronutrients: calories, carbohydrates, protein, and fat). Spoonacular\u0027s API has a handy parameter for this: `addRecipeNutrition\u003dtrue`. According to the documentation, setting this to true will include detailed nutritional info for each recipe in the search results. That means we don\u0027t have to call a separate nutrition endpoint for each recipe -- we get the data in one go.\n\n**Macronutrients?** These are the key nutrition figures like **calories, protein, fat, and carbohydrates**. The Spoonacular API will provide these values per recipe when we request nutrition data. We\u0027ll extract those to display to the user.\n\n**Example API Request:** If a user searches for \&quot;burger\&quot;, our front-end will construct a URL like:\n\n`https://api.spoonacular.com/recipes/complexSearch?query\u003dburger\u0026number\u003d5\u0026addRecipeNutrition\u003dtrue\u0026apiKey\u003dYOUR_API_KEY`\n\nThis asks the API for 5 burger recipes, including nutrition info, using your API key for authorization. The response will be in JSON format (JavaScript Object Notation), containing an array of recipe results. Each recipe in the results will have fields such as `id`, `title`, `image` (a URL to the recipe\u0027s image), and a `nutrition` object with a list of nutrients. For example, a single result might look like this (simplified):\n\n```\n{\n \&quot;id\&quot;: 716429,\n \&quot;title\&quot;: \&quot;Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/716429-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;nutrition\&quot;: {\n \&quot;nutrients\&quot;: [\n { \&quot;name\&quot;: \&quot;Calories\&quot;, \&quot;amount\&quot;: 584.3, \&quot;unit\&quot;: \&quot;kcal\&quot; },\n { \&quot;name\&quot;: \&quot;Fat\&quot;, \&quot;amount\&quot;: 20.1, \&quot;unit\&quot;: \&quot;g\&quot; },\n { \&quot;name\&quot;: \&quot;Carbohydrates\&quot;, \&quot;amount\&quot;: 72.0, \&quot;unit\&quot;: \&quot;g\&quot; },\n { \&quot;name\&quot;: \&quot;Protein\&quot;, \&quot;amount\&quot;: 19.5, \&quot;unit\&quot;: \&quot;g\&quot; },\n ... // other nutrients\n ]\n }\n}\n```\n\nAs you can see, we get everything we need: the recipe title, an image URL, and the nutrition info including calories, fat, carbs, and protein. (The API actually returns many more details and nutrients, but we\u0027ll focus only on the macros for this tutorial.)\n\n## 3Writing the JavaScript Fetch Function\nWith our HTML in place and a clear idea of the API call, it\u0027s time to code the logic. We\u0027ll use the Fetch API in JavaScript to send a GET request to Spoonacular and handle the response.\n\nInside the ` ` tag of our HTML, let\u0027s do the following:\n\n- **Grab references to the HTML elements** we need to work with (the search input, the button, and the results container).\n- **Attach an event listener** to the search button (so that when it\u0027s clicked, we trigger a function to perform the search).\n- **Define the search function** to build the API URL, make the fetch call, and process the results.\n- **Display the results** or a message if none are found.\n\nWe\u0027ll start by selecting the elements and adding the event listener:\n\n```\nconst searchInput \u003d document.getElementById(\u0027searchInput\u0027);\nconst searchButton \u003d document.getElementById(\u0027searchButton\u0027);\nconst resultsDiv \u003d document.getElementById(\u0027results\u0027);\n\n// When the button is clicked, run the search function\nsearchButton.addEventListener(\u0027click\u0027, searchRecipes);\n\n// when the user presses \&quot;Enter\&quot; in the input, also run the search function\nsearchInput.addEventListener(\u0027keypress\u0027, function (e) {\n if (e.key \u003d\u003d\u003d \u0027Enter\u0027) {\n searchRecipes();\n }\n});\n```\n\nHere we used `document.getElementById` to get our elements by their IDs. The `addEventListener(\u0027click\u0027, searchRecipes)` will call a function named `searchRecipes` whenever the user clicks the \&quot;Search\&quot; button. We\u0027ll define `searchRecipes` next.\n\nNow, let\u0027s write the `searchRecipes` function. This function will:\n\n1. Read the query from the input field.\n2. Check that it\u0027s not empty.\n3. Construct the request URL with the query and your API key.\n4. Use `fetch()` to call the Spoonacular API.\n5. Convert the response to JSON.\n6. Handle the JSON data -- create HTML elements for each recipe and insert them into the results container.\n7. Handle any errors that occur during the fetch.\n\n```\nfunction searchRecipes() {\n const query \u003d searchInput.value.trim(); // get the search term from input\n if (!query) { // if the query is empty, do nothing\n alert(\u0027Please enter a search term.\u0027);\n return;\n }\n\n // Construct the API URL with query and API key\n const apiKey \u003d \u0027YOUR_API_KEY\u0027; // \u003c-- replace with your actual Spoonacular API key\n const apiUrl \u003d `https://api.spoonacular.com/recipes/complexSearch?query\u003d${encodeURIComponent(query)}\u0026number\u003d5\u0026addRecipeNutrition\u003dtrue\u0026apiKey\u003d${apiKey}`;\n\n // Clear any previous results\n resultsDiv.innerHTML \u003d \u0027 Searching for recipes... \u0027;\n\n // Call the Spoonacular API\n fetch(apiUrl)\n .then(response \u003d\u003e response.json())\n .then(data \u003d\u003e {\n // Clear the placeholder text\n resultsDiv.innerHTML \u003d \u0027\u0027;\n if (!data.results || data.results.length \u003d\u003d\u003d 0) {\n resultsDiv.innerHTML \u003d \u0027 No recipes found. Try a different search term! \u0027;\n return;\n }\n\n // Loop through each recipe result\n data.results.forEach(recipe \u003d\u003e {\n // Extract data we need\n const title \u003d recipe.title;\n const image \u003d recipe.image;\n\n // The nutrition info is an array of nutrient objects. Find the ones for Calories, Protein, Fat, Carbs:\n let calories \u003d \u0027\u0027, protein \u003d \u0027\u0027, fat \u003d \u0027\u0027, carbs \u003d \u0027\u0027;\n if (recipe.nutrition \u0026\u0026 recipe.nutrition.nutrients) {\n const nutrients \u003d recipe.nutrition.nutrients;\n const calInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Calories\u0027);\n const proteinInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Protein\u0027);\n const fatInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Fat\u0027);\n const carbsInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Carbohydrates\u0027);\n if (calInfo) calories \u003d Math.round(calInfo.amount) + \u0027 \u0027 + calInfo.unit;\n if (proteinInfo) protein \u003d Math.round(proteinInfo.amount) + \u0027 \u0027 + proteinInfo.unit;\n if (fatInfo) fat \u003d Math.round(fatInfo.amount) + \u0027 \u0027 + fatInfo.unit;\n if (carbsInfo) carbs \u003d Math.round(carbsInfo.amount) + \u0027 \u0027 + carbsInfo.unit;\n }\n\n // Create a container div for this recipe\n const recipeDiv \u003d document.createElement(\u0027div\u0027);\n recipeDiv.className \u003d \u0027recipe\u0027; // for potential styling\n\n\n## 3Writing the JavaScript Fetch Function\n\n // Build the inner HTML for the recipe (image, title, and nutrition info)\n recipeDiv.innerHTML \u003d `\n ${title} \n \n Calories: ${calories} \n Carbs: ${carbs} \n Protein: ${protein} \n Fat: ${fat} \n `;\n\n // Append this recipe\u0027s HTML to the results container\n resultsDiv.appendChild(recipeDiv);\n });\n })\n .catch(error \u003d\u003e {\n console.error(\u0027Error fetching recipes:\u0027, error);\n resultsDiv.innerHTML \u003d \u0027 An error occurred while fetching recipes. Please try again. \u0027;\n });\n}\n```\n\n**Important:** Make sure to replace `\u0027YOUR_API_KEY\u0027` with your actual Spoonacular API key for the app to work properly.\n\n## 4Testing the App (What to Expect)\nTo test, enter a food or recipe keyword in the search box and click **Search**. For example, try searching `\&quot;pasta\&quot;`. The app will make a request to Spoonacular and soon display a list of recipes related to pasta. You should see something like a recipe for _\&quot;Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\&quot;_ with its image and nutrition info, among other results. If you search `\&quot;chocolate chip cookies\&quot;`, you might get recipes for various cookie variations, each with an image and the calories/carbs/protein/fat listed.\n\nIf no recipes are found for a given query, the app will simply show \&quot;No recipes found. Try a different search term.\&quot; This might happen with very obscure searches or typos.\n\nMake sure you didn\u0027t forget to replace `YOUR_API_KEY` with your actual key. If you use an invalid key or exceed your API quota, the API might respond with an error (and our `.catch` will handle it by showing an error message). If that happens, double-check your key and also check the browser console for any error details. Spoonacular\u0027s free tier has a certain number of calls per day; ensure you\u0027re within that limit.\n\n## 5Full HTML Code Example\nFor convenience, here is the **entire HTML code** combining all the pieces we discussed. You can copy this, replace the placeholder with your API key, and open it in your browser to try it out:\n\n```\n \n \n \n \n Recipe Search App \n \n * {\n margin: 0;\n padding: 0;\n box-sizing: border-box;\n }\n\n body {\n font-family: \u0027Segoe UI\u0027, Tahoma, Geneva, Verdana, sans-serif;\n background: linear-gradient(135deg, #1fc66b 0%, #10552f 100%);\n min-height: 100vh;\n padding: 2rem;\n color: #333;\n }\n\n .container {\n max-width: 1200px;\n margin: 0 auto;\n background: rgba(255, 255, 255, 0.95);\n border-radius: 20px;\n padding: 2rem;\n box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n backdrop-filter: blur(10px);\n }\n\n h1 {\n text-align: center;\n color: #2c3e50;\n font-size: 2.5rem;\n margin-bottom: 2rem;\n text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n }\n\n .search-container {\n display: flex;\n gap: 1rem;\n margin-bottom: 2rem;\n max-width: 600px;\n margin-left: auto;\n margin-right: auto;\n }\n\n #searchInput {\n flex: 1;\n padding: 1rem 1.5rem;\n font-size: 1.1rem;\n border: 2px solid #e1e8ed;\n border-radius: 50px;\n outline: none;\n transition: all 0.3s ease;\n background: white;\n }\n\n #searchInput:focus {\n border-color: #00843c;\n box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n transform: translateY(-2px);\n }\n\n #searchButton {\n padding: 1rem 2rem;\n font-size: 1.1rem;\n font-weight: 600;\n background: linear-gradient(135deg, #1fc66b 0%, #10552f 100%);\n color: white;\n border: none;\n border-radius: 50px;\n cursor: pointer;\n transition: all 0.3s ease;\n box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n }\n\n #searchButton:hover {\n transform: translateY(-2px);\n box-shadow: 0 6px 20px rgb(0, 132, 60);\n }\n\n #searchButton:active {\n transform: translateY(0);\n }\n\n #results {\n display: grid;\n grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n gap: 2rem;\n margin-top: 2rem;\n }\n\n .recipe {\n background: white;\n border-radius: 15px;\n padding: 1.5rem;\n box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n transition: all 0.3s ease;\n border: 1px solid rgba(0, 0, 0, 0.05);\n overflow: hidden;\n }\n\n .recipe:hover {\n transform: translateY(-5px);\n box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);\n }\n\n .recipe h3 {\n color: #2c3e50;\n font-size: 1.4rem;\n margin-bottom: 1rem;\n line-height: 1.3;\n font-weight: 600;\n }\n\n .recipe img {\n width: 100%;\n height: 200px;\n object-fit: cover;\n border-radius: 10px;\n margin-bottom: 1rem;\n transition: transform 0.3s ease;\n }\n\n .recipe:hover img {\n transform: scale(1.05);\n }\n\n .nutrition-info {\n display: grid;\n grid-template-columns: 1fr 1fr;\n gap: 0.5rem;\n margin-top: 1rem;\n }\n\n .recipe p {\n margin: 0.3rem 0;\n font-size: 0.95rem;\n color: #555;\n display: flex;\n justify-content: space-between;\n align-items: center;\n padding: 0.5rem;\n background: #f8f9fa;\n border-radius: 8px;\n }\n\n .recipe p strong {\n color: #2c3e50;\n font-weight: 600;\n }\n\n .error {\n color: #e74c3c;\n text-align: center;\n font-size: 1.1rem;\n padding: 2rem;\n background: rgba(231, 76, 60, 0.1);\n border-radius: 10px;\n border: 1px solid rgba(231, 76, 60, 0.2);\n }\n\n .loading {\n text-align: center;\n font-size: 1.1rem;\n color: #667eea;\n padding: 2rem;\n }\n\n .no-results {\n text-align: center;\n font-size: 1.1rem;\n color: #7f8c8d;\n padding: 2rem;\n background: rgba(127, 140, 141, 0.1);\n border-radius: 10px;\n border: 1px solid rgba(127, 140, 141, 0.2);\n }\n\n /* Responsive design */\n @media (max-width: 768px) {\n body {\n padding: 1rem;\n }\n\n .container {\n padding: 1.5rem;\n border-radius: 15px;\n }\n\n h1 {\n font-size: 2rem;\n margin-bottom: 1.5rem;\n }\n\n .search-container {\n flex-direction: column;\n gap: 1rem;\n }\n\n #searchInput, #searchButton {\n padding: 0.8rem 1.2rem;\n font-size: 1rem;\n }\n\n #results {\n grid-template-columns: 1fr;\n gap: 1.5rem;\n }\n\n .nutrition-info {\n grid-template-columns: 1fr;\n }\n }\n\n @media (max-width: 480px) {\n .container {\n padding: 1rem;\n }\n\n h1 {\n font-size: 1.8rem;\n }\n\n .recipe {\n padding: 1rem;\n }\n }\n \n \n \n \n Recipe Search \n \n \n Search \n \n\n \n \n\n\n## 5Full HTML Code Example\n\n \n const searchInput \u003d document.getElementById(\u0027searchInput\u0027);\n const searchButton \u003d document.getElementById(\u0027searchButton\u0027);\n const resultsDiv \u003d document.getElementById(\u0027results\u0027);\n\n searchButton.addEventListener(\u0027click\u0027, searchRecipes);\n\n searchInput.addEventListener(\u0027keypress\u0027, function (e) {\n if (e.key \u003d\u003d\u003d \u0027Enter\u0027) {\n searchRecipes();\n }\n });\n\n function searchRecipes() {\n const query \u003d searchInput.value.trim();\n if (!query) {\n alert(\u0027Please enter a search term.\u0027);\n return;\n }\n const apiKey \u003d \u0027YOUR_API_KEY\u0027; // \u003c-- Replace with your spoonacular API key\n const apiUrl \u003d `https://api.spoonacular.com/recipes/complexSearch?query\u003d${encodeURIComponent(query)}\u0026number\u003d5\u0026addRecipeNutrition\u003dtrue\u0026apiKey\u003d${apiKey}`;\n\n resultsDiv.innerHTML \u003d \u0027 Searching for recipes... \u0027;\n\n fetch(apiUrl)\n .then(response \u003d\u003e response.json())\n .then(data \u003d\u003e {\n resultsDiv.innerHTML \u003d \u0027\u0027;\n if (!data.results || data.results.length \u003d\u003d\u003d 0) {\n resultsDiv.innerHTML \u003d \u0027 No recipes found. Try a different search term! \u0027;\n return;\n }\n data.results.forEach(recipe \u003d\u003e {\n const title \u003d recipe.title;\n const image \u003d recipe.image;\n let calories \u003d \u0027\u0027, protein \u003d \u0027\u0027, fat \u003d \u0027\u0027, carbs \u003d \u0027\u0027;\n if (recipe.nutrition \u0026\u0026 recipe.nutrition.nutrients) {\n const nutrients \u003d recipe.nutrition.nutrients;\n const calInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Calories\u0027);\n const proteinInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Protein\u0027);\n const fatInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Fat\u0027);\n const carbsInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Carbohydrates\u0027);\n if (calInfo) calories \u003d Math.round(calInfo.amount) + \u0027 \u0027 + calInfo.unit;\n if (proteinInfo) protein \u003d Math.round(proteinInfo.amount) + \u0027 \u0027 + proteinInfo.unit;\n if (fatInfo) fat \u003d Math.round(fatInfo.amount) + \u0027 \u0027 + fatInfo.unit;\n if (carbsInfo) carbs \u003d Math.round(carbsInfo.amount) + \u0027 \u0027 + carbsInfo.unit;\n }\n const recipeDiv \u003d document.createElement(\u0027div\u0027);\n recipeDiv.className \u003d \u0027recipe\u0027;\n recipeDiv.innerHTML \u003d `\n ${title} \n \n Calories: ${calories} \n Carbs: ${carbs} \n Protein: ${protein} \n Fat: ${fat} \n `;\n resultsDiv.appendChild(recipeDiv);\n });\n })\n .catch(error \u003d\u003e {\n console.error(\u0027Error fetching recipes:\u0027, error);\n resultsDiv.innerHTML \u003d \u0027 Error fetching recipes. Please try again later. \u0027;\n });\n }\n \n \n \n\n```\n\nYou can download the full HTML demo also from the [github repo](https://github.com/ddsky/spoonacular-api-tutorials/blob/1e88809bae2c4c510fe563f0c867062463a4b0e6/spoonacular-recipe-search/spoonacular-recipe-search-full-code.html).\n\n** Now just replace** `\&quot;YOUR_API_KEY\&quot;` **with your actual key**, save the file, and open it in your browser. You should be able to search for recipes and see results appear with images and nutrition info.\n\n## Conclusion\n**Congratulations! ** You\u0027ve built a fully functional recipe search app using the Spoonacular API. In this process, you learned how to make API calls with fetch, handle JSON responses, and update the DOM with results. We kept things simple with vanilla JavaScript to help you understand the fundamentals.\n\nFrom here, you can enhance the app in many ways -- for example, add loading spinners, improve the layout with CSS, allow pressing \&quot;Enter\&quot; to trigger search, or even add more details like recipe summary or ingredients.\n\nUsing Spoonacular\u0027s rich API, you have access to a treasure trove of food data. We only scratched the surface by using the basic search with macro nutrients. Feel free to explore other endpoints (the API can get detailed recipe instructions, similar recipes, ingredient lists, and more as seen in their docs).\n\n**Happy coding and happy cooking! ‍‍**\n\n## Image Classification\nThis article compares **7 online image recognition services** in the context of food recognition. In particular, my goal was to find out which service is best suited to recognize and classify the dish you ordered in a restaurant based on a picture you took.\n\nThere are plenty of services out there, but I decided to compare the following as they are leaders in the field and have stable APIs:\n\n[Amazon Rekognition](https://aws.amazon.com/rekognition/)\n\nImage analysis by Amazon. They do not seem to have a pre-trained food model, so I used their generic tagger. Each classified image comes back with a number of tags and confidences.\n\n[Clarifai](https://www.clarifai.com/predict)\n\nAn image analysis service that also features a special [food model](https://www.clarifai.com/models/food-image-recognition-model-bd367be194cf45149e75f01d59f77ba7), which I used for testing.\n\n[Google Cloud Vision](https://cloud.google.com/vision)\n\nAn image analysis service by Google that also does not come with a pre-trained food model.\n\n[Imagga](https://imagga.com/solutions/categorization-api)\n\nAnother image analysis service without a pre-trained food model. I used their generic tagger.\n\n[Microsoft Computer Vision](https://azure.microsoft.com/en-us/services/cognitive-services/computer-vision/)\n\nAn image analysis service or (as they call it) \&quot;cognitive service\&quot; by Microsoft. No food model available.\n\n[Watson Visual Recognition](https://www.ibm.com/cloud/watson-visual-recognition)\n\nIBM Watson for image analysis by IBM. IBM also created a pre-trained [food-specific model](https://www.ibm.com/blogs/cloud-archive/2017/05/watson-learns-see-food-introducing-watson-visual-recognition-food-model/) that I was able to use in their API.\n\n[spoonacular](https://spoonacular.com/food-api)\n\nThe spoonacular food API offers a food-specific model specifically trained on our test dataset.\n\nOkay, now that we know our contenders, let\u0027s take a look at what dataset we\u0027re working with.\n\n### The 50-Class Food Dataset\nOur goal is to build/test a food dish recognizer. That is, we don\u0027t want to recognize single ingredients, such as an apple, milk, or a cup of mushrooms, but rather complex dishes that you would order in a restaurant.\n\nTo achieve this, we used the spoonacular food ontology to create a set of 518 dishes and gathered 2,781,306 images in total (over 417 GB in file size). The spoonacular food ontology is rather fine-grained, so many of the dish categories were a bit too specific (e.g. \&quot;lemon cookies\&quot;), so I reduced it down to 50 common classes with about 300 manually checked images per class.\n\nThe final dataset is **50 classes with a total of 15,742 images** (4.4 GB in size).\n\nThe images are a mixture of high quality, professional photographs (showing the perfect execution of the dish, usually NOT taken in a real restaurant setting) and \&quot;real world\&quot; images taken by people that actually ordered and received that dish (like pictures taken from the spoonacular food journal). The differences between the two types are often extreme, so I found it to be valuable to have both types in the dataset.\n\nHave a look at the following example classes, \&quot;cookies\&quot;, \&quot;burger\&quot;, and \&quot;pancakes\&quot;:\n\nNow, here is the full list of the 50 food categories with images (here in [plain text](https://spoonacular.com/food-api/docs#Image-Classification-Categories)):\n\n### Comparison of Image Classification Services\nNow that we know the dataset we\u0027re working with we can test the services with pictures from the dataset. These tests can only give us a rough idea of how well the service works because, as stated earlier, not all of them have a food-specific model. More importantly, they are trained on a completely different taxonomy, which means they might not even know what \&quot;bibimbap\&quot; is or what \&quot;churros\&quot; look like.\n\nThe goal of this article, however, is to find out which services are well suited for real-world dish recognition without training your own models (as dataset preparation is the really hard part). In this context, it is fair to compare them against an unknown set of images and see what they think the images are.\n\nI classified the same 50 images per class using each service for 2,500 classifications in total. The super long image below shows the top 5 tags/categories that each service assigned the images for each class. The percentage after the classified category is the percentage of images that received that particular tag. For example, Amazon Rekognition classified 98% of the \&quot;agnolotti\&quot; images as \&quot;Food\&quot;. Good start.\n\nAdditionally, I **bolded** the category names which we should consider correct for the given images. Since the other taxonomies are not exactly the same as spoonacular\u0027s, we should still count \&quot;doughnut\&quot; as correct even if the spoonacular class is \&quot;donut\&quot;.\n\nThe spoonacular column is just there for referenceâ€”since spoonacular\u0027s classifier was trained using the dataset, the category names always match and the percentage of matches is of course often higher.\n\nThe last row in the table shows how many classes in the top 5 can be considered correct. Aside from the expected 50/50 for spoonacular, we can see that the two services with special food-related classifiers, Clarifai and Watson, outperformed the other services dramatically.\n\nIn particular, the Watson food classifier seems to have been trained on a more fine-grained taxonomy. This is not surprising, since they say they have 2,000 tags, ranging from specific dishes to broader categories like \&quot;sweet\&quot; and \&quot;delicacy\&quot; as well. They even differentiate between \&quot;barbecued wing\&quot; and \&quot;buffalo wing\&quot;!\n\nTo give you an idea which tags/categories each service assigned to the provided images, here are the top 50 tags for each service (for all 2,500 classified images). You can also [download the raw data](https://spoonacular.com/application/frontend/downloads/visual-recognition-comparison-charts.xlsx) if you\u0027re interested in seeing it all.\n\n##### Top 50 Classes for Amazon Rekognition\nAmazon answered with **1,029 different tags**, which is to be expected for a general classifier. The funniest tags were \&quot;T-Rex\&quot;, \&quot;dynamite\&quot;, and \&quot;toilet\&quot; :)\n\n##### Top 50 Classes for Clarifai\nClarifai answered with a total of **740 different food-specific tags** (remember, they have a food-specific model). Looking at the tags with a low frequency we can see that they don\u0027t only use dishes in their model, but also have plain ingredients such as \&quot;starfruit\&quot;, \&quot;watercress\&quot;, and even spices like \&quot;cumin\&quot; in their model.\n\n##### Top 50 Classes for Google Cloud Vision\nGoogle only had a generic model, which shows in the poor results. They answered with a total of **1,831 distinct tags**, most of them food-related and some controversial ones like \&quot;shark fin soup\&quot; and \&quot;foie gras\&quot; as well.\n\n##### Top 50 Classes for Imagga\nImagga answered with a total of **832 distinct tags** from their generic model. While most of them were food related, I also got back \&quot;concrete\&quot;, \&quot;snake\&quot;, and \&quot;winter\&quot; at times.\n\n##### Top 50 Classes for Microsoft Cloud Vision\nMicrosoft Cognitive Services\u0027 generic model came back with at total of **1,070 distinct tags** \\- most of them food related.\n\n##### Top 50 Classes for IBM Watson\nWatson returned **873 distinct food-related tags** from the food model.\n\n##### spoonacular Confusion Matrix\nFor spoonacular, we were able to create an actual confusion matrix. The y-axis shows the tested classes and the x-axis the model\u0027s prediction. The diagonal (top left to bottom right) shows correct classifications.\n\nThe total accuracy of spoonacular\u0027s model is 90%. Most problematic seems to be \&quot;baked apple\&quot; with only 71% accuracy, while \&quot;beer\&quot; and \&quot;burger\&quot; are recognized with 100% accuracy - cheers to that!\n\n### Resources and Tools Used\nTo run all the tests I used the [Palladian Java Toolkit](https://palladian.ai/). Its wrappers for the cloud services Clarifai, Imagga, Amazon Rekognition, IBM Watson, Google Cloud Vision, and Microsoft Cloud Vision made evaluation much easiser.\n\nThanks to BjÃ¶rn Hempel for writing his bachelor thesis on this topic, which you can [read here](https://palladian.ai/publications/Bj%C3%B6rn%20Hempel%20-%20Investigation%20of%20strategies%20for%20image%20classi%EF%AC%81cation.pdf).\n\nIf you\u0027re interested in more detailed information you can download the [raw data (Excel)](https://spoonacular.com/application/frontend/downloads/visual-recognition-comparison-charts.xlsx).\n\n### Summary\nIf you want to reliably tag food-related images, you may want to use a service that comes with a pre-trained food model such as Clarifai, Watson, or spoonacular. If you have the time, knowledge, and resources, you can of course create your own dataset and create a custom model. Most online services allow for custom training models, but dataset creation is definitely not to be underestimated.\n\nAlso, if you want to play around with the spoonacular dish classifier, I built this [demo](https://spoonacular.com/food-api/image-analyzer-demo).\n\n## Diet Definitions\nEvery API endpoint asking for an `diet` parameter can be fed with any of these diets.\n\n#### Gluten Free\nEliminating gluten means avoiding wheat, barley, rye, and other gluten-containing grains and foods made from them (or that may have been cross contaminated).\n\n#### Ketogenic\nThe keto diet is based more on the ratio of fat, protein, and carbs in the diet rather than specific ingredients. Generally speaking, high fat, protein-rich foods are acceptable and high carbohydrate foods are not. The formula we use is 55-80% fat content, 15-35% protein content, and under 10% of carbohydrates.\n\n#### Vegetarian\nNo ingredients may contain meat or meat by-products, such as bones or gelatin.\n\n#### Lacto-Vegetarian\nAll ingredients must be vegetarian and none of the ingredients can be or contain egg.\n\n#### Ovo-Vegetarian\nAll ingredients must be vegetarian and none of the ingredients can be or contain dairy.\n\n#### Vegan\nNo ingredients may contain meat or meat by-products, such as bones or gelatin, nor may they contain eggs, dairy, or honey.\n\n#### Pescetarian\nEverything is allowed except meat and meat by-products - some pescetarians eat eggs and dairy, some do not.\n\n#### Paleo\nAllowed ingredients include meat (especially grass fed), fish, eggs, vegetables, some oils (e.g. coconut and olive oil), and in smaller quantities, fruit, nuts, and sweet potatoes. We also allow honey and maple syrup (popular in Paleo desserts, but strict Paleo followers may disagree). Ingredients not allowed include legumes (e.g. beans and lentils), grains, dairy, refined sugar, and processed foods.\n\n#### Primal\nVery similar to Paleo, except dairy is allowed - think raw and full fat milk, butter, ghee, etc.\n\n#### Low FODMAP\nFODMAP stands for \&quot;fermentable oligo-, di-, mono-saccharides and polyols\&quot;. Our ontology knows which foods are considered high in these types of carbohydrates (e.g. legumes, wheat, and dairy products)\n\n#### Whole30\nAllowed ingredients include meat, fish/seafood, eggs, vegetables, fresh fruit, coconut oil, olive oil, small amounts of dried fruit and nuts/seeds. Ingredients not allowed include added sweeteners (natural and artificial, except small amounts of fruit juice), dairy (except clarified butter or ghee), alcohol, grains, legumes (except green beans, sugar snap peas, and snow peas), and food additives, such as carrageenan, MSG, and sulfites.\n\nSee also [the comparison of popular diets](https://spoonacular.com/academy/which-diet-is-best-for-me)\n\n## How to Write a Chatbot\nHere is an easy way how to make a chatbot like the [spoonacular chatbot](https://spoonacular.com/chatbot) with JavaScript in 10 minutes.\n\n- Check out this [JavaScript chatbot repository](https://github.com/ddsky/chatbot) on GitHub.\n- Follow the instructions in the readme file.\n- Optionally, if you want spoonacular support in your bot: Sign up for a [RapidAPI key](https://rapidapi.com/spoonacular/api/recipe-food-nutrition).\n\n## Rate Limiting \u0026 Quotas\nEach API plan comes with a daily quota of points. Every API call you make costs a certain amount of points. Usually, every request is\n\n1 point\n\nand\n\n0.01 points\n\nper result returned, but there are many exceptions. At the bottom of each endpoint description you will find information about the number of points required for that endpoint.\n\nWhen you are on the **free** plan and your daily quota is used up, the API will respond with the [error code 402](https://www.wikiwand.com/en/List_of_HTTP_status_codes#/402) and no more calls can be made until your quota resets.\n\nYou have complete control over your quota by looking at your console dashboard and checking the API response headers that appear with every answer from the API. These response headers are:\n\n- `X-API-Quota-Request`: The number of points used by the request.\n- `X-API-Quota-Used`: The number of points used in total today. This number resets to zero at midnight UTC ( [click here](https://time.is/UTC) to compare to your local time zone).\n- `X-API-Quota-Left`: The number of points left today (depends on your plan).\n\n#### Rate Limiting\nThere is a limit of how many requests you can make per second. The limits depend on the plan you are on. If you try making more requests you will receive a [429 error](https://www.wikiwand.com/en/List_of_HTTP_status_codes#/429).\n\n- **Free**: 60 requests in 1 minute\n- **Starter**: 120 requests in 1 minute\n- **Cook**: 5 requests per second\n- **Culinarian**: 10 requests per second\n- **Chef**: 20 requests per second\n\n## Authentication\nTo use the API you need an **API key**. You can get a free one by simply [signing up here](https://spoonacular.com/food-api/console).\n\nOnce you have your API key, you have to put it in the request URL for every request you make like so **?apiKey\u003dYOUR-API-KEY**.\n\n**Attention:** Only the first query parameter is prefixed with a **?** (question mark), all subsequent ones will be prefixed with a **\u0026** (ampersand). That is how URLs work and nothing related to our API.\nHere\u0027s a full example with two parameters `apiKey` and `includeNutrition`: [https://api.spoonacular.com/recipes/716429/information?apiKey\u003dYOUR-API-KEY\u0026includeNutrition\u003dtrue](https://api.spoonacular.com/recipes/716429/information?apiKey\u003dYOUR-API-KEY\u0026includeNutrition\u003dtrue).\n\nPlease further note that parameters are case sensitive, it is `apiKey` **not** `apikey`.\n\nAlternatively, you can put the API key in the request header as `x-api-key`.\n\n### Company\n- [About Us](https://spoonacular.com/about)\n- [Press](https://spoonacular.com/press)\n\n### Legal\n- [Terms \u0026 Conditions](https://spoonacular.com/food-api/terms)\n- [Privacy Policy](https://spoonacular.com/food-api/privacy)\n- [DMCA](https://spoonacular.com/dmca)\n- [Imprint](https://spoonacular.com/contact)\n\n### Info\n- [FAQ](https://spoonacular.com/food-api/faq)\n- [Contact Us](https://spoonacular.com/contact)\n- [Discord](https://discord.gg/EkYYnVF)\n- [Twitter](https://twitter.com/spoonacular)\n\n### API Resources\n- [Full Documentation](https://spoonacular.com/food-api/docs)\n- [Uptime Status](http://status.spoonacular.com/)\n- [SDKs](https://spoonacular.com/food-api/sdk)\n- [Updates](https://spoonacular.com/food-api/updates)\n- [News API](https://worldnewsapi.com/)\n- [Video Game API](https://gamebrain.co/api/)\n- [API League](https://apileague.com/)\n- [Joke API](https://humorapi.com/)\n- [Book API](https://bigbookapi.com/)\n- [Art Search API](https://artsearch.io/)\n\n\u003c/web_content\u003e\n\u003c/additional_data\u003e\n\u003cuser_query\u003e\nу меня есть проект. В нем есть чистая архитектура и почти все настроено для работы. Поправь в нем ошибки D:\\Stag\\app\\build\\tmp\\kapt3\\stubs\\debug\\com\\example\\recipebook\\data\\local\\CategoryDao.java:9: error: There is a problem with the query: [SQLITE_ERROR] SQL error or missing database (no such table: category)\n    public abstract kotlinx.coroutines.flow.Flow\u003cjava.util.List\u003ccom.example.recipebook.data.local.CategoryEntity\u003e\u003e getCategories();\n Далее доделай, чтобы оно загружало данные с интернета. Апи с которого будет все браться опписано здесь:@https://spoonacular.com/food-api/docs#Get-Random-Recipes\n\u003c/user_query\u003e)]&quot;,&quot;timestamp&quot;:1758454976814,&quot;messages&quot;:[{&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;\n\u003cadditional_data\u003e\nBelow are some potentially helpful/relevant pieces of information for figuring out to respond\n\u003ccurrent_file\u003e\n```kotlin:app/src/main/java/com/example/recipebook/data/repository/RecipeRepositoryImpl.kt, lines\u003dALL(1-52)\npackage com.example.recipebook.data.repository\n\n\nimport com.example.recipebook.data.local.RecipeDao\nimport com.example.recipebook.data.mapper.RecipeMapper\nimport com.example.recipebook.data.remote.RecipeApi\nimport com.example.recipebook.data.util.Resource\nimport com.example.recipebook.data.util.networkBoundResource\nimport com.example.recipebook.domain.model.Recipe\nimport com.example.recipebook.domain.repository.RecipeRepository\nimport com.example.recipebook.presentation.util.NetworkMonitor\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.map\nimport kotlinx.coroutines.flow.first\nimport javax.inject.Inject\n\nclass RecipeRepositoryImpl @Inject constructor(\n    private val api: RecipeApi,\n    private val dao: RecipeDao,\n    private val networkMonitor: NetworkMonitor\n): RecipeRepository {\n\n    override fun getAllRecipes(): Flow\u003cResource\u003cList\u003cRecipe\u003e\u003e\u003e \u003d\n        networkBoundResource(\n            query \u003d { dao.getAll().map { RecipeMapper.entityListToDomain(it) } },\n            fetch \u003d { api.getAll() },\n            saveFetchResult \u003d { response -\u003e\n                dao.insertAll(response.map { RecipeMapper.dtoToEntity(it) })\n            },\n            shouldFetch \u003d { cached -\u003e cached.isEmpty() },\n            networkMonitor \u003d networkMonitor\n        )\n\n    override fun searchRecipes(query: String): Flow\u003cList\u003cRecipe\u003e\u003e \u003d\n        dao.search(query).map { RecipeMapper.entityListToDomain(it) }\n\n    override fun getRecipeById(id: String): Flow\u003cRecipe\u003e \u003d\n        dao.getById(id).map { entity -\u003e\n            entity?.let { RecipeMapper.entityToDomain(it) }\n                ?: throw NoSuchElementException(\&quot;Recipe with id $id not found\&quot;)\n        }\n\n    override fun getFavoriteRecipes(): Flow\u003cList\u003cRecipe\u003e\u003e \u003d\n        dao.getFavorites().map { RecipeMapper.entityListToDomain(it) }\n\n    override suspend fun toggleFavorite(recipeId: String) {\n        val recipe \u003d dao.getById(recipeId).first()\n        recipe?.let {\n            dao.updateFavorite(recipeId, !it.isFavorite)\n        }\n    }\n}\n```\n\u003c/current_file\u003e\n\n\n\n\u003cweb_content\u003e\nURL: https://spoonacular.com/food-api/docs#Get-Random-Recipes\nContent:\n# Documentation\nHere you have detailed documentation of all available API functions. To get started, you can make the sample request for each endpoint, [download an SDK](https://spoonacular.com/food-api/sdk), or run the examples in [Postman](https://spoonacular.com/food-api/sdk).\n\nx\n\n## Search Recipes by Ingredients\nEver wondered what recipes you can cook with the ingredients you have in your fridge or pantry? This endpoint lets you find recipes that either maximize the usage of ingredients you have at hand (pre shopping) or minimize the ingredients that you don\u0027t currently have (post shopping).\n\nFind recipes that use as many of the given ingredients as possible and require as few additional ingredients as possible. This is a \&quot;what\u0027s in your fridge\&quot; API endpoint.\n\nGET\n\nhttps://api.spoonacular.com/recipes/findByIngredients\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredients`** | string | apples,flour,sugar | A comma-separated list of ingredients that the recipes should contain. |\n| `number` | number | 10 | The maximum number of recipes to return (between 1 and 100). Defaults to 10. |\n| `ranking` | number | 1 | Whether to maximize used ingredients (1) or minimize missing ingredients (2) first. |\n| `ignorePantry` | boolean | true | Whether to ignore typical pantry items, such as water, salt, flour, etc. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/findByIngredients?ingredients\u003dapples,+flour,+sugar\u0026number\u003d2\n\n```\n[\n {\n \&quot;id\&quot;: 73420,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/73420-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;likes\&quot;: 0,\n \&quot;missedIngredientCount\&quot;: 3,\n \&quot;missedIngredients\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;id\&quot;: 18371,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/white-powder.jpg\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;baking powder\&quot;,\n \&quot;original\&quot;: \&quot;1 tsp baking powder\&quot;,\n \&quot;originalName\&quot;: \&quot;baking powder\&quot;,\n \&quot;unit\&quot;: \&quot;tsp\&quot;,\n \&quot;unitLong\&quot;: \&quot;teaspoon\&quot;,\n \&quot;unitShort\&quot;: \&quot;tsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Spices and Seasonings\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;id\&quot;: 2010,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/cinnamon.jpg\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;cinnamon\&quot;,\n \&quot;original\&quot;: \&quot;1 tsp cinnamon\&quot;,\n \&quot;originalName\&quot;: \&quot;cinnamon\&quot;,\n \&quot;unit\&quot;: \&quot;tsp\&quot;,\n \&quot;unitLong\&quot;: \&quot;teaspoon\&quot;,\n \&quot;unitShort\&quot;: \&quot;tsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Milk, Eggs, Other Dairy\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;id\&quot;: 1123,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/egg.png\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;egg\&quot;,\n \&quot;original\&quot;: \&quot;1 egg\&quot;,\n \&quot;originalName\&quot;: \&quot;egg\&quot;,\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;unitLong\&quot;: \&quot;\&quot;,\n \&quot;unitShort\&quot;: \&quot;\&quot;\n }\n ],\n \&quot;title\&quot;: \&quot;Apple Or Peach Strudel\&quot;,\n \&quot;unusedIngredients\&quot;: [],\n \&quot;usedIngredientCount\&quot;: 1,\n \&quot;usedIngredients\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;amount\&quot;: 6.0,\n \&quot;id\&quot;: 9003,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/apple.jpg\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;apples\&quot;,\n \&quot;original\&quot;: \&quot;6 large baking apples\&quot;,\n \&quot;originalName\&quot;: \&quot;baking apples\&quot;,\n \&quot;unit\&quot;: \&quot;large\&quot;,\n \&quot;unitLong\&quot;: \&quot;larges\&quot;,\n \&quot;unitShort\&quot;: \&quot;large\&quot;\n }\n ]\n },\n {\n \&quot;id\&quot;: 632660,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/632660-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;likes\&quot;: 3,\n \&quot;missedIngredientCount\&quot;: 4,\n \&quot;missedIngredients\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Milk, Eggs, Other Dairy\&quot;,\n \&quot;amount\&quot;: 1.5,\n \&quot;extendedName\&quot;: \&quot;unsalted butter\&quot;,\n \&quot;id\&quot;: 1001,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/butter-sliced.jpg\&quot;,\n \&quot;meta\&quot;: [\n \&quot;unsalted\&quot;,\n \&quot;cold\&quot;\n ],\n \&quot;name\&quot;: \&quot;butter\&quot;,\n \&quot;original\&quot;: \&quot;1 1/2 sticks cold unsalted butter cold unsalted butter\u003c\&quot;,\n \&quot;originalName\&quot;: \&quot;cold unsalted butter cold unsalted butter\u003c\&quot;,\n \&quot;unit\&quot;: \&quot;sticks\&quot;,\n \&quot;unitLong\&quot;: \&quot;sticks\&quot;,\n \&quot;unitShort\&quot;: \&quot;sticks\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;amount\&quot;: 4.0,\n \&quot;id\&quot;: 1079003,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/red-delicious-apples.png\&quot;,\n \&quot;meta\&quot;: [\n \&quot;red\&quot;,\n \&quot; such as golden delicious, peeled, cored and cut into 1/4-inch-thick slices \&quot;\n ],\n \&quot;name\&quot;: \&quot;red apples\&quot;,\n \&quot;original\&quot;: \&quot;4 larges red apples, such as Golden Delicious, peeled, cored and cut into 1/4-inch-thick slices\&quot;,\n \&quot;originalName\&quot;: \&quot;s red apples, such as Golden Delicious, peeled, cored and cut into 1/4-inch-thick slices\&quot;,\n \&quot;unit\&quot;: \&quot;large\&quot;,\n \&quot;unitLong\&quot;: \&quot;larges\&quot;,\n \&quot;unitShort\&quot;: \&quot;large\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Spices and Seasonings\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;id\&quot;: 2010,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/cinnamon.jpg\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;cinnamon\&quot;,\n \&quot;original\&quot;: \&quot;2 teaspoons cinnamon\&quot;,\n \&quot;originalName\&quot;: \&quot;cinnamon\&quot;,\n \&quot;unit\&quot;: \&quot;teaspoons\&quot;,\n \&quot;unitLong\&quot;: \&quot;teaspoons\&quot;,\n \&quot;unitShort\&quot;: \&quot;tsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Nut butters, Jams, and Honey\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;id\&quot;: 19719,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/apricot-jam.jpg\&quot;,\n \&quot;meta\&quot;: [\n \&quot;melted\&quot;\n ],\n \&quot;name\&quot;: \&quot;apricot preserves\&quot;,\n \&quot;original\&quot;: \&quot;2 tablespoons apricot preserves, melted and strained\&quot;,\n \&quot;originalName\&quot;: \&quot;apricot preserves, melted and strained\&quot;,\n \&quot;unit\&quot;: \&quot;tablespoons\&quot;,\n \&quot;unitLong\&quot;: \&quot;tablespoons\&quot;,\n \&quot;unitShort\&quot;: \n\n#### Parameters\n\&quot;Tbsp\&quot;\n }\n ],\n \&quot;title\&quot;: \&quot;Apricot Glazed Apple Tart\&quot;,\n \&quot;unusedIngredients\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;id\&quot;: 9003,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/apple.jpg\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;apples\&quot;,\n \&quot;original\&quot;: \&quot;apples\&quot;,\n \&quot;originalName\&quot;: \&quot;apples\&quot;,\n \&quot;unit\&quot;: \&quot;serving\&quot;,\n \&quot;unitLong\&quot;: \&quot;serving\&quot;,\n \&quot;unitShort\&quot;: \&quot;serving\&quot;\n }\n ],\n \&quot;usedIngredientCount\&quot;: 0,\n \&quot;usedIngredients\&quot;: []\n }\n]\n```\n\nIf you need more filter options, consider using the recipe search and set the `sort` parameter to `max-used-ingredients` or `min-missing-ingredients`.\n\nThe API response will give you arrays of usedIngredients, missedIngredients, and unusedIngredients for each returned recipe. This diagram shows you what they mean:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper recipe returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Recipes by Nutrients\nFind a set of recipes that adhere to the given nutritional limits. You may set limits for macronutrients (calories, protein, fat, and carbohydrate) and/or many micronutrients.\n\nGET\n\nhttps://api.spoonacular.com/recipes/findByNutrients\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| `minCarbs` | number | 10 | The minimum amount of carbohydrates in grams the recipe must have per serving. |\n| `maxCarbs` | number | 100 | The maximum amount of carbohydrates in grams the recipe can have per serving. |\n| `minProtein` | number | 10 | The minimum amount of protein in grams the recipe must have per serving. |\n| `maxProtein` | number | 100 | The maximum amount of protein in grams the recipe can have per serving. |\n| `minCalories` | number | 50 | The minimum amount of calories the recipe must have per serving. |\n| `maxCalories` | number | 800 | The maximum amount of calories the recipe can have per serving. |\n| `minFat` | number | 1 | The minimum amount of fat in grams the recipe must have per serving. |\n| `maxFat` | number | 100 | The maximum amount of fat in grams the recipe can have per serving. |\n| `minAlcohol` | number | 0 | The minimum amount of alcohol in grams the recipe must have per serving. |\n| `maxAlcohol` | number | 100 | The maximum amount of alcohol in grams the recipe can have per serving. |\n| `minCaffeine` | number | 0 | The minimum amount of caffeine in milligrams the recipe must have per serving. |\n| `maxCaffeine` | number | 100 | The maximum amount of caffeine in milligrams the recipe can have per serving. |\n| `minCopper` | number | 0 | The minimum amount of copper in milligrams the recipe must have per serving. |\n| `maxCopper` | number | 100 | The maximum amount of copper in milligrams the recipe can have per serving. |\n| `minCalcium` | number | 0 | The minimum amount of calcium in milligrams the recipe must have per serving. |\n| `maxCalcium` | number | 100 | The maximum amount of calcium in milligrams the recipe can have per serving. |\n| `minCholine` | number | 0 | The minimum amount of choline in milligrams the recipe must have per serving. |\n| `maxCholine` | number | 100 | The maximum amount of choline in milligrams the recipe can have per serving. |\n| `minCholesterol` | number | 0 | The minimum amount of cholesterol in milligrams the recipe must have per serving. |\n| `maxCholesterol` | number | 100 | The maximum amount of cholesterol in milligrams the recipe can have per serving. |\n| `minFluoride` | number | 0 | The minimum amount of fluoride in milligrams the recipe must have per serving. |\n| `maxFluoride` | number | 100 | The maximum amount of fluoride in milligrams the recipe can have per serving. |\n| `minSaturatedFat` | number | 0 | The minimum amount of saturated fat in grams the recipe must have per serving. |\n| `maxSaturatedFat` | number | 100 | The maximum amount of saturated fat in grams the recipe can have per serving. |\n| `minVitaminA` | number | 0 | The minimum amount of Vitamin A in IU the recipe must have per serving. |\n| `maxVitaminA` | number | 100 | The maximum amount of Vitamin A in IU the recipe can have per serving. |\n| `minVitaminC` | number | 0 | The minimum amount of Vitamin C in milligrams the recipe must have per serving. |\n| `maxVitaminC` | number | 100 | The maximum amount of Vitamin C in milligrams the recipe can have per serving. |\n| `minVitaminD` | number | 0 | The minimum amount of Vitamin D in micrograms the recipe must have per serving. |\n| `maxVitaminD` | number | 100 | The maximum amount of Vitamin D in micrograms the recipe can have per serving. |\n| `minVitaminE` | number | 0 | The minimum amount of Vitamin E in milligrams the recipe must have per serving. |\n| `maxVitaminE` | number | 100 | The maximum amount of Vitamin E in milligrams the recipe can have per serving. |\n| `minVitaminK` | number | 0 | The minimum amount of Vitamin K in micrograms the recipe must have per serving. |\n| `maxVitaminK` | number | 100 | The maximum amount of Vitamin K in micrograms the recipe can have per serving. |\n| `minVitaminB1` | number | 0 | The minimum amount of Vitamin B1 in milligrams the recipe must have per serving.\n\n#### Parameters\n |\n| `maxVitaminB1` | number | 100 | The maximum amount of Vitamin B1 in milligrams the recipe can have per serving. |\n| `minVitaminB2` | number | 0 | The minimum amount of Vitamin B2 in milligrams the recipe must have per serving. |\n| `maxVitaminB2` | number | 100 | The maximum amount of Vitamin B2 in milligrams the recipe can have per serving. |\n| `minVitaminB5` | number | 0 | The minimum amount of Vitamin B5 in milligrams the recipe must have per serving. |\n| `maxVitaminB5` | number | 100 | The maximum amount of Vitamin B5 in milligrams the recipe can have per serving. |\n| `minVitaminB3` | number | 0 | The minimum amount of Vitamin B3 in milligrams the recipe must have per serving. |\n| `maxVitaminB3` | number | 100 | The maximum amount of Vitamin B3 in milligrams the recipe can have per serving. |\n| `minVitaminB6` | number | 0 | The minimum amount of Vitamin B6 in milligrams the recipe must have per serving. |\n| `maxVitaminB6` | number | 100 | The maximum amount of Vitamin B6 in milligrams the recipe can have per serving. |\n| `minVitaminB12` | number | 0 | The minimum amount of Vitamin B12 in micrograms the recipe must have per serving. |\n| `maxVitaminB12` | number | 100 | The maximum amount of Vitamin B12 in micrograms the recipe can have per serving. |\n| `minFiber` | number | 0 | The minimum amount of fiber in grams the recipe must have per serving. |\n| `maxFiber` | number | 100 | The maximum amount of fiber in grams the recipe can have per serving. |\n| `minFolate` | number | 0 | The minimum amount of folate in micrograms the recipe must have per serving. |\n| `maxFolate` | number | 100 | The maximum amount of folate in micrograms the recipe can have per serving. |\n| `minFolicAcid` | number | 0 | The minimum amount of folic acid in micrograms the recipe must have per serving. |\n| `maxFolicAcid` | number | 100 | The maximum amount of folic acid in micrograms the recipe can have per serving. |\n| `minIodine` | number | 0 | The minimum amount of iodine in micrograms the recipe must have per serving. |\n| `maxIodine` | number | 100 | The maximum amount of iodine in micrograms the recipe can have per serving. |\n| `minIron` | number | 0 | The minimum amount of iron in milligrams the recipe must have per serving. |\n| `maxIron` | number | 100 | The maximum amount of iron in milligrams the recipe can have per serving. |\n| `minMagnesium` | number | 0 | The minimum amount of magnesium in milligrams the recipe must have per serving. |\n| `maxMagnesium` | number | 100 | The maximum amount of magnesium in milligrams the recipe can have per serving. |\n| `minManganese` | number | 0 | The minimum amount of manganese in milligrams the recipe must have per serving. |\n| `maxManganese` | number | 100 | The maximum amount of manganese in milligrams the recipe can have per serving. |\n| `minPhosphorus` | number | 0 | The minimum amount of phosphorus in milligrams the recipe must have per serving. |\n| `maxPhosphorus` | number | 100 | The maximum amount of phosphorus in milligrams the recipe can have per serving. |\n| `minPotassium` | number | 0 | The minimum amount of potassium in milligrams the recipe must have per serving. |\n| `maxPotassium` | number | 100 | The maximum amount of potassium in milligrams the recipe can have per serving. |\n| `minSelenium` | number | 0 | The minimum amount of selenium in micrograms the recipe must have per serving. |\n| `maxSelenium` | number | 100 | The maximum amount of selenium in micrograms the recipe can have per serving. |\n| `minSodium` | number | 0 | The minimum amount of sodium in milligrams the recipe must have per serving. |\n| `maxSodium` | number | 100 | The maximum amount of sodium in milligrams the recipe can have per serving. |\n| `minSugar` | number | 0 | The minimum amount of sugar in grams the recipe must have per serving. |\n| `maxSugar` | number | 100 | The maximum amount of sugar in grams the recipe can have per serving.\n\n#### Parameters\n |\n| `minZinc` | number | 0 | The minimum amount of zinc in milligrams the recipe must have per serving. |\n| `maxZinc` | number | 100 | The maximum amount of zinc in milligrams the recipe can have per serving. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 900). |\n| `number` | number | 10 | The number of expected results (between 1 and 100). |\n| `random` | boolean | false | If true, every request will give you a random set of recipes within the requested limits. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/findByNutrients?minCarbs\u003d10\u0026maxCarbs\u003d50\u0026number\u003d2\n\n```\n[\n {\n \&quot;calories\&quot;: 210,\n \&quot;carbs\&quot;: \&quot;43g\&quot;,\n \&quot;fat\&quot;: \&quot;3g\&quot;,\n \&quot;id\&quot;: 90629,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/90629-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;protein\&quot;: \&quot;1g\&quot;,\n \&quot;title\&quot;: \&quot;Baked Apples in White Wine\&quot;\n },\n {\n \&quot;calories\&quot;: 226,\n \&quot;carbs\&quot;: \&quot;33g\&quot;,\n \&quot;fat\&quot;: \&quot;10g\&quot;,\n \&quot;id\&quot;: 284420,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/284420-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;protein\&quot;: \&quot;2g\&quot;,\n \&quot;title\&quot;: \&quot;Chocolate Silk Pie with Marshmallow Meringue\&quot;\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper recipe returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Recipes\nSearch through thousands of recipes using advanced filtering and ranking. NOTE: This method combines searching by query, by ingredients, and by nutrients into one endpoint.\n\nIf you are making a \&quot;what\u0027s in your fridge?\&quot; style app and require more filters than the Search Recipes by Ingredients endpoint allows, use the sort parameters max-used-ingredients or min-missing-ingredients with this endpoint instead.\n\nGET\n\nhttps://api.spoonacular.com/recipes/complexSearch\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | pasta | The (natural language) recipe search query. |\n| `cuisine` | string | italian | The cuisine(s) of the recipes. One or more, comma separated (will be interpreted as \u0027OR\u0027). See a full [list of supported cuisines](https://spoonacular.com/food-api/docs#Cuisines). |\n| `excludeCuisine` | string | greek | The cuisine(s) the recipes must not match. One or more, comma separated (will be interpreted as \u0027AND\u0027). See a full [list of supported cuisines](https://spoonacular.com/food-api/docs#Cuisines). |\n| `diet` | string | vegetarian | The diet(s) for which the recipes must be suitable. You can specify multiple with comma meaning AND connection. You can specify multiple diets separated with a pipe \\| meaning OR connection. For example diet\u003dgluten free,vegetarian means the recipes must be both, gluten free and vegetarian. If you specify diet\u003dvegan\\|vegetarian, it means you want recipes that are vegan OR vegetarian. See a full [list of supported diets](https://spoonacular.com/food-api/docs#Diets). |\n| `intolerances` | string | gluten | A comma-separated list of intolerances. All recipes returned must not contain ingredients that are not suitable for people with the intolerances entered. See a full [list of supported intolerances](https://spoonacular.com/food-api/docs#Intolerances). |\n| `equipment` | string | pan | The equipment required. Multiple values will be interpreted as \u0027or\u0027. For example, value could be \&quot;blender, frying pan, bowl\&quot;.See a full [list of supported equipment](https://spoonacular.com/food-api/docs#Equipment). |\n| `includeIngredients` | string | tomato,cheese | A comma-separated list of ingredients that should/must be used in the recipes. |\n| `excludeIngredients` | string | eggs | A comma-separated list of ingredients or ingredient types that the recipes must not contain. |\n| `type` | string | main course | The type of recipe. See a full [list of supported meal types](https://spoonacular.com/food-api/docs#Meal-Types). |\n| `instructionsRequired` | boolean | true | Whether the recipes must have instructions. |\n| `fillIngredients` | boolean | false | Add information about the ingredients and whether they are used or missing in relation to the query. |\n| `addRecipeInformation` | boolean | false | If set to true, you get more information about the recipes returned. |\n| `addRecipeInstructions` | boolean | false | If set to true, you get analyzed instructions for each recipe returned. The addRecipeInformation parameter needs to be true for this to take effect. |\n| `addRecipeNutrition` | boolean | false | If set to true, you get nutritional information about each recipes returned. |\n| `author` | string | coffeebean | The username of the recipe author. |\n| `tags` | string | myCustomTag | User defined tags that have to match. The author param has to be set. |\n| `recipeBoxId` | number | 2468 | The id of the recipe box to which the search should be limited to. |\n| `titleMatch` | string | Crock Pot | Enter text that must be found in the title of the recipes. |\n| `maxReadyTime` | number | 20 | The maximum time in minutes it should take to prepare and cook the recipe. |\n| `minServings` | number | 1 | The minimum amount of servings the recipe is for. |\n| `maxServings` | number | 8 | The maximum amount of servings the recipe is for. |\n| `ignorePantry` | boolean | true | Whether to ignore typical pantry items, such as water, salt, flour, etc. |\n| `sort` | string | calories | The strategy to sort recipes by. See a full [list of supported sorting options](https://spoonacular.com/food-api/docs#Recipe-Sorting-Options). |\n| `sortDirection` | string | asc | The direction in which to sort. Must be either \u0027asc\u0027 (ascending) or \u0027desc\u0027 (descending). |\n| `minCarbs` | number | 10 | The minimum amount of carbohydrates in grams the recipe must have per serving.\n\n#### Parameters\n |\n| `maxCarbs` | number | 100 | The maximum amount of carbohydrates in grams the recipe can have per serving. |\n| `minProtein` | number | 10 | The minimum amount of protein in grams the recipe must have per serving. |\n| `maxProtein` | number | 100 | The maximum amount of protein in grams the recipe can have per serving. |\n| `minCalories` | number | 50 | The minimum amount of calories the recipe must have per serving. |\n| `maxCalories` | number | 800 | The maximum amount of calories the recipe can have per serving. |\n| `minFat` | number | 1 | The minimum amount of fat in grams the recipe must have per serving. |\n| `maxFat` | number | 100 | The maximum amount of fat in grams the recipe can have per serving. |\n| `minAlcohol` | number | 0 | The minimum amount of alcohol in grams the recipe must have per serving. |\n| `maxAlcohol` | number | 100 | The maximum amount of alcohol in grams the recipe can have per serving. |\n| `minCaffeine` | number | 0 | The minimum amount of caffeine in milligrams the recipe must have per serving. |\n| `maxCaffeine` | number | 100 | The maximum amount of caffeine in milligrams the recipe can have per serving. |\n| `minCopper` | number | 0 | The minimum amount of copper in milligrams the recipe must have per serving. |\n| `maxCopper` | number | 100 | The maximum amount of copper in milligrams the recipe can have per serving. |\n| `minCalcium` | number | 0 | The minimum amount of calcium in milligrams the recipe must have per serving. |\n| `maxCalcium` | number | 100 | The maximum amount of calcium in milligrams the recipe can have per serving. |\n| `minCholine` | number | 0 | The minimum amount of choline in milligrams the recipe must have per serving. |\n| `maxCholine` | number | 100 | The maximum amount of choline in milligrams the recipe can have per serving. |\n| `minCholesterol` | number | 0 | The minimum amount of cholesterol in milligrams the recipe must have per serving. |\n| `maxCholesterol` | number | 100 | The maximum amount of cholesterol in milligrams the recipe can have per serving. |\n| `minFluoride` | number | 0 | The minimum amount of fluoride in milligrams the recipe must have per serving. |\n| `maxFluoride` | number | 100 | The maximum amount of fluoride in milligrams the recipe can have per serving. |\n| `minSaturatedFat` | number | 0 | The minimum amount of saturated fat in grams the recipe must have per serving. |\n| `maxSaturatedFat` | number | 100 | The maximum amount of saturated fat in grams the recipe can have per serving. |\n| `minVitaminA` | number | 0 | The minimum amount of Vitamin A in IU the recipe must have per serving. |\n| `maxVitaminA` | number | 100 | The maximum amount of Vitamin A in IU the recipe can have per serving. |\n| `minVitaminC` | number | 0 | The minimum amount of Vitamin C milligrams the recipe must have per serving. |\n| `maxVitaminC` | number | 100 | The maximum amount of Vitamin C in milligrams the recipe can have per serving. |\n| `minVitaminD` | number | 0 | The minimum amount of Vitamin D in micrograms the recipe must have per serving. |\n| `maxVitaminD` | number | 100 | The maximum amount of Vitamin D in micrograms the recipe can have per serving. |\n| `minVitaminE` | number | 0 | The minimum amount of Vitamin E in milligrams the recipe must have per serving. |\n| `maxVitaminE` | number | 100 | The maximum amount of Vitamin E in milligrams the recipe can have per serving. |\n| `minVitaminK` | number | 0 | The minimum amount of Vitamin K in micrograms the recipe must have per serving. |\n| `maxVitaminK` | number | 100 | The maximum amount of Vitamin K in micrograms the recipe can have per serving. |\n| `minVitaminB1` | number | 0 | The minimum amount of Vitamin B1 in milligrams the recipe must have per serving. |\n| `maxVitaminB1` | number | 100 | The maximum amount of Vitamin B1 in milligrams the recipe can have per serving. |\n| `minVitaminB2` | number | 0 | The minimum amount of Vitamin B2 in milligrams the recipe must have per serving.\n\n#### Parameters\n |\n| `maxVitaminB2` | number | 100 | The maximum amount of Vitamin B2 in milligrams the recipe can have per serving. |\n| `minVitaminB5` | number | 0 | The minimum amount of Vitamin B5 in milligrams the recipe must have per serving. |\n| `maxVitaminB5` | number | 100 | The maximum amount of Vitamin B5 in milligrams the recipe can have per serving. |\n| `minVitaminB3` | number | 0 | The minimum amount of Vitamin B3 in milligrams the recipe must have per serving. |\n| `maxVitaminB3` | number | 100 | The maximum amount of Vitamin B3 in milligrams the recipe can have per serving. |\n| `minVitaminB6` | number | 0 | The minimum amount of Vitamin B6 in milligrams the recipe must have per serving. |\n| `maxVitaminB6` | number | 100 | The maximum amount of Vitamin B6 in milligrams the recipe can have per serving. |\n| `minVitaminB12` | number | 0 | The minimum amount of Vitamin B12 in micrograms the recipe must have per serving. |\n| `maxVitaminB12` | number | 100 | The maximum amount of Vitamin B12 in micrograms the recipe can have per serving. |\n| `minFiber` | number | 0 | The minimum amount of fiber in grams the recipe must have per serving. |\n| `maxFiber` | number | 100 | The maximum amount of fiber in grams the recipe can have per serving. |\n| `minFolate` | number | 0 | The minimum amount of folate in micrograms the recipe must have per serving. |\n| `maxFolate` | number | 100 | The maximum amount of folate in micrograms the recipe can have per serving. |\n| `minFolicAcid` | number | 0 | The minimum amount of folic acid in micrograms the recipe must have per serving. |\n| `maxFolicAcid` | number | 100 | The maximum amount of folic acid in micrograms the recipe can have per serving. |\n| `minIodine` | number | 0 | The minimum amount of iodine in micrograms the recipe must have per serving. |\n| `maxIodine` | number | 100 | The maximum amount of iodine in micrograms the recipe can have per serving. |\n| `minIron` | number | 0 | The minimum amount of iron in milligrams the recipe must have per serving. |\n| `maxIron` | number | 100 | The maximum amount of iron in milligrams the recipe can have per serving. |\n| `minMagnesium` | number | 0 | The minimum amount of magnesium in milligrams the recipe must have per serving. |\n| `maxMagnesium` | number | 100 | The maximum amount of magnesium in milligrams the recipe can have per serving. |\n| `minManganese` | number | 0 | The minimum amount of manganese in milligrams the recipe must have per serving. |\n| `maxManganese` | number | 100 | The maximum amount of manganese in milligrams the recipe can have per serving. |\n| `minPhosphorus` | number | 0 | The minimum amount of phosphorus in milligrams the recipe must have per serving. |\n| `maxPhosphorus` | number | 100 | The maximum amount of phosphorus in milligrams the recipe can have per serving. |\n| `minPotassium` | number | 0 | The minimum amount of potassium in milligrams the recipe must have per serving. |\n| `maxPotassium` | number | 100 | The maximum amount of potassium in milligrams the recipe can have per serving. |\n| `minSelenium` | number | 0 | The minimum amount of selenium in micrograms the recipe must have per serving. |\n| `maxSelenium` | number | 100 | The maximum amount of selenium in micrograms the recipe can have per serving. |\n| `minSodium` | number | 0 | The minimum amount of sodium in milligrams the recipe must have per serving. |\n| `maxSodium` | number | 100 | The maximum amount of sodium in milligrams the recipe can have per serving. |\n| `minSugar` | number | 0 | The minimum amount of sugar in grams the recipe must have per serving. |\n| `maxSugar` | number | 100 | The maximum amount of sugar in grams the recipe can have per serving. |\n| `minZinc` | number | 0 | The minimum amount of zinc in milligrams the recipe must have per serving. |\n| `maxZinc` | number | 100 | The maximum amount of zinc in milligrams the recipe can have per serving. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 900).\n\n#### Parameters\n |\n| `number` | number | 10 | The number of expected results (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/complexSearch?query\u003dpasta\u0026maxFat\u003d25\u0026number\u003d2\n\n```\n{\n \&quot;offset\&quot;: 0,\n \&quot;number\&quot;: 2,\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 716429,\n \&quot;title\&quot;: \&quot;Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/716429-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n },\n {\n \&quot;id\&quot;: 715538,\n \&quot;title\&quot;: \&quot;What to make for dinner tonight?? Bruschetta Style Pork \u0026 Pasta\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/715538-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n }\n ],\n \&quot;totalResults\&quot;: 86\n}\n```\n\nThe API response will give you arrays of usedIngredients, missedIngredients, and unusedIngredients for each returned recipe. This diagram shows you what they mean:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper result returned. Since this endpoint combines the capabilities of four different endpoints into one, additional points may be required depending on the parameters you set. If `fillIngredients` is set to true,\n\n0.025 points\n\nwill be added per recipe returned. If a nutrient filter is set,\n\n1 point\n\nwill be added. If `addRecipeInformation` is set to true,\n\n0.025 points\n\nwill be added per recipe returned. If `addRecipeInstructions` is set to true,\n\n0.025 points\n\nwill be added per recipe returned. If `addRecipeNutrition` is set to true,\n\n0.025 points\n\nwill be added per recipe returned and `addRecipeInformation` will automatically be set to true as well. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Recipe Information\nUse a recipe id to get full information about a recipe, such as ingredients, nutrition, diet and allergen information, etc.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/information\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 716429 | The id of the recipe. |\n| `includeNutrition` | boolean | false | Include nutrition data in the recipe information. Nutrition data is per serving. If you want the nutrition data for the entire recipe, just multiply by the number of servings. |\n| `addWinePairing` | boolean | false | Add a wine pairing to the recipe. |\n| `addTasteData` | boolean | false | Add taste data to the recipe. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/716429/information?includeNutrition\u003dfalse\n\n```\n{\n \&quot;id\&quot;: 716429,\n \&quot;title\&quot;: \&quot;Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/716429-556x370.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;servings\&quot;: 2,\n \&quot;readyInMinutes\&quot;: 45,\n \&quot;cookingMinutes\&quot;: 25,\n \&quot;preparationMinutes\&quot;: 20,\n \&quot;license\&quot;: \&quot;CC BY-SA 3.0\&quot;,\n \&quot;sourceName\&quot;: \&quot;Full Belly Sisters\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://fullbellysisters.blogspot.com/2012/06/pasta-with-garlic-scallions-cauliflower.html\&quot;,\n \&quot;spoonacularSourceUrl\&quot;: \&quot;https://spoonacular.com/pasta-with-garlic-scallions-cauliflower-breadcrumbs-716429\&quot;,\n \&quot;healthScore\&quot;: 19.0,\n \&quot;spoonacularScore\&quot;: 83.0,\n \&quot;pricePerServing\&quot;: 163.15,\n \&quot;analyzedInstructions\&quot;: [],\n \&quot;cheap\&quot;: false,\n \&quot;creditsText\&quot;: \&quot;Full Belly Sisters\&quot;,\n \&quot;cuisines\&quot;: [],\n \&quot;dairyFree\&quot;: false,\n \&quot;diets\&quot;: [],\n \&quot;gaps\&quot;: \&quot;no\&quot;,\n \&quot;glutenFree\&quot;: false,\n \&quot;instructions\&quot;: \&quot;\&quot;,\n \&quot;ketogenic\&quot;: false,\n \&quot;lowFodmap\&quot;: false,\n \&quot;occasions\&quot;: [],\n \&quot;sustainable\&quot;: false,\n \&quot;vegan\&quot;: false,\n \&quot;vegetarian\&quot;: false,\n \&quot;veryHealthy\&quot;: false,\n \&quot;veryPopular\&quot;: false,\n \&quot;whole30\&quot;: false,\n \&quot;weightWatcherSmartPoints\&quot;: 17,\n \&quot;dishTypes\&quot;: [\n \&quot;lunch\&quot;,\n \&quot;main course\&quot;,\n \&quot;main dish\&quot;,\n \&quot;dinner\&quot;\n ],\n \&quot;extendedIngredients\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Milk, Eggs, Other Dairy\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 1001,\n \&quot;image\&quot;: \&quot;butter-sliced.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unitLong\&quot;: \&quot;Tbsp\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsp\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unitLong\&quot;: \&quot;Tbsp\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsp\&quot;\n }\n },\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;butter\&quot;,\n \&quot;original\&quot;: \&quot;1 tbsp butter\&quot;,\n \&quot;originalName\&quot;: \&quot;butter\&quot;,\n \&quot;unit\&quot;: \&quot;tbsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 10011135,\n \&quot;image\&quot;: \&quot;cauliflower.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 473.176,\n \&quot;unitLong\&quot;: \&quot;milliliters\&quot;,\n \&quot;unitShort\&quot;: \&quot;ml\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;cups\&quot;,\n \&quot;unitShort\&quot;: \&quot;cups\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;frozen\&quot;,\n \&quot;thawed\&quot;,\n \&quot;cut into bite-sized pieces\&quot;\n ],\n \&quot;name\&quot;: \&quot;cauliflower florets\&quot;,\n \&quot;original\&quot;: \&quot;about 2 cups frozen cauliflower florets, thawed, cut into bite-sized pieces\&quot;,\n \&quot;originalName\&quot;: \&quot;about frozen cauliflower florets, thawed, cut into bite-sized pieces\&quot;,\n \&quot;unit\&quot;: \&quot;cups\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Cheese\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 1041009,\n \&quot;image\&quot;: \&quot;cheddar-cheese.png\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;Tbsps\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsps\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;Tbsps\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsps\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;grated\&quot;,\n \&quot;(I used romano)\&quot;\n ],\n \&quot;name\&quot;: \&quot;cheese\&quot;,\n \&quot;original\&quot;: \&quot;2 tbsp grated cheese (I used romano)\&quot;,\n \&quot;originalName\&quot;: \&quot;grated cheese (I used romano)\&quot;,\n \&quot;unit\&quot;: \&quot;tbsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Oil, Vinegar, Salad Dressing\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;consistency\&quot;: \&quot;liquid\&quot;,\n \&quot;id\&quot;: 1034053,\n \&quot;image\&quot;: \&quot;olive-oil.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unitLong\&quot;: \&quot;Tbsp\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsp\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unitLong\&quot;: \&quot;Tbsp\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsp\&quot;\n }\n },\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;extra virgin olive oil\&quot;,\n \&quot;original\&quot;: \&quot;1-2 tbsp extra virgin olive oil\&quot;,\n \&quot;originalName\&quot;: \&quot;extra virgin olive oil\&quot;,\n \&quot;unit\&quot;: \&quot;tbsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;amount\&quot;: 5.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 11215,\n \&quot;image\&quot;: \&quot;garlic.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 5.0,\n \&quot;unitLong\&quot;: \&quot;cloves\&quot;,\n \&quot;unitShort\&quot;: \&quot;cloves\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 5.0,\n \&quot;unitLong\&quot;: \&quot;cloves\&quot;,\n \&quot;unitShort\&quot;: \&quot;cloves\&quot;\n }\n },\n \&quot;meta\&quot;: [],\n \&quot;name\&quot;: \&quot;garlic\&quot;,\n \&quot;original\&quot;: \&quot;5-6 cloves garlic\&quot;,\n \&quot;originalName\&quot;: \n\n#### Parameters\n\&quot;garlic\&quot;,\n \&quot;unit\&quot;: \&quot;cloves\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Pasta and Rice\&quot;,\n \&quot;amount\&quot;: 6.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 20420,\n \&quot;image\&quot;: \&quot;fusilli.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 170.097,\n \&quot;unitLong\&quot;: \&quot;grams\&quot;,\n \&quot;unitShort\&quot;: \&quot;g\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 6.0,\n \&quot;unitLong\&quot;: \&quot;ounces\&quot;,\n \&quot;unitShort\&quot;: \&quot;oz\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;(I used linguine)\&quot;\n ],\n \&quot;name\&quot;: \&quot;pasta\&quot;,\n \&quot;original\&quot;: \&quot;6-8 ounces pasta (I used linguine)\&quot;,\n \&quot;originalName\&quot;: \&quot;pasta (I used linguine)\&quot;,\n \&quot;unit\&quot;: \&quot;ounces\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Spices and Seasonings\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 1032009,\n \&quot;image\&quot;: \&quot;red-pepper-flakes.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;pinches\&quot;,\n \&quot;unitShort\&quot;: \&quot;pinches\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;pinches\&quot;,\n \&quot;unitShort\&quot;: \&quot;pinches\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;red\&quot;\n ],\n \&quot;name\&quot;: \&quot;red pepper flakes\&quot;,\n \&quot;original\&quot;: \&quot;couple of pinches red pepper flakes, optional\&quot;,\n \&quot;originalName\&quot;: \&quot;couple of red pepper flakes, optional\&quot;,\n \&quot;unit\&quot;: \&quot;pinches\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Spices and Seasonings\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 1102047,\n \&quot;image\&quot;: \&quot;salt-and-pepper.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;servings\&quot;,\n \&quot;unitShort\&quot;: \&quot;servings\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;servings\&quot;,\n \&quot;unitShort\&quot;: \&quot;servings\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;to taste\&quot;\n ],\n \&quot;name\&quot;: \&quot;salt and pepper\&quot;,\n \&quot;original\&quot;: \&quot;salt and pepper, to taste\&quot;,\n \&quot;originalName\&quot;: \&quot;salt and pepper, to taste\&quot;,\n \&quot;unit\&quot;: \&quot;servings\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;amount\&quot;: 3.0,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 11291,\n \&quot;image\&quot;: \&quot;spring-onions.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 3.0,\n \&quot;unitLong\&quot;: \&quot;\&quot;,\n \&quot;unitShort\&quot;: \&quot;\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 3.0,\n \&quot;unitLong\&quot;: \&quot;\&quot;,\n \&quot;unitShort\&quot;: \&quot;\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;white\&quot;,\n \&quot;green\&quot;,\n \&quot;separated\&quot;,\n \&quot;chopped\&quot;\n ],\n \&quot;name\&quot;: \&quot;scallions\&quot;,\n \&quot;original\&quot;: \&quot;3 scallions, chopped, white and green parts separated\&quot;,\n \&quot;originalName\&quot;: \&quot;scallions, chopped, white and green parts separated\&quot;,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Alcoholic Beverages\&quot;,\n \&quot;amount\&quot;: 2.0,\n \&quot;consistency\&quot;: \&quot;liquid\&quot;,\n \&quot;id\&quot;: 14106,\n \&quot;image\&quot;: \&quot;white-wine.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;Tbsps\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsps\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 2.0,\n \&quot;unitLong\&quot;: \&quot;Tbsps\&quot;,\n \&quot;unitShort\&quot;: \&quot;Tbsps\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;white\&quot;\n ],\n \&quot;name\&quot;: \&quot;white wine\&quot;,\n \&quot;original\&quot;: \&quot;2-3 tbsp white wine\&quot;,\n \&quot;originalName\&quot;: \&quot;white wine\&quot;,\n \&quot;unit\&quot;: \&quot;tbsp\&quot;\n },\n {\n \&quot;aisle\&quot;: \&quot;Pasta and Rice\&quot;,\n \&quot;amount\&quot;: 0.25,\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;id\&quot;: 99025,\n \&quot;image\&quot;: \&quot;breadcrumbs.jpg\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 59.147,\n \&quot;unitLong\&quot;: \&quot;milliliters\&quot;,\n \&quot;unitShort\&quot;: \&quot;ml\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 0.25,\n \&quot;unitLong\&quot;: \&quot;cups\&quot;,\n \&quot;unitShort\&quot;: \&quot;cups\&quot;\n }\n },\n \&quot;meta\&quot;: [\n \&quot;whole wheat\&quot;,\n \&quot;(I used panko)\&quot;\n ],\n \&quot;name\&quot;: \&quot;whole wheat bread crumbs\&quot;,\n \&quot;original\&quot;: \&quot;1/4 cup whole wheat bread crumbs (I used panko)\&quot;,\n \&quot;originalName\&quot;: \&quot;whole wheat bread crumbs (I used panko)\&quot;,\n \&quot;unit\&quot;: \&quot;cup\&quot;\n }\n ],\n \&quot;summary\&quot;: \&quot;Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs might be a good recipe to expand your main course repertoire. One portion of this dish contains approximately 19g of protein, 20g of fat, and a total of 584 calories. For $1.63 per serving, this recipe covers 23% of your daily requirements of vitamins and minerals. This recipe serves 2. It is brought to you by fullbellysisters.blogspot.com. 209 people were glad they tried this recipe. A mixture of scallions, salt and pepper, white wine, and a handful of other ingredients are all it takes to make this recipe so scrumptious. From preparation to the plate, this recipe takes approximately 45 minutes. All things considered, we decided this recipe deserves a spoonacular score of 83%. This score is awesome.\n\n#### Parameters\n If you like this recipe, take a look at these similar recipes: Cauliflower Gratin with Garlic Breadcrumbs, \u003c href\u003d\\\&quot;https://spoonacular.com/recipes/pasta-with-cauliflower-sausage-breadcrumbs-30437\\\&quot;\u003ePasta With Cauliflower, Sausage, \u0026 Breadcrumbs, and Pasta With Roasted Cauliflower, Parsley, And Breadcrumbs.\&quot;,\n \&quot;winePairing\&quot;: {\n \&quot;pairedWines\&quot;: [\n \&quot;chardonnay\&quot;,\n \&quot;gruener veltliner\&quot;,\n \&quot;sauvignon blanc\&quot;\n ],\n \&quot;pairingText\&quot;: \&quot;Chardonnay, Gruener Veltliner, and Sauvignon Blanc are great choices for Pasta. Sauvignon Blanc and Gruner Veltliner both have herby notes that complement salads with enough acid to match tart vinaigrettes, while a Chardonnay can be a good pick for creamy salad dressings. The Buddha Kat Winery Chardonnay with a 4 out of 5 star rating seems like a good match. It costs about 25 dollars per bottle.\&quot;,\n \&quot;productMatches\&quot;: [\n {\n \&quot;id\&quot;: 469199,\n \&quot;title\&quot;: \&quot;Buddha Kat Winery Chardonnay\&quot;,\n \&quot;description\&quot;: \&quot;We barrel ferment our Chardonnay and age it in a mix of Oak and Stainless. Giving this light bodied wine modest oak character, a delicate floral aroma, and a warming finish.\&quot;,\n \&quot;price\&quot;: \&quot;$25.0\&quot;,\n \&quot;imageUrl\&quot;: \&quot;https://img.spoonacular.com/products/469199-312x231.jpg\&quot;,\n \&quot;averageRating\&quot;: 0.8,\n \&quot;ratingCount\&quot;: 1.0,\n \&quot;score\&quot;: 0.55,\n \&quot;link\&quot;: \&quot;https://www.amazon.com/2015-Buddha-Kat-Winery-Chardonnay/dp/B00OSAVVM4?tag\u003dspoonacular-20\&quot;\n }\n ]\n }\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.1 points\n\nif `includeNutrition` is true +\n\n1 point\n\nif `addWinePairing` is true and +\n\n0.5 points\n\nif `addTasteData` is true..\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Recipe Information Bulk\nGet information about multiple recipes at once. This is equivalent to calling the Get Recipe Information endpoint multiple times, but faster.\n\nGET\n\nhttps://api.spoonacular.com/recipes/informationBulk\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ids`** | string | 715538,716429 | A comma-separated list of recipe ids. |\n| `includeNutrition` | boolean | false | Include nutrition data to the recipe information. Nutrition data is per serving. If you want the nutrition data for the entire recipe, just multiply by the number of servings. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/informationBulk?ids\u003d715538,716429\n\n```\n[\n {/* recipe data as in Get Recipe Information endpoint */},\n {/* recipe data as in Get Recipe Information endpoint */}\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nfor the first recipe and\n\n0.5 points\n\nfor every additional recipe returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Similar Recipes\nFind recipes which are similar to the given one.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/similar\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 715538 | The id of the source recipe for which similar recipes should be found. |\n| `number` | number | 1 | The number of random recipes to be returned (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/715538/similar\n\n```\n[\n {\n \&quot;id\&quot;: 209128,\n \&quot;title\&quot;: \&quot;Dinner Tonight: Grilled Romesco-Style Pork\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;readyInMinutes\&quot;: 45,\n \&quot;servings\&quot;: 4,\n \&quot;sourceUrl\&quot;: \&quot;http://www.seriouseats.com/recipes/2008/07/grilled-romesco-style-pork-salad-recipe.html\&quot;\n },\n {\n \&quot;id\&quot;: 31868,\n \&quot;title\&quot;: \&quot;Dinner Tonight: Chickpea Bruschetta\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;readyInMinutes\&quot;: 45,\n \&quot;servings\&quot;: 2,\n \&quot;sourceUrl\&quot;: \&quot;http://www.seriouseats.com/recipes/2009/06/dinner-tonight-chickpea-bruschetta-babbo-nyc-recipe.html\&quot;\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper recipe returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Random Recipes\nFind random (popular) recipes. If you need to filter recipes by diet, nutrition etc. you might want to consider using the complex recipe search endpoint and set the `sort` request parameter to `random`.\n\nGET\n\nhttps://api.spoonacular.com/recipes/random\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| `includeNutrition` | boolean | true | Whether to include nutritional information to returned recipes. |\n| `include-tags` | string | vegetarian, dessert | The tags (can be diets, meal types, cuisines, or intolerances) that the recipe must have. |\n| `exclude-tags` | string | dairy | The tags (can be diets, meal types, cuisines, or intolerances) that the recipe must NOT have. |\n| `number` | number | 1 | The number of random recipes to be returned (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/random?number\u003d1\u0026include-tags\u003dvegetarian,dessert\u0026exclude-tags\u003dquinoa\n\n```\n{\n \&quot;recipes\&quot;:[\n {/* recipe data as in Get Recipe Information endpoint */}\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper recipe returned and\n\n0.5 points\n\nper recipe returned if `includeNutrition` is set to true.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Autocomplete Recipe Search\nAutocomplete a partial input to suggest possible recipe names.\n\nGET\n\nhttps://api.spoonacular.com/recipes/autocomplete\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | burger | The query to be autocompleted. |\n| `number` | number | 10 | The number of results to return (between 1 and 25). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/autocomplete?number\u003d10\u0026query\u003dchick\n\n```\n[\n {\n \&quot;id\&quot;: 296687,\n \&quot;title\&quot;: \&quot;chicken\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n },\n {\n \&quot;id\&quot;: 42569,\n \&quot;title\&quot;: \&quot;chicken bbq\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n },\n\n {\n \&quot;id\&quot;: 83890,\n \&quot;title\&quot;: \&quot;chicken blt\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n },\n {\n \&quot;id\&quot;: 737543,\n \&quot;title\&quot;: \&quot;chicken pie\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Taste by ID\nGet a recipe\u0027s taste. The tastes supported are sweet, salty, sour, bitter, savory, and fatty. These tastes are between 0 and 100 while the spiciness value is in scoville on an open scale of 0 and above.\n\nEvery ingredient has each of these values and it is weighted by how much they contribute to the recipe. Spiciness is taking the weight of the spicy ingredient and multiplying it with its scoville amount. Of course, taste is also very personal and it depends on how it is prepared so all of the values should only give you an indication of how the dish tastes.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/tasteWidget.json\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 69095 | The recipe id. |\n| `normalize` | boolean | false | Normalize to the strongest taste. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/69095/tasteWidget.json\n\n```\n{\n \&quot;sweetness\&quot;: 28.79,\n \&quot;saltiness\&quot;: 26.74,\n \&quot;sourness\&quot;: 6.22,\n \&quot;bitterness\&quot;: 12.38,\n \&quot;savoriness\&quot;: 11.8,\n \&quot;fattiness\&quot;: 100,\n \&quot;spiciness\&quot;: 0\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Equipment by ID\nGet a recipe\u0027s equipment list.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/equipmentWidget.json\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1003464 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1003464/equipmentWidget.json\n\n```\n{\n \&quot;equipment\&quot;: [\n {\n \&quot;image\&quot;: \&quot;pie-pan.png\&quot;,\n \&quot;name\&quot;: \&quot;pie form\&quot;\n },\n {\n \&quot;image\&quot;: \&quot;bowl.jpg\&quot;,\n \&quot;name\&quot;: \&quot;bowl\&quot;\n },\n {\n \&quot;image\&quot;: \&quot;oven.jpg\&quot;,\n \&quot;name\&quot;: \&quot;oven\&quot;\n },\n {\n \&quot;image\&quot;: \&quot;pan.png\&quot;,\n \&quot;name\&quot;: \&quot;frying pan\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Price Breakdown by ID\nGet a recipe\u0027s price breakdown data.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/priceBreakdownWidget.json\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1003464 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1003464/priceBreakdownWidget.json\n\n```\n{\n \&quot;ingredients\&quot;: [\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 222.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;cups\&quot;,\n \&quot;value\&quot;: 1.5\n }\n },\n \&quot;image\&quot;: \&quot;blueberries.jpg\&quot;,\n \&quot;name\&quot;: \&quot;blueberries\&quot;,\n \&quot;price\&quot;: 174.43\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 1.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 1.0\n }\n },\n \&quot;image\&quot;: \&quot;egg-white.jpg\&quot;,\n \&quot;name\&quot;: \&quot;egg white\&quot;,\n \&quot;price\&quot;: 18.21\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n }\n },\n \&quot;image\&quot;: \&quot;flour.png\&quot;,\n \&quot;name\&quot;: \&quot;flour\&quot;,\n \&quot;price\&quot;: 2.0\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 150.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;cup\&quot;,\n \&quot;value\&quot;: 0.75\n }\n },\n \&quot;image\&quot;: \&quot;sugar-in-bowl.png\&quot;,\n \&quot;name\&quot;: \&quot;granulated sugar\&quot;,\n \&quot;price\&quot;: 20.67\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;tsp\&quot;,\n \&quot;value\&quot;: 1.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;tsp\&quot;,\n \&quot;value\&quot;: 1.0\n }\n },\n \&quot;image\&quot;: \&quot;lemon-juice.jpg\&quot;,\n \&quot;name\&quot;: \&quot;fresh lemon juice\&quot;,\n \&quot;price\&quot;: 3.39\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;pinch\&quot;,\n \&quot;value\&quot;: 1.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;pinch\&quot;,\n \&quot;value\&quot;: 1.0\n }\n },\n \&quot;image\&quot;: \&quot;ground-nutmeg.jpg\&quot;,\n \&quot;name\&quot;: \&quot;nutmeg\&quot;,\n \&quot;price\&quot;: 7.39\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 2.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 2.0\n }\n },\n \&quot;image\&quot;: \&quot;pie-crust.jpg\&quot;,\n \&quot;name\&quot;: \&quot;pie dough round\&quot;,\n \&quot;price\&quot;: 364.29\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n }\n },\n \&quot;image\&quot;: \&quot;tapioca-pearls.png\&quot;,\n \&quot;name\&quot;: \&quot;quick cooking tapioca\&quot;,\n \&quot;price\&quot;: 50.89\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 305.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;cups\&quot;,\n \&quot;value\&quot;: 2.5\n }\n },\n \&quot;image\&quot;: \&quot;rhubarb.jpg\&quot;,\n \&quot;name\&quot;: \&quot;trimmed rhubarb\&quot;,\n \&quot;price\&quot;: 185.18\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 0.5\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 0.5\n }\n },\n \&quot;image\&quot;: \&quot;butter-sliced.jpg\&quot;,\n \&quot;name\&quot;: \&quot;unsalted butter\&quot;,\n \&quot;price\&quot;: 6.0\n }\n ],\n \&quot;totalCost\&quot;: 832.45,\n \&quot;totalCostPerServing\&quot;: 104.06\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Ingredients by ID\nGet a recipe\u0027s ingredient list.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/ingredientWidget.json\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1003464 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1003464/ingredientWidget.json\n\n```\n{\n \&quot;ingredients\&quot;: [\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 222.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;cups\&quot;,\n \&quot;value\&quot;: 1.5\n }\n },\n \&quot;image\&quot;: \&quot;blueberries.jpg\&quot;,\n \&quot;name\&quot;: \&quot;blueberries\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 1.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 1.0\n }\n },\n \&quot;image\&quot;: \&quot;egg-white.jpg\&quot;,\n \&quot;name\&quot;: \&quot;egg white\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n }\n },\n \&quot;image\&quot;: \&quot;flour.png\&quot;,\n \&quot;name\&quot;: \&quot;flour\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 150.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;cup\&quot;,\n \&quot;value\&quot;: 0.75\n }\n },\n \&quot;image\&quot;: \&quot;sugar-in-bowl.png\&quot;,\n \&quot;name\&quot;: \&quot;granulated sugar\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;tsp\&quot;,\n \&quot;value\&quot;: 1.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;tsp\&quot;,\n \&quot;value\&quot;: 1.0\n }\n },\n \&quot;image\&quot;: \&quot;lemon-juice.jpg\&quot;,\n \&quot;name\&quot;: \&quot;fresh lemon juice\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;pinch\&quot;,\n \&quot;value\&quot;: 1.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;pinch\&quot;,\n \&quot;value\&quot;: 1.0\n }\n },\n \&quot;image\&quot;: \&quot;ground-nutmeg.jpg\&quot;,\n \&quot;name\&quot;: \&quot;nutmeg\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 2.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;value\&quot;: 2.0\n }\n },\n \&quot;image\&quot;: \&quot;pie-crust.jpg\&quot;,\n \&quot;name\&quot;: \&quot;pie dough round\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 2.0\n }\n },\n \&quot;image\&quot;: \&quot;tapioca-pearls.png\&quot;,\n \&quot;name\&quot;: \&quot;quick cooking tapioca\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 305.0\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;cups\&quot;,\n \&quot;value\&quot;: 2.5\n }\n },\n \&quot;image\&quot;: \&quot;rhubarb.jpg\&quot;,\n \&quot;name\&quot;: \&quot;trimmed rhubarb\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;tsps\&quot;,\n \&quot;value\&quot;: 0.333\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;tsps\&quot;,\n \&quot;value\&quot;: 0.333\n }\n },\n \&quot;image\&quot;: \&quot;salt.jpg\&quot;,\n \&quot;name\&quot;: \&quot;salt\&quot;\n },\n {\n \&quot;amount\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 0.5\n },\n \&quot;us\&quot;: {\n \&quot;unit\&quot;: \&quot;Tbsps\&quot;,\n \&quot;value\&quot;: 0.5\n }\n },\n \&quot;image\&quot;: \&quot;butter-sliced.jpg\&quot;,\n \&quot;name\&quot;: \&quot;unsalted butter\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Nutrition Label Widget\nGet a recipe\u0027s nutrition label as an HTML widget.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/nutritionLabel\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 641166 | The recipe id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showOptionalNutrients` | boolean | false | Whether to show optional nutrients. |\n| `showZeroValues` | boolean | false | Whether to show zero values. |\n| `showIngredients` | boolean | false | Whether to show a list of ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/641166/nutritionLabel\n\nThe response will be an HTML that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Product Nutrition Label Widget\nGet a product\u0027s nutrition label as an HTML widget.\n\nGET\n\nhttps://api.spoonacular.com/food/products/{id}/nutritionLabel\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 22347 | The product id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showOptionalNutrients` | boolean | false | Whether to show optional nutrients. |\n| `showZeroValues` | boolean | false | Whether to show zero values. |\n| `showIngredients` | boolean | false | Whether to show a list of ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/22347/nutritionLabel\n\n```\n/* HTML response */\n```\n\nThe response will be an HTML widget that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Product Nutrition Label Image\nGet a product\u0027s nutrition label as an image.\n\nGET\n\nhttps://api.spoonacular.com/food/products/{id}/nutritionLabel.png\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 22347 | The product id. |\n| `showOptionalNutrients` | boolean | false | Whether to show optional nutrients. |\n| `showZeroValues` | boolean | false | Whether to show zero values. |\n| `showIngredients` | boolean | false | Whether to show a list of ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/22347/nutritionLabel.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Nutrition Label Image\nGet a recipe\u0027s nutrition label as an image.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/nutritionLabel.png\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 641166 | The recipe id. |\n| `showOptionalNutrients` | boolean | false | Whether to show optional nutrients. |\n| `showZeroValues` | boolean | false | Whether to show zero values. |\n| `showIngredients` | boolean | false | Whether to show a list of ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/641166/nutritionLabel.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Nutrition by ID\nGet a recipe\u0027s nutrition widget data.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/nutritionWidget.json\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1003464 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1003464/nutritionWidget.json\n\n```\n{\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 316.49,\n \&quot;unit\&quot;: \&quot;kcal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 15.82\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 12.09,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 18.6\n },\n {\n \&quot;name\&quot;: \&quot;Saturated Fat\&quot;,\n \&quot;amount\&quot;: 3.98,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 24.88\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 49.25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 16.42\n },\n {\n \&quot;name\&quot;: \&quot;Net Carbohydrates\&quot;,\n \&quot;amount\&quot;: 46.76,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17.0\n },\n {\n \&quot;name\&quot;: \&quot;Sugar\&quot;,\n \&quot;amount\&quot;: 21.98,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 24.42\n },\n {\n \&quot;name\&quot;: \&quot;Cholesterol\&quot;,\n \&quot;amount\&quot;: 1.88,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.63\n },\n {\n \&quot;name\&quot;: \&quot;Sodium\&quot;,\n \&quot;amount\&quot;: 279.1,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 12.13\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 3.79,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 7.57\n },\n ...\n ],\n \&quot;properties\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Glycemic Index\&quot;,\n \&quot;amount\&quot;: 33.51,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Glycemic Load\&quot;,\n \&quot;amount\&quot;: 15.63,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Nutrition Score\&quot;,\n \&quot;amount\&quot;: 5.868695652173913,\n \&quot;unit\&quot;: \&quot;%\&quot;\n }\n ],\n \&quot;flavonoids\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Cyanidin\&quot;,\n \&quot;amount\&quot;: 2.35,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Petunidin\&quot;,\n \&quot;amount\&quot;: 8.75,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Delphinidin\&quot;,\n \&quot;amount\&quot;: 9.83,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n ...\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 9050,\n \&quot;name\&quot;: \&quot;blueberries\&quot;,\n \&quot;amount\&quot;: 0.19,\n \&quot;unit\&quot;: \&quot;cups\&quot;,\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Vitamin E\&quot;,\n \&quot;amount\&quot;: 0.16,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 3.19\n },\n {\n \&quot;name\&quot;: \&quot;Zinc\&quot;,\n \&quot;amount\&quot;: 0.04,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.96\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0.09,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 18.6\n },\n {\n \&quot;name\&quot;: \&quot;Folate\&quot;,\n \&quot;amount\&quot;: 1.66,\n \&quot;unit\&quot;: \&quot;µg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9.48\n },\n {\n \&quot;name\&quot;: \&quot;Phosphorus\&quot;,\n \&quot;amount\&quot;: 3.33,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 4.24\n },\n {\n \&quot;name\&quot;: \&quot;Manganese\&quot;,\n \&quot;amount\&quot;: 0.09,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 18.69\n },\n ...\n },\n ...\n ],\n \&quot;caloricBreakdown\&quot;: {\n \&quot;percentProtein\&quot;: 4.72,\n \&quot;percentFat\&quot;: 33.9,\n \&quot;percentCarbs\&quot;: 61.38\n },\n \&quot;weightPerServing\&quot;: {\n \&quot;amount\&quot;: 138,\n \&quot;unit\&quot;: \&quot;g\&quot;\n }\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Analyzed Recipe Instructions\nGet an analyzed breakdown of a recipe\u0027s instructions. Each step is enriched with the ingredients and equipment required.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/analyzedInstructions\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 324694 | The recipe id. |\n| `stepBreakdown` | boolean | true | Whether to break down the recipe steps even more. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/324694/analyzedInstructions\n\n```\n[\n {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;steps\&quot;: [\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404784,\n \&quot;image\&quot;: \&quot;oven.jpg\&quot;,\n \&quot;name\&quot;: \&quot;oven\&quot;,\n \&quot;temperature\&quot;: {\n \&quot;number\&quot;: 200.0,\n \&quot;unit\&quot;: \&quot;Fahrenheit\&quot;\n }\n }\n ],\n \&quot;ingredients\&quot;: [],\n \&quot;number\&quot;: 1,\n \&quot;step\&quot;: \&quot;Preheat the oven to 200 degrees F.\&quot;\n },\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404661,\n \&quot;image\&quot;: \&quot;whisk.png\&quot;,\n \&quot;name\&quot;: \&quot;whisk\&quot;\n },\n {\n \&quot;id\&quot;: 404783,\n \&quot;image\&quot;: \&quot;bowl.jpg\&quot;,\n \&quot;name\&quot;: \&quot;bowl\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 19334,\n \&quot;image\&quot;: \&quot;light-brown-sugar.jpg\&quot;,\n \&quot;name\&quot;: \&quot;light brown sugar\&quot;\n },\n {\n \&quot;id\&quot;: 19335,\n \&quot;image\&quot;: \&quot;sugar-in-bowl.png\&quot;,\n \&quot;name\&quot;: \&quot;granulated sugar\&quot;\n },\n {\n \&quot;id\&quot;: 18371,\n \&quot;image\&quot;: \&quot;white-powder.jpg\&quot;,\n \&quot;name\&quot;: \&quot;baking powder\&quot;\n },\n {\n \&quot;id\&quot;: 18372,\n \&quot;image\&quot;: \&quot;white-powder.jpg\&quot;,\n \&quot;name\&quot;: \&quot;baking soda\&quot;\n },\n {\n \&quot;id\&quot;: 12142,\n \&quot;image\&quot;: \&quot;pecans.jpg\&quot;,\n \&quot;name\&quot;: \&quot;pecans\&quot;\n },\n {\n \&quot;id\&quot;: 20081,\n \&quot;image\&quot;: \&quot;flour.png\&quot;,\n \&quot;name\&quot;: \&quot;all purpose flour\&quot;\n },\n {\n \&quot;id\&quot;: 2047,\n \&quot;image\&quot;: \&quot;salt.jpg\&quot;,\n \&quot;name\&quot;: \&quot;salt\&quot;\n }\n ],\n \&quot;number\&quot;: 2,\n \&quot;step\&quot;: \&quot;Whisk together the flour, pecans, granulated sugar, light brown sugar, baking powder, baking soda, and salt in a medium bowl.\&quot;\n },\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404661,\n \&quot;image\&quot;: \&quot;whisk.png\&quot;,\n \&quot;name\&quot;: \&quot;whisk\&quot;\n },\n {\n \&quot;id\&quot;: 404783,\n \&quot;image\&quot;: \&quot;bowl.jpg\&quot;,\n \&quot;name\&quot;: \&quot;bowl\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 2050,\n \&quot;image\&quot;: \&quot;vanilla-extract.jpg\&quot;,\n \&quot;name\&quot;: \&quot;vanilla extract\&quot;\n },\n {\n \&quot;id\&quot;: 93622,\n \&quot;image\&quot;: \&quot;vanilla.jpg\&quot;,\n \&quot;name\&quot;: \&quot;vanilla bean\&quot;\n },\n {\n \&quot;id\&quot;: 1230,\n \&quot;image\&quot;: \&quot;buttermilk.jpg\&quot;,\n \&quot;name\&quot;: \&quot;buttermilk\&quot;\n },\n {\n \&quot;id\&quot;: 1123,\n \&quot;image\&quot;: \&quot;egg.png\&quot;,\n \&quot;name\&quot;: \&quot;egg\&quot;\n }\n ],\n \&quot;number\&quot;: 3,\n \&quot;step\&quot;: \&quot;Whisk together the eggs, buttermilk, butter and vanilla extract and vanilla bean in a small bowl.\&quot;\n },\n {\n \&quot;equipment\&quot;: [],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 1123,\n \&quot;image\&quot;: \&quot;egg.png\&quot;,\n \&quot;name\&quot;: \&quot;egg\&quot;\n }\n ],\n \&quot;number\&quot;: 4,\n \&quot;step\&quot;: \&quot;Add the egg mixture to the dry mixture and gently mix to combine. Do not overmix.\&quot;\n },\n {\n \&quot;equipment\&quot;: [],\n \&quot;ingredients\&quot;: [],\n \&quot;length\&quot;: {\n \&quot;number\&quot;: 15,\n \&quot;unit\&quot;: \&quot;minutes\&quot;\n },\n \&quot;number\&quot;: 5,\n \&quot;step\&quot;: \&quot;Let the batter sit at room temperature for at least 15 minutes and up to 30 minutes before using.\&quot;\n },\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404779,\n \&quot;image\&quot;: \&quot;griddle.jpg\&quot;,\n \&quot;name\&quot;: \&quot;griddle\&quot;\n },\n {\n \&quot;id\&quot;: 404645,\n \&quot;image\&quot;: \&quot;pan.png\&quot;,\n \&quot;name\&quot;: \&quot;frying pan\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [],\n \&quot;length\&quot;: {\n \&quot;number\&quot;: 3,\n \&quot;unit\&quot;: \&quot;minutes\&quot;\n },\n \&quot;number\&quot;: 6,\n \&quot;step\&quot;: \&quot;Heat a cast iron or nonstick griddle pan over medium heat and brush with melted butter.\n\n#### Parameters\n Once the butter begins to sizzle, use 2 tablespoons of the batter for each pancake and cook until the bubbles appear on the surface and the bottom is golden brown, about 2 minutes, flip over and cook until the bottom is golden brown, 1 to 2 minutes longer.\&quot;\n },\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404784,\n \&quot;image\&quot;: \&quot;oven.jpg\&quot;,\n \&quot;name\&quot;: \&quot;oven\&quot;,\n \&quot;temperature\&quot;: {\n \&quot;number\&quot;: 200.0,\n \&quot;unit\&quot;: \&quot;Fahrenheit\&quot;\n }\n }\n ],\n \&quot;ingredients\&quot;: [],\n \&quot;number\&quot;: 7,\n \&quot;step\&quot;: \&quot;Transfer the pancakes to a platter and keep warm in a 200 degree F oven.\&quot;\n },\n {\n \&quot;equipment\&quot;: [],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 10014037,\n \&quot;image\&quot;: \&quot;bourbon.png\&quot;,\n \&quot;name\&quot;: \&quot;bourbon\&quot;\n }\n ],\n \&quot;number\&quot;: 8,\n \&quot;step\&quot;: \&quot;Serve 6 pancakes per person, top each with some of the bourbon butter.\&quot;\n },\n {\n \&quot;equipment\&quot;: [],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 19336,\n \&quot;image\&quot;: \&quot;powdered-sugar.jpg\&quot;,\n \&quot;name\&quot;: \&quot;powdered sugar\&quot;\n },\n {\n \&quot;id\&quot;: 19911,\n \&quot;image\&quot;: \&quot;maple-syrup.png\&quot;,\n \&quot;name\&quot;: \&quot;maple syrup\&quot;\n }\n ],\n \&quot;number\&quot;: 9,\n \&quot;step\&quot;: \&quot;Drizzle with warm maple syrup and dust with confectioners\u0027 sugar.\&quot;\n },\n {\n \&quot;equipment\&quot;: [],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 12142,\n \&quot;image\&quot;: \&quot;pecans.jpg\&quot;,\n \&quot;name\&quot;: \&quot;pecans\&quot;\n }\n ],\n \&quot;number\&quot;: 10,\n \&quot;step\&quot;: \&quot;Garnish with fresh mint sprigs and more toasted pecans, if desired.\&quot;\n }\n ]\n },\n {\n \&quot;name\&quot;: \&quot;Bourbon Molasses Butter\&quot;,\n \&quot;steps\&quot;: [\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404669,\n \&quot;image\&quot;: \&quot;sauce-pan.jpg\&quot;,\n \&quot;name\&quot;: \&quot;sauce pan\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 10014037,\n \&quot;image\&quot;: \&quot;bourbon.png\&quot;,\n \&quot;name\&quot;: \&quot;bourbon\&quot;\n },\n {\n \&quot;id\&quot;: 19335,\n \&quot;image\&quot;: \&quot;sugar-in-bowl.png\&quot;,\n \&quot;name\&quot;: \&quot;sugar\&quot;\n }\n ],\n \&quot;number\&quot;: 1,\n \&quot;step\&quot;: \&quot;Combine the bourbon and sugar in a small saucepan and cook over high heat until reduced to 3 tablespoons, remove and let cool.\&quot;\n },\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404771,\n \&quot;image\&quot;: \&quot;food-processor.png\&quot;,\n \&quot;name\&quot;: \&quot;food processor\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 19304,\n \&quot;image\&quot;: \&quot;molasses.jpg\&quot;,\n \&quot;name\&quot;: \&quot;molasses\&quot;\n },\n {\n \&quot;id\&quot;: 10014037,\n \&quot;image\&quot;: \&quot;bourbon.png\&quot;,\n \&quot;name\&quot;: \&quot;bourbon\&quot;\n },\n {\n \&quot;id\&quot;: 2047,\n \&quot;image\&quot;: \&quot;salt.jpg\&quot;,\n \&quot;name\&quot;: \&quot;salt\&quot;\n }\n ],\n \&quot;number\&quot;: 2,\n \&quot;step\&quot;: \&quot;Put the butter, molasses, salt and cooled bourbon mixture in a food processor and process until smooth.\&quot;\n },\n {\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404730,\n \&quot;image\&quot;: \&quot;plastic-wrap.jpg\&quot;,\n \&quot;name\&quot;: \&quot;plastic wrap\&quot;\n },\n {\n \&quot;id\&quot;: 404783,\n \&quot;image\&quot;: \&quot;bowl.jpg\&quot;,\n \&quot;name\&quot;: \&quot;bowl\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [],\n \&quot;number\&quot;: 3,\n \&quot;step\&quot;: \&quot;Scrape into a bowl, cover with plastic wrap and refrigerate for at least 1 hour to allow the flavors to meld.\&quot;\n },\n {\n \&quot;equipment\&quot;: [],\n \&quot;ingredients\&quot;: [],\n \&quot;length\&quot;: {\n \&quot;number\&quot;: 30,\n \&quot;unit\&quot;: \&quot;minutes\&quot;\n },\n \&quot;number\&quot;: 4,\n \&quot;step\&quot;: \&quot;Remove from the refrigerator about 30 minutes before using to soften.\&quot;\n }\n ]\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Extract Recipe from Website\nThis endpoint lets you extract recipe data such as title, ingredients, and instructions from any properly formatted Website.\n\nGET\n\nhttps://api.spoonacular.com/recipes/extract\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`url`** | string | https://foodista.com/recipe/ZHK4KPB6/chocolate-crinkle-cookies | The URL of the recipe page. |\n| `forceExtraction` | boolean | true | If true, the extraction will be triggered whether we already know the recipe or not. Use this only if information is missing as this operation is slower. |\n| `analyze` | boolean | false | If true, the recipe will be analyzed and classified resolving in more data such as cuisines, dish types, and more. |\n| `includeNutrition` | boolean | false | Whether nutrition data should be added to correctly parsed ingredients. |\n| `includeTaste` | boolean | false | Whether taste data should be added to correctly parsed ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/extract?url\u003dhttps://foodista.com/recipe/ZHK4KPB6/chocolate-crinkle-cookies\n\n```\n{/* recipe data as in Get Recipe Information endpoint */}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n1 points\n\nif `analyze` is set to true.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Ingredients by ID Widget\nVisualize a recipe\u0027s ingredient list.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/ingredientWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1082038 | The recipe id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `measure` | string | us | Whether the the measures should be \u0027us\u0027 or \u0027metric\u0027. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1082038/ingredientWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Ingredients by ID Image\nVisualize a recipe\u0027s ingredient list.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/ingredientWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1082038 | The recipe id. |\n| `measure` | string | metric | Whether the the measures should be \u0027us\u0027 or \u0027metric\u0027. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1082038/ingredientWidget\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Taste by ID Widget\nGet a recipe\u0027s taste. The tastes supported are sweet, salty, sour, bitter, savory, and fatty.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/tasteWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 69095 | The recipe id. |\n| `normalize` | boolean | false | Normalize to the strongest taste. |\n| `rgb` | string | 75,192,192 | Red, green, blue values for the chart color. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/69095/tasteWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Taste by ID Image\nGet a recipe\u0027s taste as an image. The tastes supported are sweet, salty, sour, bitter, savory, and fatty.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/tasteWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 69095 | The recipe id. |\n| `normalize` | boolean | false | Normalize to the strongest taste. |\n| `rgb` | string | 75,192,192 | Red, green, blue values for the chart color. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/69095/tasteWidget.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Equipment by ID Widget\nVisualize a recipe\u0027s equipment list.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/equipmentWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 44860 | The recipe id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/44860/equipmentWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Equipment by ID Image\nVisualize a recipe\u0027s equipment list as an image.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/equipmentWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 44860 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/44860/equipmentWidget.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Price Breakdown by ID Widget\nVisualize a recipe\u0027s price breakdown.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/priceBreakdownWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1082038 | The recipe id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `mode` | number | 1 | The mode in which the widget should be delivered. 1 \u003d separate views (compact), 2 \u003d all in one view (full). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1082038/priceBreakdownWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Price Breakdown by ID Image\nVisualize a recipe\u0027s price breakdown.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/priceBreakdownWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1082038 | The recipe id. |\n| `mode` | number | 1 | The mode in which the widget should be delivered. 1 \u003d separate views (compact), 2 \u003d all in one view (full). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1082038/priceBreakdownWidget.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Taste Widget\nVisualize a recipe\u0027s taste information as HTML including CSS. You can play around with that endpoint!\n\nFull example code of how to work with widgets can be found in our [spoonacular-widget GitHub](https://github.com/ddsky/spoonacular-widgets).\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeTaste\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientList`** | string | 1 lemon | The ingredient list of the recipe, one ingredient per line. |\n| `normalize` | boolean | false | Normalize to the strongest taste. |\n| `rgb` | string | 75,192,192 | Red, green, blue values for the chart color. |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeTaste\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Nutrition Widget\nVisualize a recipe\u0027s nutritional information as HTML including CSS. You can play around with that endpoint!\n\nFull example code of how to work with widgets can be found in our [spoonacular-widget GitHub](https://github.com/ddsky/spoonacular-widgets).\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeNutrition\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientList`** | string | 3 oz flour | The ingredient list of the recipe, one ingredient per line. |\n| **`servings`** | number | 2 | The number of servings. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showBacklink` | boolean | true | Whether to show a backlink to spoonacular. If set false, this call counts against your quota. |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeNutrition\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nunless \&quot;showBacklink\&quot; is true, then 0 points. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Price Breakdown Widget\nVisualize the price breakdown of a recipe. You can play around with that endpoint!\n\nFull example code of how to work with widgets can be found in our [spoonacular-widget GitHub](https://github.com/ddsky/spoonacular-widgets).\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizePriceEstimator\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientList`** | string | 3 oz flour | The ingredient list of the recipe, one ingredient per line. |\n| **`servings`** | number | 2 | The number of servings. |\n| `mode` | number | 1 | The mode in which the widget should be delivered. 1 \u003d separate views (compact), 2 \u003d all in one view (full). |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showBacklink` | boolean | true | Whether to show a backlink to spoonacular. If set false, this call counts against your quota. |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizePriceEstimator\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example::\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nunless \&quot;showBacklink\&quot; is true, then 0 points. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Equipment Widget\nVisualize the equipment used to make a recipe. You can play around with that endpoint!\n\nFull example code of how to work with widgets can be found in our [spoonacular-widget GitHub](https://github.com/ddsky/spoonacular-widgets).\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeEquipment\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`instructions`** | string | Preheat oven. Cut cucumber with a knife and put in a blender. | The recipe\u0027s instructions. |\n| `view` | string | grid | How to visualize the equipment, either \&quot;grid\&quot; or \&quot;list\&quot;. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showBacklink` | boolean | true | Whether to show a backlink to spoonacular. If set false, this call counts against your quota. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeEquipment\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nunless \&quot;showBacklink\&quot; is true, then 0 points. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Analyze Recipe\nThis endpoint allows you to send raw recipe information, such as title, servings, and ingredients, to then see what we compute (badges, diets, nutrition, and more). This is useful if you have your own recipe data and want to enrich it with our semantic analysis.\n\nPOST\n\nhttps://api.spoonacular.com/recipes/analyze\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n| `includeNutrition` | boolean | false | Whether nutrition data should be added to correctly parsed ingredients. |\n| `includeTaste` | boolean | false | Whether taste data should be added to correctly parsed ingredients. |\n\nExample Request and Body\n\nPOST\n\nhttps://api.spoonacular.com/recipes/analyze\n\n```\n{\n \&quot;title\&quot;: \&quot;Spaghetti Carbonara\&quot;,\n \&quot;servings\&quot;: 2,\n \&quot;ingredients\&quot;: [\n \&quot;1 lb spaghetti\&quot;,\n \&quot;3.5 oz pancetta\&quot;,\n \&quot;2 Tbsps olive oil\&quot;,\n \&quot;1 egg\&quot;,\n \&quot;0.5 cup parmesan cheese\&quot;\n ],\n \&quot;instructions\&quot;: \&quot;Bring a large pot of water to a boil and season generously with salt. Add the pasta to the water once boiling and cook until al dente. Reserve 2 cups of cooking water and drain the pasta. \&quot;\n}\n```\n\nExample Response\n\n```\n/* recipe data as in Get Recipe Information endpoint */\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. If `includeNutrition` is set to true\n\n0.5 points\n\nwill be added. If `includeTaste` is set to true\n\n0.5 points\n\nwill be added. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Summarize Recipe\nAutomatically generate a short description that summarizes key information about the recipe.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/summary\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 4632 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/4632/summary\n\n```\n{\n \&quot;id\&quot;: 4632,\n \&quot;summary\&quot;: \&quot;The recipe Soy-and-Ginger-Glazed Salmon with Udon Noodles can be made in approximately 1 hour and 35 minutes. One portion of this dish contains about 48g of protein, 17g of fat, and a total of 552 calories. This recipe serves 4. For $5.91 per serving, this recipe covers 47% of your daily requirements of vitamins and minerals. It works well as a main course. 1 person has tried and liked this recipe. It is brought to you by Food and Wine. If you have fresh ginger, udon noodles, salmon fillets, and a few other ingredients on hand, you can make it. It is a good option if you\u0027re following a dairy free and pescatarian diet. All things considered, we decided this recipe deserves a spoonacular score of 92%. This score is great. If you like this recipe, take a look at these similar recipes: Salmon With Soy-ginger Noodles, Ginger-Soy Salmon With Soba Noodles, and Soy \u0026 ginger salmon with soba noodles.\&quot;,\n \&quot;title\&quot;: \&quot;Soy-and-Ginger-Glazed Salmon with Udon Noodles\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Create Recipe Card\nGenerate a recipe card for a recipe.\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeRecipe\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: multipart/form-data`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`title`** | string | My recipe | The title of the recipe. |\n| **`ingredients`** | string | 2 cups of green beans | The ingredient list of the recipe, one ingredient per line (separate lines with \\\\n). |\n| **`instructions`** | string | cook the beans | The instructions to make the recipe. One step per line (separate lines with \\\\n). |\n| **`readyInMinutes`** | number | 60 | The number of minutes it takes to get the recipe on the table. |\n| **`servings`** | number | 2 | The number of servings the recipe makes. |\n| **`mask`** | string | ellipseMask | The mask to put over the recipe image (\&quot;ellipseMask\&quot;, \&quot;diamondMask\&quot;, \&quot;starMask\&quot;, \&quot;heartMask\&quot;, \&quot;potMask\&quot;, \&quot;fishMask\&quot;). |\n| **`backgroundImage`** | string | background1 | The background image (\&quot;none\&quot;,\&quot;background1\&quot;, or \&quot;background2\&quot;). |\n| `image` | binary | The binary image of the recipe as jpg. |\n| `imageUrl` | string | https://recipe.com/image.jpg | If you do not sent a binary image you can also pass the image URL. |\n| `author` | string | Anna Banana | The author of the recipe. |\n| `backgroundColor` | string | #ffffff | The background color for the recipe card as a hex-string. |\n| `fontColor` | string | #333333 | The font color for the recipe card as a hex-string. |\n| `source` | string | spoonacular.com | The source of the recipe. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeRecipe\n\n```\n{\n \&quot;url\&quot;: \&quot;https://spoonacular.com/url-to-generated-recipe-card.jpg\&quot;\n}\n```\n\nThe API response will contain a link to the generated image. It could look like this for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Create Recipe Card\nGenerate a recipe card for a recipe.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/card\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 4632 | The recipe id. |\n| `mask` | string | ellipseMask | The mask to put over the recipe image (\&quot;ellipseMask\&quot;, \&quot;diamondMask\&quot;, \&quot;starMask\&quot;, \&quot;heartMask\&quot;, \&quot;potMask\&quot;, \&quot;fishMask\&quot;). |\n| `backgroundImage` | string | background1 | The background image (\&quot;none\&quot;,\&quot;background1\&quot;, or \&quot;background2\&quot;). |\n| `backgroundColor` | string | ffffff | The background color for the recipe card as a hex-string. |\n| `fontColor` | string | 333333 | The font color for the recipe card as a hex-string. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/4632/card\n\n```\n{\n \&quot;url\&quot;: \&quot;https://spoonacular.com/url-to-generated-recipe-card.jpg\&quot;,\n}\n```\n\nThe API response will contain a link to the generated image. It could look like this for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Analyze Recipe Instructions\nThis endpoint allows you to break down instructions into atomic steps. Furthermore, each step will contain the ingredients and equipment required. Additionally, all ingredients and equipment from the recipe\u0027s instructions will be extracted independently of the step they\u0027re used in.\n\nPOST\n\nhttps://api.spoonacular.com/recipes/analyzeInstructions\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`instructions`** | string | Put the garlic in a pan and then add the onion. Add some salt and oregano. | The instructions to be analyzed. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/analyzeInstructions\n\n```\n{\n \&quot;parsedInstructions\&quot;: [\n {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;steps\&quot;: [\n {\n \&quot;number\&quot;: 1,\n \&quot;step\&quot;: \&quot;Put the garlic in a pan and then add the onion.\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 11215,\n \&quot;name\&quot;: \&quot;garlic\&quot;,\n \&quot;localizedName\&quot;: \&quot;garlic\&quot;,\n \&quot;image\&quot;: \&quot;garlic.png\&quot;\n },\n {\n \&quot;id\&quot;: 11282,\n \&quot;name\&quot;: \&quot;onion\&quot;,\n \&quot;localizedName\&quot;: \&quot;onion\&quot;,\n \&quot;image\&quot;: \&quot;brown-onion.png\&quot;\n }\n ],\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404645,\n \&quot;name\&quot;: \&quot;frying pan\&quot;,\n \&quot;localizedName\&quot;: \&quot;frying pan\&quot;,\n \&quot;image\&quot;: \&quot;pan.png\&quot;\n }\n ]\n },\n {\n \&quot;number\&quot;: 2,\n \&quot;step\&quot;: \&quot;Add some salt and oregano.\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 2027,\n \&quot;name\&quot;: \&quot;oregano\&quot;,\n \&quot;localizedName\&quot;: \&quot;oregano\&quot;,\n \&quot;image\&quot;: \&quot;oregano.jpg\&quot;\n },\n {\n \&quot;id\&quot;: 2047,\n \&quot;name\&quot;: \&quot;salt\&quot;,\n \&quot;localizedName\&quot;: \&quot;salt\&quot;,\n \&quot;image\&quot;: \&quot;salt.jpg\&quot;\n }\n ],\n \&quot;equipment\&quot;: []\n }\n ]\n }\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 2027,\n \&quot;name\&quot;: \&quot;oregano\&quot;\n },\n {\n \&quot;id\&quot;: 11215,\n \&quot;name\&quot;: \&quot;garlic\&quot;\n },\n {\n \&quot;id\&quot;: 11282,\n \&quot;name\&quot;: \&quot;onion\&quot;\n },\n {\n \&quot;id\&quot;: 2047,\n \&quot;name\&quot;: \&quot;salt\&quot;\n }\n ],\n \&quot;equipment\&quot;: [\n {\n \&quot;id\&quot;: 404645,\n \&quot;name\&quot;: \&quot;frying pan\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Classify Cuisine\nClassify the recipe\u0027s cuisine.\n\nPOST\n\nhttps://api.spoonacular.com/recipes/cuisine\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`title`** | string | Pork roast with green beans | The title of the recipe. |\n| **`ingredientList`** | string | 3 oz pork shoulder | The ingredient list of the recipe, one ingredient per line (separate lines with \\\\n). |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/cuisine\n\n```\n{\n \&quot;cuisine\&quot;: \&quot;Mediterranean\&quot;,\n \&quot;cuisines\&quot;: [\n \&quot;Mediterranean\&quot;,\n \&quot;European\&quot;,\n \&quot;Italian\&quot;\n ],\n \&quot;confidence\&quot;: 0.0\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Analyze a Recipe Search Query\nParse a recipe search query to find out its intention.\n\nGET\n\nhttps://api.spoonacular.com/recipes/queries/analyze\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`q`** | string | salmon with fusilli and no nuts | The recipe search query. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/queries/analyze?q\u003dsalmon+with+fusilli+and+no+nuts\n\n```\n{\n \&quot;dishes\&quot;: [\n {\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/salmon.png\&quot;,\n \&quot;name\&quot;: \&quot;salmon\&quot;\n }\n ],\n \&quot;ingredients\&quot;: [\n {\n \&quot;image\&quot;: \&quot;fusilli.jpg\&quot;,\n \&quot;include\&quot;: true,\n \&quot;name\&quot;: \&quot;fusilli\&quot;\n },\n {\n \&quot;image\&quot;: \&quot;nuts-mixed.jpg\&quot;,\n \&quot;include\&quot;: false,\n \&quot;name\&quot;: \&quot;nuts mixed\&quot;\n }\n ],\n \&quot;cuisines\&quot;: [],\n \&quot;modifiers\&quot;: []\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Convert Amounts\nConvert amounts like \&quot;2 cups of flour to grams\&quot;.\n\nGET\n\nhttps://api.spoonacular.com/recipes/convert\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientName`** | string | flour | The ingredient which you want to convert. |\n| **`sourceAmount`** | number | 2.5 | The amount from which you want to convert, e.g. the 2.5 in \&quot;2.5 cups of flour to grams\&quot;. |\n| **`sourceUnit`** | string | cups | The unit from which you want to convert, e.g. the grams in \&quot;2.5 cups of flour to grams\&quot;. You can also use \&quot;piece\&quot;, e.g. \&quot;3.4 oz tomatoes to piece\&quot; |\n| **`targetUnit`** | string | grams | The unit to which you want to convert, e.g. the grams in \&quot;2.5 cups of flour to grams\&quot;. You can also use \&quot;piece\&quot;, e.g. \&quot;3.4 oz tomatoes to piece\&quot; |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/convert?ingredientName\u003dflour\u0026sourceAmount\u003d2.5\u0026sourceUnit\u003dcups\u0026targetUnit\u003dgrams\n\n```\n{\n \&quot;sourceAmount\&quot;: 2.5,\n \&quot;sourceUnit\&quot;: \&quot;cups\&quot;,\n \&quot;targetAmount\&quot;: 312.5,\n \&quot;targetUnit\&quot;: \&quot;grams\&quot;,\n \&quot;answer\&quot;: \&quot;2.5 cups flour translates to 312.5 grams.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Parse Ingredients\nExtract an ingredient from plain text.\n\nPOST\n\nhttps://api.spoonacular.com/recipes/parseIngredients\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientList`** | string | 1 cup green tea | The ingredient list of the recipe, one ingredient per line. |\n| **`servings`** | number | 1 | The number of servings that you can make from the ingredients. |\n| `includeNutrition` | boolean | true | Whether nutrition data should be added to correctly parsed ingredients. |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/parseIngredients\n\n```\n[\n {\n \&quot;id\&quot;: 10014355,\n \&quot;original\&quot;: \&quot;1 cup green tea\&quot;,\n \&quot;originalName\&quot;: \&quot;green tea\&quot;,\n \&quot;name\&quot;: \&quot;tea\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;cup\&quot;,\n \&quot;unitShort\&quot;: \&quot;cup\&quot;,\n \&quot;unitLong\&quot;: \&quot;cup\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;g\&quot;,\n \&quot;oz\&quot;,\n \&quot;fluid ounce\&quot;,\n \&quot;cup\&quot;\n ],\n \&quot;estimatedCost\&quot;: {\n \&quot;value\&quot;: 1786.86,\n \&quot;unit\&quot;: \&quot;US Cents\&quot;\n },\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;aisle\&quot;: \&quot;Tea and Coffee\&quot;,\n \&quot;image\&quot;: \&quot;green-tea-leaves.jpg\&quot;,\n \&quot;meta\&quot;: [\n \&quot;green\&quot;\n ],\n \&quot;nutrition\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 2.36,\n \&quot;unit\&quot;: \&quot;kcal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.12\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.0\n },\n {\n \&quot;name\&quot;: \&quot;Saturated Fat\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.03\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0.71,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.24\n },\n {\n \&quot;name\&quot;: \&quot;Net Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0.71,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.26\n },\n {\n \&quot;name\&quot;: \&quot;Sugar\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.0\n },\n {\n \&quot;name\&quot;: \&quot;Cholesterol\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.0\n },\n {\n \&quot;name\&quot;: \&quot;Sodium\&quot;,\n \&quot;amount\&quot;: 7.08,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.31\n },\n {\n \&quot;name\&quot;: \&quot;Caffeine\&quot;,\n \&quot;amount\&quot;: 47.2,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 15.73\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.0\n },\n {\n \&quot;name\&quot;: \&quot;Manganese\&quot;,\n \&quot;amount\&quot;: 0.52,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 25.84\n },\n {\n \&quot;name\&quot;: \&quot;Folate\&quot;,\n \&quot;amount\&quot;: 11.8,\n \&quot;unit\&quot;: \&quot;Âµg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 2.95\n },\n {\n \&quot;name\&quot;: \&quot;Potassium\&quot;,\n \&quot;amount\&quot;: 87.32,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 2.49\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin B2\&quot;,\n \&quot;amount\&quot;: 0.03,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.94\n },\n {\n \&quot;name\&quot;: \&quot;Magnesium\&quot;,\n \&quot;amount\&quot;: 7.08,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.77\n },\n {\n \&quot;name\&quot;: \&quot;Copper\&quot;,\n \&quot;amount\&quot;: 0.02,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.18\n }\n ],\n \&quot;properties\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Glycemic Index\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Glycemic Load\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n }\n ],\n \&quot;flavonoids\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Cyanidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Petunidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Delphinidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Malvidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Pelargonidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Peonidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Catechin\&quot;,\n \&quot;amount\&quot;: 3.56,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Epigallocatechin\&quot;,\n \&quot;amount\&quot;: 19.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Epicatechin\&quot;,\n \&quot;amount\&quot;: 5.03,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Epicatechin 3-gallate\&quot;,\n \&quot;amount\&quot;: 13.83,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Epigallocatechin 3-gallate\&quot;,\n \&quot;amount\&quot;: 22.09,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Theaflavin\&quot;,\n \&quot;amount\&quot;: 3.73,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Thearubigins\&quot;,\n \&quot;amount\&quot;: 191.87,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Eriodictyol\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Hesperetin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Naringenin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Apigenin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Luteolin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Isorhamnetin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Kaempferol\&quot;,\n \&quot;amount\&quot;: 3.33,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Myricetin\&quot;,\n \&quot;amount\&quot;: 1.06,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Quercetin\&quot;,\n \&quot;amount\&quot;: 5.17,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Theaflavin-3,3\u0027-digallate\&quot;,\n \&quot;amount\&quot;: 4.13,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n \n\n#### Parameters\n},\n {\n \&quot;name\&quot;: \&quot;Theaflavin-3\u0027-gallate\&quot;,\n \&quot;amount\&quot;: 3.56,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Theaflavin-3-gallate\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Gallocatechin\&quot;,\n \&quot;amount\&quot;: 2.95,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n }\n ],\n \&quot;caloricBreakdown\&quot;: {\n \&quot;percentProtein\&quot;: 0.0,\n \&quot;percentFat\&quot;: 0.0,\n \&quot;percentCarbs\&quot;: 100.0\n },\n \&quot;weightPerServing\&quot;: {\n \&quot;amount\&quot;: 236,\n \&quot;unit\&quot;: \&quot;g\&quot;\n }\n }\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nper parsed ingredient. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Compute Glycemic Load\nRetrieve the glycemic index for a list of ingredients and compute the individual and total glycemic load.\n\nPOST\n\nhttps://api.spoonacular.com/food/ingredients/glycemicLoad\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/json`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`(post body)`** | string | { \&quot;ingredients\&quot;:\\[ \&quot;1 kiwi\&quot;, \&quot;2 cups rice\&quot;, \&quot;2 glasses of water\&quot; \\]} | A json body. |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request\n\nPOST\n\nhttps://api.spoonacular.com/food/ingredients/glycemicLoad\n\n```\n{\n \&quot;ingredients\&quot;:[\n \&quot;1 kiwi\&quot;,\n \&quot;2 cups rice\&quot;,\n \&quot;2 glasses of water\&quot;\n ]\n}\n```\n\nExample Response\n\n```\n{\n \&quot;totalGlycemicLoad\&quot;: 183.64,\n \&quot;ingredients\&quot;: [\n {\n \&quot;id\&quot;: 9148,\n \&quot;original\&quot;: \&quot;1 kiwi\&quot;,\n \&quot;glycemicIndex\&quot;: 52.67,\n \&quot;glycemicLoad\&quot;: 5.59\n },\n {\n \&quot;id\&quot;: 20444,\n \&quot;original\&quot;: \&quot;2 cups rice\&quot;,\n \&quot;glycemicIndex\&quot;: 61.19,\n \&quot;glycemicLoad\&quot;: 178.05\n },\n {\n \&quot;id\&quot;: 14412,\n \&quot;original\&quot;: \&quot;2 glasses of water\&quot;,\n \&quot;glycemicIndex\&quot;: 0.0,\n \&quot;glycemicLoad\&quot;: 0.0\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.1 points\n\nper ingredient.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Autocomplete Ingredient Search\nAutocomplete the entry of an ingredient.\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/autocomplete\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | appl | The partial or full ingredient name. |\n| `number` | number | 10 | The number of results to return (between 1 and 100). |\n| `language` | text | en | Language code, either \&quot;en\&quot; or \&quot;de\&quot;. |\n| `metaInformation` | boolean | false | Whether to return more meta information about the ingredients. |\n| `intolerances` | string | egg | A comma-separated list of intolerances. All recipes returned must not contain ingredients that are not suitable for people with the intolerances entered. See a full [list of supported intolerances](https://spoonacular.com/food-api/docs#Intolerances). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/autocomplete?query\u003dappl\u0026number\u003d5\n\n```\n[\n {\n \&quot;name\&quot;: \&quot;apple\&quot;,\n \&quot;image\&quot;: \&quot;apple.jpg\&quot;,\n \&quot;id\&quot;: 9003,\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;small\&quot;,\n \&quot;large\&quot;,\n \&quot;piece\&quot;,\n \&quot;slice\&quot;,\n \&quot;g\&quot;,\n \&quot;extra small\&quot;,\n \&quot;medium\&quot;,\n \&quot;oz\&quot;,\n \&quot;cup slice\&quot;,\n \&quot;cup\&quot;,\n \&quot;serving\&quot;\n ]\n },\n {\n \&quot;name\&quot;: \&quot;applesauce\&quot;,\n \&quot;image\&quot;: \&quot;applesauce.png\&quot;,\n \&quot;id\&quot;: 9019,\n \&quot;aisle\&quot;: \&quot;Canned and Jarred\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;g\&quot;,\n \&quot;oz\&quot;,\n \&quot;cup\&quot;,\n \&quot;serving\&quot;,\n \&quot;tablespoon\&quot;\n ]\n },\n {\n \&quot;name\&quot;: \&quot;apple juice\&quot;,\n \&quot;image\&quot;: \&quot;apple-juice.jpg\&quot;,\n \&quot;id\&quot;: 9016,\n \&quot;aisle\&quot;: \&quot;Beverages\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;g\&quot;,\n \&quot;drink box\&quot;,\n \&quot;fl oz\&quot;,\n \&quot;oz\&quot;,\n \&quot;teaspoon\&quot;,\n \&quot;cup\&quot;,\n \&quot;serving\&quot;,\n \&quot;tablespoon\&quot;\n ]\n },\n {\n \&quot;name\&quot;: \&quot;apple cider\&quot;,\n \&quot;image\&quot;: \&quot;apple-cider.jpg\&quot;,\n \&quot;id\&quot;: 1009016,\n \&quot;aisle\&quot;: \&quot;Beverages\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;g\&quot;,\n \&quot;drink box\&quot;,\n \&quot;fl oz\&quot;,\n \&quot;oz\&quot;,\n \&quot;teaspoon\&quot;,\n \&quot;bottle NFS\&quot;,\n \&quot;cup\&quot;,\n \&quot;serving\&quot;,\n \&quot;tablespoon\&quot;\n ]\n },\n {\n \&quot;name\&quot;: \&quot;apple jelly\&quot;,\n \&quot;image\&quot;: \&quot;apple-jelly.jpg\&quot;,\n \&quot;id\&quot;: 10019297,\n \&quot;aisle\&quot;: \&quot;Nut butters, Jams, and Honey\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;g\&quot;,\n \&quot;oz\&quot;,\n \&quot;packet\&quot;,\n \&quot;teaspoon\&quot;,\n \&quot;cup\&quot;,\n \&quot;serving\&quot;,\n \&quot;tablespoon\&quot;\n ]\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\nand\n\n0.01 points\n\nif `metaInformation` is set to true.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Ingredient Search\nSearch for simple whole foods (e.g. fruits, vegetables, nuts, grains, meat, fish, dairy etc.).\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | apple | The partial or full ingredient name. |\n| `addChildren` | boolean | true | Whether to add children of found foods. |\n| `minProteinPercent` | number | 10 | The minimum percentage of protein the food must have (between 0 and 100). |\n| `maxProteinPercent` | number | 90 | The maximum percentage of protein the food can have (between 0 and 100). |\n| `minFatPercent` | number | 10 | The minimum percentage of fat the food must have (between 0 and 100). |\n| `maxFatPercent` | number | 90 | The maximum percentage of fat the food can have (between 0 and 100). |\n| `minCarbsPercent` | number | 10 | The minimum percentage of carbs the food must have (between 0 and 100). |\n| `maxCarbsPercent` | number | 90 | The maximum percentage of carbs the food can have (between 0 and 100). |\n| `metaInformation` | boolean | false | Whether to return more meta information about the ingredients. |\n| `intolerances` | string | egg | A comma-separated list of intolerances. All recipes returned must not contain ingredients that are not suitable for people with the intolerances entered. See a full [list of supported intolerances](https://spoonacular.com/food-api/docs#Intolerances). |\n| `sort` | string | calories | The strategy to sort ingredients by. You can sort by any nutrient listed [here](https://spoonacular.com/food-api/docs#Recipe-Sorting-Options). |\n| `sortDirection` | string | asc | The direction in which to sort. Must be either \u0027asc\u0027 (ascending) or \u0027desc\u0027 (descending). |\n| `language` | text | en | Language code, either \&quot;en\&quot; or \&quot;de\&quot;. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 990). |\n| `number` | number | 10 | The number of expected results (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/search?query\u003dbanana\u0026number\u003d2\u0026sort\u003dcalories\u0026sortDirection\u003ddesc\n\n```\n{\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 19400,\n \&quot;name\&quot;: \&quot;banana chips\&quot;,\n \&quot;image\&quot;: \&quot;banana-chips.jpg\&quot;\n },\n {\n \&quot;id\&quot;: 93779,\n \&quot;name\&quot;: \&quot;banana liqueur\&quot;,\n \&quot;image\&quot;: \&quot;limoncello.jpg\&quot;\n }\n ],\n \&quot;offset\&quot;: 0,\n \&quot;number\&quot;: 2,\n \&quot;totalResults\&quot;: 13\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper result if `metaInformation` is set to true.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Ingredient Substitutes\nSearch for substitutes for a given ingredient.\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/substitutes\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientName`** | string | butter | The name of the ingredient you want to replace. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/substitutes?ingredientName\u003dbutter\n\n```\n{\n \&quot;ingredient\&quot;: \&quot;butter\&quot;,\n \&quot;substitutes\&quot;: [\n \&quot;1 cup \u003d 7/8 cup shortening and 1/2 tsp salt\&quot;,\n \&quot;1 cup \u003d 7/8 cup vegetable oil + 1/2 tsp salt\&quot;,\n \&quot;1/2 cup \u003d 1/4 cup buttermilk + 1/4 cup unsweetened applesauce\&quot;,\n \&quot;1 cup \u003d 1 cup margarine\&quot;\n ],\n \&quot;message\&quot;: \&quot;Found 4 substitutes for the ingredient.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Ingredient Substitutes by ID\nSearch for substitutes for a given ingredient.\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/{id}/substitutes\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1001 | The id of the ingredient you want substitutes for. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/1001/substitutes\n\n```\n{\n \&quot;ingredient\&quot;: \&quot;butter\&quot;,\n \&quot;substitutes\&quot;: [\n \&quot;1 cup \u003d 7/8 cup shortening and 1/2 tsp salt\&quot;,\n \&quot;1 cup \u003d 7/8 cup vegetable oil + 1/2 tsp salt\&quot;,\n \&quot;1/2 cup \u003d 1/4 cup buttermilk + 1/4 cup unsweetened applesauce\&quot;,\n \&quot;1 cup \u003d 1 cup margarine\&quot;\n ],\n \&quot;message\&quot;: \&quot;Found 4 substitutes for the ingredient.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Compute Ingredient Amount\nCompute the amount you need of a certain ingredient for a certain nutritional goal. For example, how much pineapple do you have to eat to get 10 grams of protein?\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/{id}/amount\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 9266 | The id of the ingredient you want the amount for. |\n| **`nutrient`** | string | protein | The target nutrient. See a [list of supported nutrients](https://spoonacular.com/food-api/docs#Nutrition). |\n| **`target`** | number | 2 | The target number of the given nutrient. |\n| `unit` | string | oz | The target unit. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/9266/amount?nutrient\u003dprotein\u0026target\u003d10\u0026unit\u003doz\n\n```\n{\n \&quot;amount\&quot;: 65.32,\n \&quot;unit\&quot;: \&quot;oz\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Ingredients Widget\nVisualize ingredients of a recipe. You can play around with that endpoint!\n\nFull example code of how to work with widgets can be found in our [spoonacular-widget GitHub](https://github.com/ddsky/spoonacular-widgets).\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeIngredients\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`ingredientList`** | string | 3 oz flour | The ingredient list of the recipe, one ingredient per line. |\n| **`servings`** | number | 2 | The number of servings. |\n| `measure` | string | metric | The original system of measurement, either \&quot;metric\&quot; or \&quot;us\&quot;. |\n| `view` | string | grid | How to visualize the ingredients, either \&quot;grid\&quot; or \&quot;list\&quot;. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showBacklink` | boolean | true | Whether to show a backlink to spoonacular. If set false, this call counts against your quota. |\n| `language` | string | en | The input language, either \&quot;en\&quot; or \&quot;de\&quot;. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/recipes/visualizeIngredients\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nunless \&quot;showBacklink\&quot; is true, then 0 points. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Product Information\nUse a product id to get full information about a product, such as ingredients, nutrition, etc. The nutritional information is per serving.\n\nGET\n\nhttps://api.spoonacular.com/food/products/{id}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 22347 | The id of the packaged food. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/22347\n\n```\n{\n \&quot;id\&quot;: 22347,\n \&quot;title\&quot;: \&quot;SNICKERS Minis Size Chocolate Candy Bars Variety Mix 10.5-oz. Bag\&quot;,\n \&quot;breadcrumbs\&quot;: [\n \&quot;bars\&quot;\n ],\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;badges\&quot;: [\n \&quot;msg_free\&quot;,\n \&quot;no_artificial_colors\&quot;,\n \&quot;no_artificial_flavors\&quot;,\n \&quot;no_artificial_ingredients\&quot;,\n \&quot;gluten_free\&quot;\n ],\n \&quot;importantBadges\&quot;: [\n \&quot;no_artificial_flavors\&quot;,\n \&quot;no_artificial_colors\&quot;,\n \&quot;no_artificial_ingredients\&quot;,\n \&quot;gluten_free\&quot;,\n \&quot;msg_free\&quot;\n ],\n \&quot;ingredientCount\&quot;: 32,\n \&quot;generatedText\&quot;: null,\n \&quot;ingredientList\&quot;: \&quot;Snickers Brand Almond Bar: Milk Chocolate (Sugar, Cocoa Butter, Chocolate, Skim Milk, Lactose, Milkfat, Soy Lecithin, Artificial Flavor), Corn Syrup, Almonds, Sugar, Milkfat, Skim Milk, Less than 2% - Lactose, Salt, Hydrogenated Palm Kernel Oil and/or Palm Oil, Egg Whites, Chocolate, Artificial Flavor. Snickers Brand: Milk Chocolate (Sugar, Cocoa Butter, Chocolate, Skim Milk, Lactose, Milkfat, Soy Lecithin, Artificial Flavor), Peanuts, Corn Syrup, Sugar, Milkfat, Skim Milk, Partially Hydrogenated Soybean Oil, Lactose, Salt, Egg Whites, Chocolate, Artificial Flavor. Snickers Brand Peanut Butter Squared Bars: Milk Chocolate (Sugar, Cocoa Butter, Chocolate, Skim Milk, Lactose, Milkfat, Soy Lecithin, Artificial Flavor), Peanut Butter (Peanuts, Partially Hydrogenated Soybean Oil), Peanuts, Sugar, Corn Syrup, Vegetable Oil (Hydrogenated Palm Kernel Oil, Palm Oil, Rapeseed Oil and Cottonseed Oil and/or Partially Hydrogenated Palm Kernel Oil), Lactose, Corn Syrup Solids, Invert Sugar, Less than 2% - Glycerin, Dextrose, Skim Milk, Salt, Calcium Carbonate, Partially Hydrogenated Soybean Oil, Egg Whites, Artificial Flavor, TBHQ to Maintain Freshness\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;emulsifier\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;added sugar\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;sweetener\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;cooking fat\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;cooking oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;lecithin\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;yeast\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;menu item type\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;nuts\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;partially hydrogenated vegetable oil\&quot;,\n \&quot;safety_level\&quot;: \&quot;low\&quot;\n },\n {\n \&quot;description\&quot;: \&quot;Unlike partially hydrogenated oils, fully hydrogenated oils do not contain trans fat and thus are currently considered safer.\&quot;,\n \&quot;name\&quot;: \&quot;hydrogenated vegetable oil\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;calcium\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;nut butter\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;legumes\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;refined sweetener\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;non food item\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;tree nuts\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;chocolate\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;sugar\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;snack\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;corn syrup\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;drink\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;milk\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;spread\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;vegetable oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;yeast nutrient\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;palm kernel oil\&quot;,\n \n\n#### Parameters\n\&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;artificial ingredient\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;stabilizer\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;additive\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;nutrient\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;soybean oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;supplement\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;mineral\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;artificial flavor\&quot;,\n \&quot;safety_level\&quot;: \&quot;medium\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;skim milk\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;peanuts\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;corn syrup solids\&quot;,\n \&quot;safety_level\&quot;: \&quot;medium\&quot;\n },\n {\n \&quot;description\&quot;: \&quot;Unlike partially hydrogenated oils, fully hydrogenated oils do not contain trans fat and thus are currently considered safer.\&quot;,\n \&quot;name\&quot;: \&quot;hydrogenated palm kernel oil\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;cottonseed oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;milkfat\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;lactose\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;corn syrup\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;cocoa butter\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;tbhq to maintain freshness\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;peanut butter\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;egg whites\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;sugar\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;milk chocolate\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;palm oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;artificial flavor\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;salt\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;almonds\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;skim milk less than 2% - lactose\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;vegetable oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;less than 2% - glycerin\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;dextrose\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: \&quot;Soy lecithin is not a concern for most people allergic to soy.\&quot;,\n \&quot;name\&quot;: \&quot;soy lecithin\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;invert sugar\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;chocolate\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;rapeseed oil\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;partially hydrogenated soybean oil\&quot;,\n \&quot;safety_level\&quot;: \&quot;low\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;calcium carbonate\&quot;,\n \&quot;safety_level\&quot;: \&quot;high\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;partially hydrogenated palm kernel oil\&quot;,\n \&quot;safety_level\&quot;: \&quot;low\&quot;\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;artificial flavor.snickers brand\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;snickers brand almond bar\&quot;,\n \&quot;safety_level\&quot;: null\n }\n ],\n \&quot;likes\&quot;: 0,\n \&quot;aisle\&quot;: \&quot;Sweet Snacks\&quot;,\n \&quot;nutrition\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 4,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 6.15\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 10,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 20\n },\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 200,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 10\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 26,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9.45\n }\n ],\n \&quot;caloricBreakdown\&quot;: {\n \&quot;percentProtein\&quot;: 22.22,\n \&quot;percentFat\&quot;: 20,\n \&quot;percentCarbs\&quot;: 57.78\n }\n },\n \&quot;price\&quot;: 324.0,\n \&quot;servings\&quot;: {\n \&quot;number\&quot;: 8,\n \&quot;size\&quot;: 4,\n \&quot;unit\&quot;: \&quot;pieces\&quot;,\n \&quot;raw\&quot;: \&quot;pcs\&quot;\n },\n \&quot;spoonacularScore\&quot;: 0.0\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Grocery Products\nThe spoonacular grocery products API allows you to search through all products. You can [find products](https://spoonacular.com/spoonacular.com#Search-Grocery-Products) by query (e.g. \&quot;pizza\&quot;) and/or by macro-nutrients (e.g. \u003c500 calories).\n\nOnce you found a product, you can get a lot of [detailed information](https://spoonacular.com/spoonacular.com#Get-Product-Information) about it such as nutrition, ingredients, cost, and where to find it in the supermarket.\n\nspoonacular analyzes every product and tries to retrieve meta information. This information is stored in `badges`.\n\nHere is a list of all possible badges a product can have:\n\n- egg\\_free\n- wheat\\_free\n- grain\\_free\n- peanut\\_free\n- primal\n- vegetarian\n- nut\\_free\n- vegan\n- pescetarian\n- dairy\\_free\n- gluten\\_free\n- paleo\n- msg\\_free\n- no\\_artificial\\_colors\n- no\\_artificial\\_flavors\n- no\\_artificial\\_ingredients\n- grass\\_fed\n- no\\_added\\_sugar\n- pasture\\_raised\n- free\\_range\n- cage\\_free\n- wild\\_caught\n- fair\\_trade\n- no\\_additives\n- hormone\\_free\n- no\\_preservatives\n- sugar\\_free\n- sulfite\\_free\n- corn\\_free\n- soy\\_free\n- nitrate\\_free\n- gmo\\_free\n- organic\n- kosher\n- halal\n- sustainable\n- non\\_alcoholic\n- lactose\\_free\n- whole\\_grain\n- whole\\_wheat\n- multigrain\n- sprouted\\_grain\n\n## Search Grocery Products\nSearch packaged food products, such as frozen pizza or Greek yogurt.\n\nGET\n\nhttps://api.spoonacular.com/food/products/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | greek yogurt | The search query. |\n| `minCalories` | number | 50 | The minimum amount of calories the product must have per serving. |\n| `maxCalories` | number | 800 | The maximum amount of calories the product can have per serving. |\n| `minCarbs` | number | 10 | The minimum amount of carbohydrates in grams the product must have per serving. |\n| `maxCarbs` | number | 100 | The maximum amount of carbohydrates in grams the product can have per serving. |\n| `minProtein` | number | 10 | The minimum amount of protein in grams the product must have per serving. |\n| `maxProtein` | number | 100 | The maximum amount of protein in grams the product can have per serving. |\n| `minFat` | number | 1 | The minimum amount of fat in grams the product must have per serving. |\n| `maxFat` | number | 100 | The maximum amount of fat in grams the product can have per serving. |\n| `addProductInformation` | boolean | false | If set to true, you get more information about the products returned. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 990). |\n| `number` | number | 10 | The number of expected results (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/search?query\u003dpizza\u0026number\u003d2\n\n```\n{\n \&quot;products\&quot;: [\n {\n \&quot;id\&quot;: 192386,\n \&quot;title\&quot;: \&quot;Pizza Buddy: Frozen Pizza Dough, 16 Oz\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n },\n {\n \&quot;id\&quot;: 27693,\n \&quot;title\&quot;: \&quot;Uno Pizza\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n ],\n \&quot;totalProducts\&quot;: 1258,\n \&quot;type\&quot;: \&quot;product\&quot;,\n \&quot;offset\&quot;: 0,\n \&quot;number\&quot;: 2\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper result returned. Since this endpoint combines the capabilities of four different endpoints into one, additional points may be required depending on the parameters you set. If `addProductInformation` is set to true,\n\n1 point\n\nwill be added per product returned. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Grocery Products by UPC\nGet information about a packaged food using its UPC.\n\nGET\n\nhttps://api.spoonacular.com/food/products/upc/{upc}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`upc`** | number | 041631000564 | The product\u0027s UPC. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/upc/041631000564\n\n```\n{\n \&quot;id\&quot;: 30004,\n \&quot;title\&quot;: \&quot;Swan Flour\&quot;,\n \&quot;badges\&quot;: [\n \&quot;egg_free\&quot;,\n \&quot;wheat_free\&quot;,\n \&quot;grain_free\&quot;,\n \&quot;peanut_free\&quot;,\n \&quot;primal\&quot;,\n \&quot;vegetarian\&quot;,\n \&quot;nut_free\&quot;,\n \&quot;vegan\&quot;,\n \&quot;pescetarian\&quot;,\n \&quot;dairy_free\&quot;,\n \&quot;paleo\&quot;,\n \&quot;gluten_free\&quot;\n ],\n \&quot;importantBadges\&quot;: [\n \&quot;gluten_free\&quot;,\n \&quot;paleo\&quot;,\n \&quot;primal\&quot;,\n \&quot;wheat_free\&quot;,\n \&quot;grain_free\&quot;\n ],\n \&quot;breadcrumbs\&quot;: [\n \&quot;flour\&quot;\n ],\n \&quot;generatedText\&quot;: \&quot;Swan Flour: This product is an awesome fit if you are searching for a healthy flour. This product has 1 ingredient (in our experience: the fewer ingredients, the better!) This product contains no ingredients that some research suggests you should avoid. One serving of this product provides 30 calories, 0g grams of fat, 0g grams of protein, and 8g grams of carbs.\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;ingredientCount\&quot;: null,\n \&quot;ingredientList\&quot;: \&quot;Potato Starch\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;starch\&quot;,\n \&quot;safety_level\&quot;: null\n },\n {\n \&quot;description\&quot;: null,\n \&quot;name\&quot;: \&quot;potato starch\&quot;,\n \&quot;safety_level\&quot;: null\n }\n ],\n \&quot;likes\&quot;: 0,\n \&quot;nutrition\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 30,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 10\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 8,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9.45\n }\n ],\n \&quot;caloricBreakdown\&quot;: {\n \&quot;percentProtein\&quot;: 22.22,\n \&quot;percentFat\&quot;: 20,\n \&quot;percentCarbs\&quot;: 57.78\n }\n },\n \&quot;price\&quot;: 0.0,\n \&quot;servings\&quot;: {\n \&quot;number\&quot;: 34,\n \&quot;size\&quot;: 1,\n \&quot;unit\&quot;: \&quot;tbsp\&quot;\n },\n \&quot;spoonacularScore\&quot;: 99.0,\n \&quot;credits\&quot;: {\n \&quot;text\&quot;: \&quot;openfoodtacts.org under (ODbL) v1.0\&quot;,\n \&quot;link\&quot;: \&quot;https://opendatacommons.org/licenses/odbl/1-0/\&quot;,\n \&quot;image\&quot;: \&quot;openfoodfacts.org under CC BY-SA 3.0 DEED\&quot;,\n \&quot;imageLink\&quot;: \&quot;https://creativecommons.org/licenses/by-sa/3.0/deed.en\&quot;\n }\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Custom Foods\nSearch custom foods in a user\u0027s account.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nGET\n\nhttps://api.spoonacular.com/food/customFoods/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | brat | The search query. |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 990). |\n| `number` | number | 10 | The number of expected results (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/customFoods/search?query\u003dbrat\u0026number\u003d2\u0026username\u003ddsky\u0026hash\u003d4b5v4398573406\n\n```\n{\n \&quot;customFoods\&quot;: [\n {\n \&quot;id\&quot;: 15,\n \&quot;title\&quot;: \&quot;Max Cafe Curry Bratwurst\&quot;,\n \&quot;servings\&quot;: 1,\n \&quot;imageUrl\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/bratwurst.jpg\&quot;,\n \&quot;price\&quot;: 6.9\n }\n ],\n \&quot;type\&quot;: \&quot;customFood\&quot;,\n \&quot;offset\&quot;: 0,\n \&quot;number\&quot;: 10\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper custom food returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Add Custom Foods\nAdd custom foods to a user\u0027s account. This could be something as simple as \&quot;1 banana\&quot; or even mini recipes like \&quot;1 toast with jam\&quot;.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nPOST\n\nhttps://api.spoonacular.com/food/customFoods/add\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`(post body)`** | string | { \&quot;title\&quot;: \&quot;My little afternoon snack\&quot;, \&quot;servings\&quot;: 2} | The json representing the custom food. |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nHere\u0027s the sample post request. The \&quot;id\&quot; should only be sent if you update an existing custom food for the user. Only \&quot;title\&quot; and \&quot;servings\&quot; is required, everything else is optional.\n\nThe response will be the custom food\u0027s id. If an image is available you can get it via https://img.spoonacular.com/custom-foods/#ID#-90x90.jpg where #ID# is the custom food\u0027s id.\n\nExample Request Body\n\nPOST\n\nhttps://api.spoonacular.com/food/customFoods/add\n\n```\n{\n \&quot;id\&quot;: 1,\n \&quot;title\&quot;: \&quot;Chickpea Lunchbox\&quot;,\n \&quot;servings\&quot;: 1,\n \&quot;customFoodBoxId\&quot;: 123,\n \&quot;nutrition\&quot;: {\n \&quot;calories\&quot;: 300\n },\n \&quot;meta\&quot;: {\&quot;diets\&quot;:[\&quot;vegan\&quot;,\&quot;vegetarian\&quot;],\&quot;intolerances\&quot;:[\&quot;sesame\&quot;,\&quot;soy\&quot;]},\n \&quot;imageUrl\&quot;: \&quot;https://images.unsplash.com/photo-1543353071-c953d88f7033?q\u003d80\u0026w\u003d500\u0026auto\u003dformat\u0026fit\u003dcrop\&quot;\n}\n\n```\n\n#### Quotas\nCalling this endpoint requires\n\n5 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Comparable Products\nFind comparable products to the given one.\n\nGET\n\nhttps://api.spoonacular.com/food/products/upc/{upc}/comparable\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`upc`** | number | 033698816271 | The UPC of the product for which you want to find comparable products. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/upc/033698816271/comparable\n\n```\n{\n \&quot;comparableProducts\&quot;: {\n \&quot;calories\&quot;: [],\n \&quot;likes\&quot;: [],\n \&quot;price\&quot;: [],\n \&quot;protein\&quot;: [\n {\n \&quot;difference\&quot;: 3,\n \&quot;id\&quot;: 11797,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/11797.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Casa Visco Capers\&quot;\n },\n {\n \&quot;difference\&quot;: 1,\n \&quot;id\&quot;: 90962,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/90962.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Colavita Capers\&quot;\n },\n {\n \&quot;difference\&quot;: 1,\n \&quot;id\&quot;: 88139,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/88139.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Mezzetta Capers\&quot;\n },\n {\n \&quot;difference\&quot;: 1,\n \&quot;id\&quot;: 152832,\n \&quot;image\&quot;: \&quot;https://spoonacular.com/com/productImages/152832.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Victoria Imported Capers\&quot;\n }\n ],\n \&quot;spoonacularScore\&quot;: [\n {\n \&quot;difference\&quot;: 7,\n \&quot;id\&quot;: 125354,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/125354.jpg\&quot;,\n \&quot;title\&quot;: \&quot;DeLallo Capers\&quot;\n },\n {\n \&quot;difference\&quot;: 7,\n \&quot;id\&quot;: 118361,\n \&quot;image\&quot;: \&quot;https://spoonacular.com/com/productImages/118361.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Haddon House Non Pareil Capers\&quot;\n },\n {\n \&quot;difference\&quot;: 7,\n \&quot;id\&quot;: 113686,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/113686.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Dell Alpe Capers\&quot;\n },\n {\n \&quot;difference\&quot;: 7,\n \&quot;id\&quot;: 112078,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/112078.jpg\&quot;,\n \&quot;title\&quot;: \&quot;Paesana Imported Capers\&quot;\n }\n ],\n \&quot;sugar\&quot;: []\n }\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Autocomplete Product Search\nGenerate suggestions for grocery products based on a (partial) query. The matches will be found by looking in the title only.\n\nGET\n\nhttps://api.spoonacular.com/food/products/suggest\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | chicke | The (partial) search query. |\n| `number` | number | 10 | The number of results to return (between 1 and 25). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/suggest?query\u003dchicke\u0026number\u003d2\n\n```\n{\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 208698,\n \&quot;title\&quot;: \&quot;buddig premium deli chicken breast - rotisserie flavored\&quot;\n },\n {\n \&quot;id\&quot;: 41291,\n \&quot;title\&quot;: \&quot;tyson all natural chicken breasts tenderloins\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Product Nutrition by ID Widget\nVisualize a product\u0027s nutritional information as HTML including CSS.\n\nGET\n\nhttps://api.spoonacular.com/food/products/{id}/nutritionWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 7657 | The id of the product. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/7657/nutritionWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Product Nutrition by ID Image\nVisualize a product\u0027s nutritional information as an image.\n\nGET\n\nhttps://api.spoonacular.com/food/products/{id}/nutritionWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 7657 | The id of the product. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/products/7657/nutritionWidget.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Nutrition by ID Widget\nVisualize a recipe\u0027s nutritional information as HTML including CSS.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/nutritionWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1082038 | The recipe id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1082038/nutritionWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Recipe Nutrition by ID Image\nVisualize a recipe\u0027s nutritional information as an image.\n\nGET\n\nhttps://api.spoonacular.com/recipes/{id}/nutritionWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 1082038 | The recipe id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/1082038/nutritionWidget.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Classify Grocery Product\nThis endpoint allows you to match a packaged food to a basic category, e.g. a specific brand of milk to the category milk.\n\nPOST\n\nhttps://api.spoonacular.com/food/products/classify\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/json`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`(post body)`** | string | { \&quot;title\&quot;: \&quot;Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\&quot;, \&quot;upc\&quot;: \&quot;\&quot;, \&quot;plu\\_code\&quot;: \&quot;\&quot;} | A json object containing the product title. |\n| `locale` | string | en\\_US | The display name of the returned category, supported is en\\_US (for American English) and en\\_GB (for British English). |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/food/products/classify\n\n```\n{\n \&quot;cleanTitle\&quot;: \&quot;Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/milk.png\&quot;,\n \&quot;category\&quot;: \&quot;2 percent milk\&quot;,\n \&quot;breadcrumbs\&quot;: [\n \&quot;2 percent milk\&quot;,\n \&quot;milk\&quot;,\n \&quot;drink\&quot;,\n \&quot;ingredient\&quot;\n ],\n \&quot;usdaCode\&quot;: 1174\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.5 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Classify Grocery Product Bulk\nProvide a set of product jsons, get back classified products.\n\nPOST\n\nhttps://api.spoonacular.com/food/products/classifyBatch\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/json`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`(post body)`** | string | \\[{ \&quot;title\&quot;: \&quot;Kroger Vitamin A \u0026 D Reduced Fat 2% Milk\&quot;, \&quot;upc\&quot;: \&quot;\&quot;, \&quot;plu\\_code\&quot;: \&quot;\&quot;}\\] | A json array containing objects, each with the product title. |\n| `locale` | string | en\\_US | The display name of the returned category, supported is en\\_US (for American English) and en\\_GB (for British English). |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/food/products/classifyBatch\n\n```\n[\n { /* see classify grocery product result */ }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.5 points\n\nper classified product. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Map Ingredients to Grocery Products\nMap a set of ingredients to products you can buy in the grocery store.\n\nPOST\n\nhttps://api.spoonacular.com/food/ingredients/map\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/json`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`(post body)`** | string | { \&quot;ingredients\&quot;: \\[\&quot;eggs\&quot;,\&quot;bacon\&quot;\\], \&quot;servings\&quot;: 2} | Input for grocery product mapping. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/food/ingredients/map\n\n```\n[\n {\n \&quot;original\&quot;: \&quot;eggs\&quot;,\n \&quot;originalName\&quot;: \&quot;eggs\&quot;,\n \&quot;ingredientImage\&quot;: \&quot;egg.png\&quot;,\n \&quot;meta\&quot;: [\n \&quot;egg\&quot;\n ],\n \&quot;products\&quot;: [\n {\n \&quot;id\&quot;: 209945,\n \&quot;title\&quot;: \&quot;Crystal Farms Eggs - Fresh Accents Peeled Hard Cooked 2 ct Packs\&quot;,\n \&quot;upc\&quot;: \&quot;075925889498\&quot;\n },\n {\n \&quot;id\&quot;: 214723,\n \&quot;title\&quot;: \&quot;Organic Valley Eggs - Organic Medium Brown\&quot;,\n \&quot;upc\&quot;: \&quot;093966811100\&quot;\n },\n {\n \&quot;id\&quot;: 183228,\n \&quot;title\&quot;: \&quot;Eggland\u0027s Best Grade A Eggs Jumbo - 12 CT\&quot;,\n \&quot;upc\&quot;: \&quot;715141328615\&quot;\n }\n ]\n },\n {\n \&quot;ingredientImage\&quot;: \&quot;raw-bacon.png\&quot;,\n \&quot;meta\&quot;: [\n \&quot;bacon\&quot;\n ],\n \&quot;original\&quot;: \&quot;bacon\&quot;,\n \&quot;originalName\&quot;: \&quot;bacon\&quot;,\n \&quot;products\&quot;: [\n {\n \&quot;id\&quot;: 159164,\n \&quot;title\&quot;: \&quot;Wright Bacon - Naturally Hickory Smoked\&quot;,\n \&quot;upc\&quot;: \&quot;079621461552\&quot;\n },\n {\n \&quot;id\&quot;: 87924,\n \&quot;title\&quot;: \&quot;Sugardale Bacon\&quot;,\n \&quot;upc\&quot;: \&quot;073890006025\&quot;\n },\n {\n \&quot;id\&quot;: 213315,\n \&quot;title\&quot;: \&quot;John Morrell Bacon - Applewood Smoked\&quot;,\n \&quot;upc\&quot;: \&quot;070100060877\&quot;\n },\n {\n \&quot;id\&quot;: 94585,\n \&quot;title\&quot;: \&quot;Hormel Black Label Bacon Thick Cut\&quot;,\n \&quot;upc\&quot;: \&quot;037600153041\&quot;\n }\n ]\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nper mapped ingredient. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Guess Nutrition by Dish Name\nEstimate the macronutrients of a dish based on its title.\n\nGET\n\nhttps://api.spoonacular.com/recipes/guessNutrition\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`title`** | string | Spaghetti Aglio et Olio | The title of the dish. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/guessNutrition?title\u003dSpaghetti+Aglio+et+Olio\n\n```\n{\n \&quot;calories\&quot;: {\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;max\&quot;: 574.07,\n \&quot;min\&quot;: 389.92\n },\n \&quot;standardDeviation\&quot;: 148.55,\n \&quot;unit\&quot;: \&quot;calories\&quot;,\n \&quot;value\&quot;: 428.0\n },\n \&quot;carbs\&quot;: {\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;max\&quot;: 78.19,\n \&quot;min\&quot;: 55.54\n },\n \&quot;standardDeviation\&quot;: 18.27,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 65.0\n },\n \&quot;fat\&quot;: {\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;max\&quot;: 19.2,\n \&quot;min\&quot;: 12.27\n },\n \&quot;standardDeviation\&quot;: 5.59,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 16.0\n },\n \&quot;protein\&quot;: {\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;max\&quot;: 29.31,\n \&quot;min\&quot;: 8.12\n },\n \&quot;standardDeviation\&quot;: 17.09,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;value\&quot;: 13.0\n },\n \&quot;recipesUsed\&quot;: 10\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Autocomplete Menu Item Search\nGenerate suggestions for menu items based on a (partial) query. The matches will be found by looking in the title only.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/suggest\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | chicke | The (partial) search query. |\n| `number` | number | 10 | The number of results to return (between 1 and 25). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/suggest?query\u003dchicke\u0026number\u003d2\n\n```\n{\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 253419,\n \&quot;title\&quot;: \&quot;pei wei asian diner thai chicken lettuce wraps\&quot;\n },\n {\n \&quot;id\&quot;: 380722,\n \&quot;title\&quot;: \&quot;camille\u0027s chicken caesar salad includes 2 oz. caesar dressing\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Menu Items\nSearch over 115,000 menu items from over 800 fast food and chain restaurants. For example, McDonald\u0027s Big Mac or Starbucks Mocha.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | snickers | The search query. |\n| `minCalories` | number | 50 | The minimum amount of calories the menu item must have per serving. |\n| `maxCalories` | number | 800 | The maximum amount of calories the menu item can have per serving. |\n| `minCarbs` | number | 10 | The minimum amount of carbohydrates in grams the menu item must have per serving. |\n| `maxCarbs` | number | 100 | The maximum amount of carbohydrates in grams the menu item can have per serving. |\n| `minProtein` | number | 10 | The minimum amount of protein in grams the menu item must have per serving. |\n| `maxProtein` | number | 100 | The maximum amount of protein in grams the menu item can have per serving. |\n| `minFat` | number | 1 | The minimum amount of fat in grams the menu item must have per serving. |\n| `maxFat` | number | 100 | The maximum amount of fat in grams the menu item can have per serving. |\n| `addMenuItemInformation` | boolean | false | If set to true, you get more information about the menu items returned. |\n| `offset` | number | 0 | The offset number for paging (between 0 and 990). |\n| `number` | number | 100 | The number of expected results (between 1 and 10). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/search?query\u003dburger\u0026number\u003d2\n\n```\n{\n \&quot;menuItems\&quot;: [\n {\n \&quot;id\&quot;: 419357,\n \&quot;title\&quot;: \&quot;Burger Sliders\&quot;,\n \&quot;restaurantChain\&quot;: \&quot;Hooters\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/menu-items/419357-312x231.png\&quot;,\n \&quot;imageType\&quot;: \&quot;png\&quot;,\n \&quot;servings\&quot;: {\n \&quot;number\&quot;: 1,\n \&quot;size\&quot;: 2,\n \&quot;unit\&quot;: \&quot;oz\&quot;\n }\n },\n {\n \&quot;id\&quot;: 424571,\n \&quot;title\&quot;: \&quot;Bacon King Burger\&quot;,\n \&quot;restaurantChain\&quot;: \&quot;Burger King\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/menu-items/424571-312x231.png\&quot;,\n \&quot;imageType\&quot;: \&quot;png\&quot;,\n \&quot;servings\&quot;: {\n \&quot;number\&quot;: 1,\n \&quot;size\&quot;: 2,\n \&quot;unit\&quot;: \&quot;oz\&quot;\n }\n }\n ],\n \&quot;totalMenuItems\&quot;: 6749,\n \&quot;type\&quot;: \&quot;menuItem\&quot;,\n \&quot;offset\&quot;: 0,\n \&quot;number\&quot;: 2\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper result returned. Since this endpoint combines the capabilities of four different endpoints into one, additional points may be required depending on the parameters you set. If `addMenuItemInformation` is set to true,\n\n1 point\n\nwill be added per menu item returned. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Menu Item Nutrition Label Widget\nVisualize a menu item\u0027s nutritional label information as HTML including CSS.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/{id}/nutritionLabel\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 342313 | The menu item id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n| `showOptionalNutrients` | boolean | false | Whether to show optional nutrients. |\n| `showZeroValues` | boolean | false | Whether to show zero values. |\n| `showIngredients` | boolean | false | Whether to show a list of ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/342313/nutritionLabel\n\n```\n/* HTML response */\n```\n\nThe response will be an HTML widget that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Menu Item Nutrition Label Image\nVisualize a menu item\u0027s nutritional label information as an image.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/{id}/nutritionLabel.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 342313 | The menu item id. |\n| `showOptionalNutrients` | boolean | false | Whether to show optional nutrients. |\n| `showZeroValues` | boolean | false | Whether to show zero values. |\n| `showIngredients` | boolean | false | Whether to show a list of ingredients. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/342313/nutritionLabel.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Menu Item Nutrition by ID Widget\nVisualize a menu item\u0027s nutritional information as HTML including CSS.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/{id}/nutritionWidget\n\n#### Headers\nRequest Headers:\n\n- `Accept: text/html`\n\nResponse Headers:\n\n- `Content-Type: text/html`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 424571 | The menu item id. |\n| `defaultCss` | boolean | true | Whether the default CSS should be added to the response. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/424571/nutritionWidget\n\n```\n/* HTML response */\n```\n\nThe API response will be HTML and could look like this, for example:\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Menu Item Nutrition by ID Image\nVisualize a menu item\u0027s nutritional information as HTML including CSS.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/{id}/nutritionWidget.png\n\n#### Headers\nRequest Headers:\n\n- `Accept: image/png`\n\nResponse Headers:\n\n- `Content-Type: image/png`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 424571 | The menu item id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/424571/nutritionWidget.png\n\nThe response will be an image that may look like this:\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Menu Item Information\nUse a menu item id to get all available information about a menu item, such as nutrition.\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/{id}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 424571 | The menu item id. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/menuItems/424571\n\n```\n{\n \&quot;id\&quot;: 424571,\n \&quot;title\&quot;: \&quot;Bacon King Burger\&quot;,\n \&quot;restaurantChain\&quot;: \&quot;Burger King\&quot;,\n \&quot;nutrition\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 69,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 30\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 57,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 35\n },\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1040,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 50\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 48,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 35\n }\n ],\n \&quot;caloricBreakdown\&quot;: {\n \&quot;percentProtein\&quot;: 35,\n \&quot;percentFat\&quot;: 30,\n \&quot;percentCarbs\&quot;: 35\n }\n },\n \&quot;badges\&quot;: [],\n \&quot;breadcrumbs\&quot;: [\n \&quot;burger\&quot;,\n \&quot;main course\&quot;,\n \&quot;food product category\&quot;\n ],\n \&quot;generatedText\&quot;: null,\n \&quot;imageType\&quot;: \&quot;png\&quot;,\n \&quot;likes\&quot;: 0,\n \&quot;servings\&quot;: {\n \&quot;number\&quot;: 1,\n \&quot;size\&quot;: 2,\n \&quot;unit\&quot;: \&quot;oz\&quot;\n },\n \&quot;price\&quot;: null,\n \&quot;spoonacularScore\&quot;: null\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Generate Meal Plan\nGenerate a meal plan with three meals per day (breakfast, lunch, and dinner).\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/generate\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| `timeFrame` | string | day | Either for one \&quot;day\&quot; or an entire \&quot;week\&quot;. |\n| `targetCalories` | number | 2000 | What is the caloric target for one day? The meal plan generator will try to get as close as possible to that goal. |\n| `diet` | string | vegetarian | Enter a diet that the meal plan has to adhere to. See a full [list of supported diets](https://spoonacular.com/food-api/docs#Diets). |\n| `exclude` | string | shellfish, olives | A comma-separated list of allergens or ingredients that must be excluded. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/generate?timeFrame\u003dday\n\n```\n{\n \&quot;meals\&quot;: [\n {\n \&quot;id\&quot;: 655219,\n \&quot;title\&quot;: \&quot;Peanut Butter And Chocolate Oatmeal\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;readyInMinutes\&quot;: 45,\n \&quot;servings\&quot;: 1,\n \&quot;sourceUrl\&quot;: \&quot;https://spoonacular.com/recipes/peanut-butter-and-chocolate-oatmeal-655219\&quot;\n },\n {\n \&quot;id\&quot;: 649931,\n \&quot;title\&quot;: \&quot;Lentil Salad With Vegetables\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;readyInMinutes\&quot;: 45,\n \&quot;servings\&quot;: 4,\n \&quot;sourceUrl\&quot;: \&quot;https://spoonacular.com/recipes/lentil-salad-with-vegetables-649931\&quot;\n },\n {\n \&quot;id\&quot;: 632854,\n \&quot;title\&quot;: \&quot;Asian Noodles\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;readyInMinutes\&quot;: 45,\n \&quot;servings\&quot;: 4,\n \&quot;sourceUrl\&quot;: \&quot;https://spoonacular.com/recipes/asian-noodles-632854\&quot;\n }\n ],\n \&quot;nutrients\&quot;: {\n \&quot;calories\&quot;: 1735.81,\n \&quot;carbohydrates\&quot;: 235.17,\n \&quot;fat\&quot;: 69.22,\n \&quot;protein\&quot;: 55.43\n }\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Meal Plan Week\nRetrieve a meal planned week for the given user. The `username` must be a spoonacular user and the `hash` must the the user\u0027s hash that can be found in his/her account.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/{username}/week/{start-date}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`start-date`** | string | 2020-06-01 | The start date of the meal planned week in the format yyyy-mm-dd. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/dsky/week/2020-06-01?hash\u003d4b5v4398573406\n\n```\n{\n \&quot;days\&quot;: [\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 310,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 16\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 38\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 20,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 40\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 310,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 16\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 38\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 20,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 40\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;date\&quot;: 1589155200,\n \&quot;day\&quot;: \&quot;Monday\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 1976489,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 1,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;servings\&quot;: 2,\n \&quot;id\&quot;: 1023004,\n \&quot;title\&quot;: \&quot;Foolproof Meatloaf\&quot;,\n \&quot;imageType\&quot;: \&quot;\&quot;\n }\n },\n {\n \&quot;id\&quot;: 1976490,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 2,\n \&quot;type\&quot;: \&quot;CUSTOM_FOOD\&quot;,\n \&quot;value\&quot;: {\n \&quot;servings\&quot;: 1,\n \&quot;id\&quot;: 345,\n \&quot;title\&quot;: \&quot;Denn\u0027s Lamb Bratwurst - 1/2 Pkg\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/bratwurst.jpg\&quot;\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 200,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 10\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 52,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 2,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 4\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 200,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 10\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 52,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 2,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 4\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;date\&quot;: 1589241600,\n \&quot;day\&quot;: \n\n#### Parameters\n\&quot;Tuesday\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 1976491,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 3,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;title\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: 1,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;apple\&quot;,\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;amount\&quot;: \&quot;1\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/apple.jpg\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;banana\&quot;,\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;amount\&quot;: \&quot;1\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/bananas.jpg\&quot;\n }\n ]\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 180,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 6,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 22,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 7\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 10,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 20\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 180,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 6,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 22,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 7\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 10,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 20\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;date\&quot;: 1589328000,\n \&quot;day\&quot;: \&quot;Wednesday\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 1976492,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 4,\n \&quot;type\&quot;: \&quot;MENU_ITEM\&quot;,\n \&quot;value\&quot;: {\n \&quot;servings\&quot;: 1,\n \&quot;id\&quot;: 378557,\n \&quot;title\&quot;: \&quot;BBQ Steak Pizza, 9\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/menu-items/378557-312x231.png\&quot;,\n \&quot;imageType\&quot;: \&quot;png\&quot;\n }\n }\n ]\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Meal Plan Day\nRetrieve a meal planned day for the given user. The `username` must be a spoonacular user and the `hash` must the the user\u0027s hash that can be found in his/her account.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/{username}/day/{date}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`date`** | string | 2020-06-01 | The date of the meal planned day in the format yyyy-mm-dd. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/dsky/day/2020-06-01?hash\u003d4b5v4398573406\n\n```\n{\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 310,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 16\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 38\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 20,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 40\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 310,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 16\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 38\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 20,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 40\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 0,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n }\n ]\n },\n \&quot;date\&quot;: 1589155200,\n \&quot;day\&quot;: \&quot;Monday\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 1976489,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 1,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;servings\&quot;: 2,\n \&quot;id\&quot;: 1023004,\n \&quot;title\&quot;: \&quot;Foolproof Meatloaf\&quot;,\n \&quot;imageType\&quot;: \&quot;\&quot;\n }\n },\n {\n \&quot;id\&quot;: 1976490,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 2,\n \&quot;type\&quot;: \&quot;CUSTOM_FOOD\&quot;,\n \&quot;value\&quot;: {\n \&quot;servings\&quot;: 1,\n \&quot;id\&quot;: 345,\n \&quot;title\&quot;: \&quot;Denn\u0027s Lamb Bratwurst - 1/2 Pkg\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/bratwurst.jpg\&quot;\n }\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Add to Meal Plan\nAdd an item to the user\u0027s meal plan.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/{username}/items\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Body\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/dsky/items\n\n```\n{\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;1 banana\&quot;\n }\n ]\n }\n}\n```\n\nThe field `date` is the timestamp of the day the item should be added to.\n\nThe field `slot` is either 1, 2, or 3 for breakfast, lunch, or dinner respectively.\n\nThe field `position` is the order in the slot.\n\nThe field `type` is either INGREDIENTS for simple foods such as \&quot;1 banana\&quot;, PRODUCT for a grocery product, MENU\\_ITEM for a menu item, RECIPE for a recipe, or CUSTOM\\_FOOD for custom food.\n\nThe field `value` is information about the item and the structure depends on what `type` is set to. The example above shows what it would look like for type ingredient. If the type is PRODUCT, MENU\\_ITEM, or RECIPE the value must contain the field `servings` and the `id` of the respective item.\n\nExample for adding a recipe with `type` RECIPE.\n\n```\n{\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 296213,\n \&quot;servings\&quot;: 2,\n \&quot;title\&quot;: \&quot;Spinach Salad with Roasted Vegetables and Spiced Chickpea\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n }\n}\n```\n\nExample for adding a grocery product with `type` PRODUCT.\n\n```\n{\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 183433,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Ahold Lasagna with Meat Sauce\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n}\n```\n\nExample for adding a menu item with `type` MENU\\_ITEM.\n\n```\n{\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;MENU_ITEM\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 378557,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Pizza 73 BBQ Steak Pizza, 9\&quot;,\n \&quot;imageType\&quot;: \&quot;png\&quot;\n }\n}\n```\n\nExample for adding a custom food with `type` CUSTOM\\_FOOD.\n\n```\n{\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;CUSTOM_FOOD\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 348,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Aldi Spicy Cashews - 30g\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/cashews.jpg\&quot;\n }\n}\n```\n\nExample for adding simple foods with `type` INGREDIENTS. You can either just pass a name with amount and unit or pass a more complex object with amount, name, and unit in separate fields (recommended).\n\n```\n{\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;1 banana\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;coffee\&quot;,\n \&quot;unit\&quot;: \&quot;cup\&quot;,\n \&quot;amount\&quot;: \&quot;1\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/brewed-coffee.jpg\&quot;\n },\n ]\n }\n}\n```\n\nAlternatively you can add all items of a meal plan template to a user\u0027s meal plan with one call. Just pass the `mealPlanTemplateId` and the `startDate` in your request. The user\u0027s meal plan will be filled with template items starting on startDate (day 1 of the specified meal plan template).\n\n```\n{\n \&quot;mealPlanTemplateId\&quot;: 120,\n \&quot;startDate\&quot;: 1596575356,\n}\n```\n\nYou can also add multiple items with one request. Just pass a JSON Array with multiple items. See below for an example.\n\n```\n[\n {\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;1 banana\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;coffee\&quot;,\n \&quot;unit\&quot;: \&quot;cup\&quot;,\n \&quot;amount\&quot;: \&quot;1\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/brewed-coffee.jpg\&quot;\n },\n ]\n }\n },\n {\n \&quot;date\&quot;: 1589500800,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;CUSTOM_FOOD\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 348,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Aldi Spicy Cashews - 30g\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/cashews.jpg\&quot;\n }\n }\n]\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.1 points\n\nper additional item added.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Clear Meal Plan Day\nDelete all planned items from the user\u0027s meal plan for a specific day.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/{username}/day/{date}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`date`** | string | 2020-06-01 | The date in the format yyyy-mm-dd. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/dsky/day/2020-06-01?hash\u003d4b5v4398573406\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Delete from Meal Plan\nDelete an item from the user\u0027s meal plan.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/{username}/items/{id}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`id`** | number | 15678 | The shopping list item id. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/dsky/items/15678?hash\u003d4b5v4398573406\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Meal Plan Templates\nGet meal plan templates from user or public ones.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nGet user\u0027s templates.\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/{username}/templates\n\n```\n{\n \&quot;templates\&quot;: [\n {\n \&quot;id\&quot;: 37,\n \&quot;name\&quot;: \&quot;Busy Work Week\&quot;\n },\n {\n \&quot;id\&quot;: 480,\n \&quot;name\&quot;: \&quot;Keto Meal Plan\&quot;\n },\n {\n \&quot;id\&quot;: 120,\n \&quot;name\&quot;: \&quot;Not-So-Strict Paleo Meal Plan\&quot;\n },\n {\n \&quot;id\&quot;: 451,\n \&quot;name\&quot;: \&quot;Week 1 Meal Plan\&quot;\n },\n {\n \&quot;id\&quot;: 581,\n \&quot;name\&quot;: \&quot;Whole30 Meal Plan\&quot;\n }\n ]\n}\n```\n\nGet public templates.\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/public-templates\n\n```\n{\n \&quot;templates\&quot;: [\n {\n \&quot;id\&quot;: 37,\n \&quot;name\&quot;: \&quot;Busy Work Week\&quot;\n },\n {\n \&quot;id\&quot;: 480,\n \&quot;name\&quot;: \&quot;Keto Meal Plan\&quot;\n },\n {\n \&quot;id\&quot;: 120,\n \&quot;name\&quot;: \&quot;Not-So-Strict Paleo Meal Plan\&quot;\n },\n {\n \&quot;id\&quot;: 451,\n \&quot;name\&quot;: \&quot;Week 1 Meal Plan\&quot;\n },\n {\n \&quot;id\&quot;: 581,\n \&quot;name\&quot;: \&quot;Whole30 Meal Plan\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Meal Plan Template\nGet information about a meal plan template.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/{username}/templates/{id}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`id`** | number | 15678 | The shopping list item id. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/dsky/templates/128?hash\u003d4b5v4398573406\n\n```\n{\n \&quot;id\&quot;: 128,\n \&quot;name\&quot;: \&quot;1500 Calorie Meal Plan\&quot;,\n \&quot;days\&quot;: [\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1293,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 65\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 65,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 100\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 102,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 34\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 83,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 166\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 132,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 7\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 3,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 4\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 8\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 3,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 5\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 455,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 23\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 34,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 52\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 35,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 70\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 706,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 35\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 29,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 45\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 76,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 25\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 46,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 91\n }\n ]\n },\n \&quot;day\&quot;: \&quot;1\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2403,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 630657,\n \&quot;title\&quot;: \&quot;Double Chocolate Protein Cookies\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2404,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;orange\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/orange.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2405,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 296213,\n \&quot;title\&quot;: \&quot;Spinach Salad with Roasted Vegetables and Spiced Chickpea\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2406,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 237677,\n \&quot;title\&quot;: \&quot;Chicken Parmesan with Spaghetti\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2407,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;broccoli\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/broccoli.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;cup\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2408,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 146191,\n \&quot;title\&quot;: \&quot;Lindt Dark Chocolate\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1386,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 69\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 66,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 102\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 162,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 54\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 48,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 96\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 239,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 12\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 11,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 34,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 11\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 5,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9\n }\n ]\n },\n \n\n#### Parameters\n\&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 732,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 37\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 33,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 51\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 91,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 30\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 22,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 44\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 414,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 21\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 22,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 33\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 37,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 12\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 21,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 43\n }\n ]\n },\n \&quot;day\&quot;: \&quot;2\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2409,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 101999,\n \&quot;title\&quot;: \&quot;Greek Gods Yogurt\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2410,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;berries\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/berries-mixed.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;cup\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2411,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 516377,\n \&quot;title\&quot;: \&quot;Southwest Quinoa Salad\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2412,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 247683,\n \&quot;title\&quot;: \&quot;Pesto Caprese Omelette\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2413,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 484337,\n \&quot;title\&quot;: \&quot;One Ingredient Banana Ice Cream\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1589,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 79\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 77,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 118\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 158,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 53\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 84,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 168\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 472,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 24\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 14,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 21\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 62,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 21\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 27,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 54\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 568,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 28\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 45,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 69\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 31,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 10\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 18,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 36\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 549,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 27\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 18,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 27\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 65,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 22\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 39,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 78\n }\n ]\n },\n \&quot;day\&quot;: \&quot;3\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2414,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 157259,\n \&quot;title\&quot;: \&quot;Cocoa Protein Pancakes\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2415,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;orange\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/orange.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2416,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 535856,\n \&quot;title\&quot;: \&quot;BLT Chopped Salad\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2417,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 71144,\n \&quot;title\&quot;: \&quot;Kind Plus Fruit \u0026 Nut Bar - Almond Walnut Macadamia \n\n#### Parameters\nwith Peanuts Plus Protein\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2418,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 519197,\n \&quot;title\&quot;: \&quot;Zesty Sriracha Shrimp and Quinoa\&quot;,\n \&quot;imageType\&quot;: \&quot;png\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2419,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 163427,\n \&quot;title\&quot;: \&quot;Green Giant Valley Fresh Steamers - Select Sugar Snap Peas\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2420,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 146191,\n \&quot;title\&quot;: \&quot;Lindt Dark Chocolate\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1343,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 67\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 70,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 108\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 123,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 41\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 61,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 122\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 239,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 12\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 11,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 34,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 11\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 5,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 406,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 20\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 17,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 26\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 56,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 10,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 21\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 698,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 35\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 43,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 66\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 34,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 11\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 46,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 92\n }\n ]\n },\n \&quot;day\&quot;: \&quot;4\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2421,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 101999,\n \&quot;title\&quot;: \&quot;Greek Gods Yogurt\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2422,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;berries\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/berries-mixed.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;cup\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2423,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 535563,\n \&quot;title\&quot;: \&quot;Black Bean Quinoa Salad\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2424,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 622598,\n \&quot;title\&quot;: \&quot;Pittata - Pizza Frittata\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2425,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 484337,\n \&quot;title\&quot;: \&quot;One Ingredient Banana Ice Cream\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1247,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 62\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 61,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 95\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 103,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 34\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 78,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 156\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 295,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 15\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 12,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 42,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 14\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 11,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 23\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 455,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 23\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 34,\n \n\n#### Parameters\n\&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 52\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 35,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 70\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 497,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 25\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 15,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 24\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 60,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 20\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 32,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 63\n }\n ]\n },\n \&quot;day\&quot;: \&quot;5\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2426,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 71144,\n \&quot;title\&quot;: \&quot;Kind Plus Fruit \u0026 Nut Bar - Almond Walnut Macadamia with Peanuts Plus Protein\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2427,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;banana\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/bananas.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2428,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 296213,\n \&quot;title\&quot;: \&quot;Spinach Salad with Roasted Vegetables and Spiced Chickpea\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2429,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 497301,\n \&quot;title\&quot;: \&quot;Shrimp Scampi\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2430,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 581021,\n \&quot;title\&quot;: \&quot;Black Bean Brownies: Fudgy Fun\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1683,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 84\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 68,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 105\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 139,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 46\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 106,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 212\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 490,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 24\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 15,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 23\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 65,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 22\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 26,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 53\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 378,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 33,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 51\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 16,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 5\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 8,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 16\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 816,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 41\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 21,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 32\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 58,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 72,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 144\n }\n ]\n },\n \&quot;day\&quot;: \&quot;6\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2431,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 157259,\n \&quot;title\&quot;: \&quot;Cocoa Protein Pancakes\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2432,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;berries\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/berries-mixed.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;cup\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2433,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 535856,\n \&quot;title\&quot;: \&quot;BLT Chopped Salad\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2434,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 149425,\n \&quot;title\&quot;: \&quot;Herb and Cheddar Cordon Bleu\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2435,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: \n\n#### Parameters\n{\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;brussels sprouts\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/brussels-sprouts.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;cup\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2436,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;wine\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/white-wine.jpg\&quot;,\n \&quot;amount\&quot;: 5,\n \&quot;unit\&quot;: \&quot;ounces\&quot;\n }\n ]\n }\n }\n ]\n },\n {\n \&quot;nutritionSummary\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 1442,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 72\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 69,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 106\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 147,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 49\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 73,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 147\n }\n ]\n },\n \&quot;nutritionSummaryBreakfast\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 444,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 22\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 12,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 51,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 38,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 76\n }\n ]\n },\n \&quot;nutritionSummaryLunch\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 406,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 20\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 17,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 26\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 56,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 10,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 21\n }\n ]\n },\n \&quot;nutritionSummaryDinner\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 593,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 30\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 40,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 62\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 41,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 14\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 25,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 50\n }\n ]\n },\n \&quot;day\&quot;: \&quot;7\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 2437,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 619085,\n \&quot;title\&quot;: \&quot;Protein Packed Healthy French Toast with Chocolate and Peanut Butter {Super Simple, Whole Wheat}\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2438,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;name\&quot;: \&quot;\&quot;,\n \&quot;servings\&quot;: \&quot;1\&quot;,\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;orange\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/orange.jpg\&quot;,\n \&quot;amount\&quot;: 1,\n \&quot;unit\&quot;: \&quot;\&quot;\n }\n ]\n }\n },\n {\n \&quot;id\&quot;: 2439,\n \&quot;slot\&quot;: 2,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 535563,\n \&quot;title\&quot;: \&quot;Black Bean Quinoa Salad\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2440,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 590570,\n \&quot;title\&quot;: \&quot;Asian Beef Lettuce Wraps\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;id\&quot;: 2441,\n \&quot;slot\&quot;: 3,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 146191,\n \&quot;title\&quot;: \&quot;Lindt Dark Chocolate\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n }\n ]\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Add Meal Plan Template\nAdd a meal plan template for a user.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/{username}/templates\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request Body\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/dsky/templates\n\n```\n{\n \&quot;name\&quot;: \&quot;My new meal plan template\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;day\&quot;: 1,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;RECIPE\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 296213,\n \&quot;servings\&quot;: 2,\n \&quot;title\&quot;: \&quot;Spinach Salad with Roasted Vegetables and Spiced Chickpea\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;day\&quot;: 2,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;PRODUCT\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 183433,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Ahold Lasagna with Meat Sauce\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;\n }\n },\n {\n \&quot;day\&quot;: 3,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;MENU_ITEM\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 378557,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Pizza 73 BBQ Steak Pizza, 9\&quot;,\n \&quot;imageType\&quot;: \&quot;png\&quot;\n }\n },\n {\n \&quot;day\&quot;: 4,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;CUSTOM_FOOD\&quot;,\n \&quot;value\&quot;: {\n \&quot;id\&quot;: 348,\n \&quot;servings\&quot;: 1,\n \&quot;title\&quot;: \&quot;Aldi Spicy Cashews - 30g\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/cashews.jpg\&quot;\n }\n },\n {\n \&quot;day\&quot;: 5,\n \&quot;slot\&quot;: 1,\n \&quot;position\&quot;: 0,\n \&quot;type\&quot;: \&quot;INGREDIENTS\&quot;,\n \&quot;value\&quot;: {\n \&quot;ingredients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;1 banana\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;coffee\&quot;,\n \&quot;unit\&quot;: \&quot;cup\&quot;,\n \&quot;amount\&quot;: \&quot;1\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/brewed-coffee.jpg\&quot;\n }\n ]\n }\n }\n ],\n \&quot;publishAsPublic\&quot;: false\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Delete Meal Plan Template\nDelete a meal plan template for a user.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/{username}/templates/{id}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`id`** | number | 15678 | The shopping list item id. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/dsky/templates/128?hash\u003d4b5v4398573406\n\n```\n{\n \&quot;status\&quot;: \&quot;success\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Shopping List\nGet the current shopping list for the given user.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/{username}/shopping-list\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/mealplanner/dsky/shopping-list\n\n```\n{\n \&quot;aisles\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 115388,\n \&quot;name\&quot;: \&quot;baking powder\&quot;,\n \&quot;measures\&quot;: {\n \&quot;original\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;package\&quot;\n },\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;pkg\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;pkg\&quot;\n }\n },\n \&quot;pantryItem\&quot;: false,\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;cost\&quot;: 0.71,\n \&quot;ingredientId\&quot;: 18369\n }\n ]\n }\n ],\n \&quot;cost\&quot;: 1.43,\n \&quot;startDate\&quot;: 1588291200,\n \&quot;endDate\&quot;: 1588896000\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Generate Shopping List\nGenerate the shopping list for a user from the meal planner in a given time frame.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/{username}/shopping-list/{start-date}/{end-date}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`start-date`** | string | 2020-06-01 | The start date in the format yyyy-mm-dd. |\n| **`end-date`** | string | 2020-06-07 | The end date in the format yyyy-mm-dd. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/dsky/shopping-list/2020-06-01/2020-06-07?hash\u003d4b5v4398573406\n\n```\n{\n \&quot;aisles\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 115388,\n \&quot;name\&quot;: \&quot;baking powder\&quot;,\n \&quot;measures\&quot;: {\n \&quot;original\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;package\&quot;\n },\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;pkg\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;pkg\&quot;\n }\n },\n \&quot;pantryItem\&quot;: false,\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;cost\&quot;: 0.71,\n \&quot;ingredientId\&quot;: 18369\n }\n ]\n }\n ],\n \&quot;cost\&quot;: 0.71,\n \&quot;startDate\&quot;: 1588291200,\n \&quot;endDate\&quot;: 1588896000\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Compute Shopping List\nCompute a shopping list from a set of simple foods. This endpoint does not require usernames.\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/shopping-list/compute\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\nExample Request and Body\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/shopping-list/compute\n\n```\n{\n \&quot;items\&quot;: [\n \&quot;4 lbs tomatoes\&quot;,\n \&quot;10 tomatoes\&quot;,\n \&quot;20 Tablespoons Olive Oil\&quot;,\n \&quot;6 tbsp Olive Oil\&quot;\n ]\n}\n```\n\nExample Response\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/shopping-list/compute\n\n```\n{\n \&quot;aisles\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Pantry Items\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;name\&quot;: \&quot;olive oil\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 364.0,\n \&quot;unit\&quot;: \&quot;ml\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 12.4,\n \&quot;unit\&quot;: \&quot;fl oz\&quot;\n }\n },\n \&quot;pantryItem\&quot;: true,\n \&quot;aisle\&quot;: \&quot;Pantry Items\&quot;,\n \&quot;cost\&quot;: 333.55,\n \&quot;ingredientId\&quot;: 4053\n }\n ]\n },\n {\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;name\&quot;: \&quot;tomatoes\&quot;,\n \&quot;measures\&quot;: {\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 3044.4,\n \&quot;unit\&quot;: \&quot;g\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 6.8,\n \&quot;unit\&quot;: \&quot;lb\&quot;\n }\n },\n \&quot;pantryItem\&quot;: false,\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;cost\&quot;: 532.21,\n \&quot;ingredientId\&quot;: 11529\n }\n ]\n }\n ],\n \&quot;cost\&quot;: 1326.62\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Connect User\nIn order to call user-specific endpoints, you need to connect your app\u0027s users to spoonacular users.\n\nJust call this endpoint with your user\u0027s information and you will get back a username and hash that you must save on your side. In future requests that you make on this user\u0027s behalf you simply pass their username and hash alongside your API key.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nPOST\n\nhttps://api.spoonacular.com/users/connect\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`(post body)`** | string | { \&quot;username\&quot;: \&quot;cool user\&quot;,} | A json body. |\n\nExample Request Body\n\nPOST\n\nhttps://api.spoonacular.com/users/connect\n\n```\n{\n \&quot;username\&quot;: \&quot;your user\u0027s name\&quot;,\n \&quot;firstName\&quot;: \&quot;your user\u0027s first name\&quot;,\n \&quot;lastName\&quot;: \&quot;your user\u0027s last name\&quot;,\n \&quot;email\&quot;: \&quot;your user\u0027s email\&quot;\n}\n```\n\nThe response will give you the corresponding spoonacular usernamem, the password with which the user can log in to spoonacular.com, and the hash. Save this information permanently on your end and connect it with your user.\n\n```\n{\n \&quot;username\&quot;: \&quot;api_123_user\&quot;,\n \&quot;spoonacularPassword\&quot;: \&quot;meadwith31grapejam\&quot;,\n \&quot;hash\&quot;: \&quot;q572587bq2405724q05\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Add to Shopping List\nAdd an item to the current shopping list of a user.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/{username}/shopping-list/items\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request Body\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/dsky/shopping-list/items\n\n```\n{\n \&quot;item\&quot;: \&quot;1 package baking powder\&quot;,\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;parse\&quot;: true\n}\n```\n\nThe field `aisle` is optional and will be added if not given.\n\nSet `parse` false if you want to put a non-food item to the shopping list.\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/mealplanner/dsky/shopping-list/items\n\n```\n{\n \&quot;aisles\&quot;: [\n {\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;items\&quot;: [\n {\n \&quot;id\&quot;: 115388,\n \&quot;name\&quot;: \&quot;baking powder\&quot;,\n \&quot;measures\&quot;: {\n \&quot;original\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;package\&quot;\n },\n \&quot;metric\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;pkg\&quot;\n },\n \&quot;us\&quot;: {\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;pkg\&quot;\n }\n },\n \&quot;pantryItem\&quot;: false,\n \&quot;aisle\&quot;: \&quot;Baking\&quot;,\n \&quot;cost\&quot;: 0.71,\n \&quot;ingredientId\&quot;: 18369\n }\n ]\n }\n ],\n \&quot;cost\&quot;: 0.71,\n \&quot;startDate\&quot;: 1588291200,\n \&quot;endDate\&quot;: 1588896000\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Delete from Shopping List\nDelete an item from the current shopping list of the user.\n\nRead more about [working with the meal planner](https://spoonacular.com/spoonacular.com#Working-with-the-Meal-Planner).\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/{username}/shopping-list/items/{id}\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`username`** | string | dsky | The username. |\n| **`id`** | number | 15678 | The shopping list item id. |\n| **`hash`** | string | 4b5v4398573406 | The private hash for the username. |\n\nExample Request and Response\n\nDELETE\n\nhttps://api.spoonacular.com/mealplanner/dsky/shopping-list/items/15678?hash\u003d4b5v4398573406\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Dish Pairing for Wine\nFind a dish that goes well with a given wine.\n\nGET\n\nhttps://api.spoonacular.com/food/wine/dishes\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`wine`** | string | malbec | The type of wine that should be paired, e.g. \&quot;merlot\&quot;, \&quot;riesling\&quot;, or \&quot;malbec\&quot;. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/wine/dishes?wine\u003dmalbec\n\n```\n{\n \&quot;pairings\&quot;: [\n \&quot;stew\&quot;,\n \&quot;steak\&quot;,\n \&quot;chili\&quot;,\n \&quot;burger\&quot;\n ],\n \&quot;text\&quot;: \&quot;Malbec is a dry red wine which is bold and full bodied. It goes especially well with round steak, tri tip steak, steak, boneless pork chops, and pizza burger.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Wine Pairing\nFind a wine that goes well with a food. Food can be a dish name (\&quot;steak\&quot;), an ingredient name (\&quot;salmon\&quot;), or a cuisine (\&quot;italian\&quot;).\n\nGET\n\nhttps://api.spoonacular.com/food/wine/pairing\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`food`** | string | steak | The food to get a pairing for. This can be a dish (\&quot;steak\&quot;), an ingredient (\&quot;salmon\&quot;), or a cuisine (\&quot;italian\&quot;). |\n| `maxPrice` | number | 50 | The maximum price for the specific wine recommendation in USD. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/wine/pairing?food\u003dsteak\n\n```\n{\n \&quot;pairedWines\&quot;: [\n \&quot;merlot\&quot;,\n \&quot;cabernet sauvignon\&quot;,\n \&quot;pinot noir\&quot;\n ],\n \&quot;pairingText\&quot;: \&quot;Merlot, Cabernet Sauvignon, and Pinot Noir are my top picks for Steak. After all, beef and red wine are a classic combination. Generally, leaner steaks go well with light or medium-bodied reds, such as pinot noir or merlot, while fattier steaks can handle a bold red, such as cabernet sauvingnon. The Sterling Vineyards Merlot with a 5 out of 5 star rating seems like a good match. It costs about 29 dollars per bottle.\&quot;,\n \&quot;productMatches\&quot;: [\n {\n \&quot;id\&quot;: 428278,\n \&quot;title\&quot;: \&quot;Sterling Vineyards Merlot\&quot;,\n \&quot;averageRating\&quot;: 1.0,\n \&quot;description\&quot;: null,\n \&quot;imageUrl\&quot;: \&quot;https://img.spoonacular.com/products/428278-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://www.amazon.com/2014-Sterling-Vineyards-Valley-Merlot/dp/B071FP8NPG?tag\u003dspoonacular-20\&quot;,\n \&quot;price\&quot;: \&quot;$28.99\&quot;,\n \&quot;ratingCount\&quot;: 1.0,\n \&quot;score\&quot;: 0.75\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Wine Description\nGet a simple description of a certain wine, e.g. \&quot;malbec\&quot;, \&quot;riesling\&quot;, or \&quot;merlot\&quot;.\n\nGET\n\nhttps://api.spoonacular.com/food/wine/description\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`wine`** | string | merlot | The name of the wine that should be paired, e.g. \&quot;merlot\&quot;, \&quot;riesling\&quot;, or \&quot;malbec\&quot;. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/wine/description?wine\u003dmerlot\n\n```\n{\n \&quot;wineDescription\&quot;: \&quot;Merlot is a dry red wine which is smooth and medium bodied.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Wine Recommendation\nGet a specific wine recommendation (concrete product) for a given wine type, e.g. \&quot;merlot\&quot;.\n\nGET\n\nhttps://api.spoonacular.com/food/wine/recommendation\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`wine`** | string | merlot | The type of wine to get a specific product recommendation for. |\n| `maxPrice` | number | 50 | The maximum price for the specific wine recommendation in USD. |\n| `minRating` | number | 0.7 | The minimum rating of the recommended wine between 0 and 1. For example, 0.8 equals 4 out of 5 stars. |\n| `number` | number | 3 | The number of wine recommendations expected (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/wine/recommendation?wine\u003dmerlot\u0026number\u003d2\n\n```\n{\n \&quot;recommendedWines\&quot;: [\n {\n \&quot;id\&quot;: 447938,\n \&quot;title\&quot;: \&quot;Rombauer Merlot\&quot;,\n \&quot;averageRating\&quot;: 0.96,\n \&quot;description\&quot;: \&quot;Enticing and lively red color; beautifully aromatic with black cherry and ripe plum. On the palate a purity of blackcurrant, cedar and mint flavors blend together seamlessly. Soft and supple, this wine has a medium-bodied mouth-feel with plush tannins that integrate with the generous finish.Our favorite pairings for this wine include chicken parmesan, cedar-planked salmon over wild rice, and mushroom pizza.\&quot;,\n \&quot;imageUrl\&quot;: \&quot;https://img.spoonacular.com/products/447938-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://click.linksynergy.com/deeplink?id\u003d*QCiIS6t4gA\u0026mid\u003d2025\u0026murl\u003dhttps%3A%2F%2Fwww.wine.com%2Fproduct%2Frombauer-merlot-2008%2F116883\&quot;,\n \&quot;price\&quot;: \&quot;$25.59\&quot;,\n \&quot;ratingCount\&quot;: 5.0,\n \&quot;score\&quot;: 0.8975\n },\n {\n \&quot;id\&quot;: 430475,\n \&quot;title\&quot;: \&quot;NV The Big Kahuna Merlot\&quot;,\n \&quot;averageRating\&quot;: 0.9,\n \&quot;description\&quot;: \&quot;A ripe and rounded Merlot with notes of plum, blackberry, and hint of spice.\&quot;,\n \&quot;imageUrl\&quot;: \&quot;https://img.spoonacular.com/products/430475-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://www.amazon.com/Big-Kahuna-Merlot-Red-Wine/dp/B01F5XPTUW?tag\u003dspoonacular-20\&quot;,\n \&quot;price\&quot;: \&quot;$6.99\&quot;,\n \&quot;ratingCount\&quot;: 4.0,\n \&quot;score\&quot;: 0.823076923076923\n }\n ],\n \&quot;totalFound\&quot;: 21\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper wine returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Image Classification by File\nClassify a food image. You can play around with that endpoint!\n\nSee here for a [full list of supported categories](https://spoonacular.com/food-api/docs#Image-Classification-Categories).\n\nPOST\n\nhttps://api.spoonacular.com/food/images/classify\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`file`** | binary | - | The binary file of the image. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/food/images/classify\n\n```\n{\n \&quot;category\&quot;: \&quot;burger\&quot;,\n \&quot;probability\&quot;: 0.91354\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n2 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Image Classification by URL\nClassify a food image. You can play around with that endpoint!\n\nSee here for a [full list of supported categories](https://spoonacular.com/food-api/docs#Image-Classification-Categories).\n\nGET\n\nhttps://api.spoonacular.com/food/images/classify\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`imageUrl`** | string | https://img.spoonacular.com/recipes/635350-240x150.jpg | The URL of the image to be classified. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/images/classify?imageUrl\u003dhttps://img.spoonacular.com/recipes/635350-240x150.jpg\n\n```\n{\n \&quot;category\&quot;: \&quot;burger\&quot;,\n \&quot;probability\&quot;: 0.91354\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n2 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Image Analysis by File\nAnalyze a food image. The API tries to classify the image, guess the nutrition, and find a matching recipes. You can play around with that endpoint!\n\nSee here for a [full list of supported categories](https://spoonacular.com/food-api/docs#Image-Classification-Categories).\n\nPOST\n\nhttps://api.spoonacular.com/food/images/analyze\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`file`** | binary | - | The binary file of the image. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/food/images/analyze\n\n```\n{\n \&quot;nutrition\&quot;: {\n \&quot;recipesUsed\&quot;: 25,\n \&quot;calories\&quot;: {\n \&quot;value\&quot;: 508,\n \&quot;unit\&quot;: \&quot;calories\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 428.97,\n \&quot;max\&quot;: 571.98\n },\n \&quot;standardDeviation\&quot;: 182.4\n },\n \&quot;fat\&quot;: {\n \&quot;value\&quot;: 21,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 21.29,\n \&quot;max\&quot;: 32.95\n },\n \&quot;standardDeviation\&quot;: 14.88\n },\n \&quot;protein\&quot;: {\n \&quot;value\&quot;: 29,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 22.58,\n \&quot;max\&quot;: 33.7\n },\n \&quot;standardDeviation\&quot;: 14.19\n },\n \&quot;carbs\&quot;: {\n \&quot;value\&quot;: 40,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 29.74,\n \&quot;max\&quot;: 44.96\n },\n \&quot;standardDeviation\&quot;: 19.42\n }\n },\n \&quot;category\&quot;: {\n \&quot;name\&quot;: \&quot;burger\&quot;,\n \&quot;probability\&quot;: 0.99\n },\n \&quot;recipes\&quot;: [\n {\n \&quot;id\&quot;: 477749,\n \&quot;title\&quot;: \&quot;Burger Club: Award-Winning Logan County Burger Patty Melt\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.barbarabakes.com/2010/05/burger-club-award-winning-logan-county/\&quot;\n },\n {\n \&quot;id\&quot;: 493632,\n \&quot;title\&quot;: \&quot;New York Burger Week: Pretzel Burger with Beer Cheese\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.foodrepublic.com/2013/09/23/new-york-burger-week-pretzel-burger-beer-cheese\&quot;\n },\n {\n \&quot;id\&quot;: 23359,\n \&quot;title\&quot;: \&quot;Beef Burger Recipe (elvis Burger With Salad \u0026 Gherkin)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.jamieoliver.com/recipes/beef-recipes/elvis-burger-with-pickled-gherkin\&quot;\n },\n {\n \&quot;id\&quot;: 149115,\n \&quot;title\&quot;: \&quot;Surf N\u0027 Turf Burger (Grilled Burger with Lobster and Bacon)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.seriouseats.com/recipes/2013/06/lobster-bacon-burger-recipe.html\&quot;\n },\n {\n \&quot;id\&quot;: 861442,\n \&quot;title\&quot;: \&quot;Istanbul-Style Wet Burger (Islak Burger)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.epicurious.com/recipes/food/views/istanbul-style-wet-burger-islak-burger?mbid\u003dnl_02272017_Daily_CTN_PM+(1)\&quot;\n },\n {\n \&quot;id\&quot;: 600423,\n \&quot;title\&quot;: \&quot;Rajma Burger (Red Kidney Beans Burger)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.spiceupthecurry.com/rajma-burger-red-kidney-beans-burger/\&quot;\n },\n {\n \&quot;id\&quot;: 493634,\n \&quot;title\&quot;: \&quot;Chicago Burger Week: The Chicago Deep Dish Pizza Burger\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.foodrepublic.com/2013/09/30/chicago-burger-week-chicago-deep-dish-pizza-burger\&quot;\n },\n {\n \&quot;id\&quot;: 487346,\n \&quot;title\&quot;: \&quot;aloo tikki burger , north indian style aloo tikki burger\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.vegrecipesofindia.com/aloo-tikki-burger/\&quot;\n },\n {\n \&quot;id\&quot;: 607330,\n \&quot;title\&quot;: \&quot;Aloo Tikki Burger | How to make aloo tikki burger at home\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;sourceUrl\&quot;: \&quot;http://www.spiceupthecurry.com/aloo-tikki-burger-recipe/\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n4 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Image Analysis by URL\nAnalyze a food image. The API tries to classify the image, guess the nutrition, and find a matching recipes. You can play around with that endpoint!\n\nSee here for a [full list of supported categories](https://spoonacular.com/food-api/docs#Image-Classification-Categories).\n\nGET\n\nhttps://api.spoonacular.com/food/images/analyze\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`imageUrl`** | string | https://img.spoonacular.com/recipes/635350-240x150.jpg | The URL of the image to be analyzed. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/images/analyze?imageUrl\u003dhttps://img.spoonacular.com/recipes/635350-240x150.jpg\n\n```\n{\n \&quot;nutrition\&quot;: {\n \&quot;recipesUsed\&quot;: 25,\n \&quot;calories\&quot;: {\n \&quot;value\&quot;: 508,\n \&quot;unit\&quot;: \&quot;calories\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 428.97,\n \&quot;max\&quot;: 571.98\n },\n \&quot;standardDeviation\&quot;: 182.4\n },\n \&quot;fat\&quot;: {\n \&quot;value\&quot;: 21,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 21.29,\n \&quot;max\&quot;: 32.95\n },\n \&quot;standardDeviation\&quot;: 14.88\n },\n \&quot;protein\&quot;: {\n \&quot;value\&quot;: 29,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 22.58,\n \&quot;max\&quot;: 33.7\n },\n \&quot;standardDeviation\&quot;: 14.19\n },\n \&quot;carbs\&quot;: {\n \&quot;value\&quot;: 40,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;confidenceRange95Percent\&quot;: {\n \&quot;min\&quot;: 29.74,\n \&quot;max\&quot;: 44.96\n },\n \&quot;standardDeviation\&quot;: 19.42\n }\n },\n \&quot;category\&quot;: {\n \&quot;name\&quot;: \&quot;burger\&quot;,\n \&quot;probability\&quot;: 0.9998999999999999\n },\n \&quot;recipes\&quot;: [\n {\n \&quot;id\&quot;: 477749,\n \&quot;title\&quot;: \&quot;Burger Club: Award-Winning Logan County Burger Patty Melt\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.barbarabakes.com/2010/05/burger-club-award-winning-logan-county/\&quot;\n },\n {\n \&quot;id\&quot;: 493632,\n \&quot;title\&quot;: \&quot;New York Burger Week: Pretzel Burger with Beer Cheese\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.foodrepublic.com/2013/09/23/new-york-burger-week-pretzel-burger-beer-cheese\&quot;\n },\n {\n \&quot;id\&quot;: 23359,\n \&quot;title\&quot;: \&quot;Beef Burger Recipe (elvis Burger With Salad \u0026 Gherkin)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.jamieoliver.com/recipes/beef-recipes/elvis-burger-with-pickled-gherkin\&quot;\n },\n {\n \&quot;id\&quot;: 149115,\n \&quot;title\&quot;: \&quot;Surf N\u0027 Turf Burger (Grilled Burger with Lobster and Bacon)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.seriouseats.com/recipes/2013/06/lobster-bacon-burger-recipe.html\&quot;\n },\n {\n \&quot;id\&quot;: 861442,\n \&quot;title\&quot;: \&quot;Istanbul-Style Wet Burger (Islak Burger)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.epicurious.com/recipes/food/views/istanbul-style-wet-burger-islak-burger?mbid\u003dnl_02272017_Daily_CTN_PM+(1)\&quot;\n },\n {\n \&quot;id\&quot;: 600423,\n \&quot;title\&quot;: \&quot;Rajma Burger (Red Kidney Beans Burger)\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.spiceupthecurry.com/rajma-burger-red-kidney-beans-burger/\&quot;\n },\n {\n \&quot;id\&quot;: 493634,\n \&quot;title\&quot;: \&quot;Chicago Burger Week: The Chicago Deep Dish Pizza Burger\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.foodrepublic.com/2013/09/30/chicago-burger-week-chicago-deep-dish-pizza-burger\&quot;\n },\n {\n \&quot;id\&quot;: 487346,\n \&quot;title\&quot;: \&quot;aloo tikki burger , north indian style aloo tikki burger\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.vegrecipesofindia.com/aloo-tikki-burger/\&quot;\n },\n {\n \&quot;id\&quot;: 607330,\n \&quot;title\&quot;: \&quot;Aloo Tikki Burger | How to make aloo tikki burger at home\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;url\&quot;: \&quot;http://www.spiceupthecurry.com/aloo-tikki-burger-recipe/\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n4 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Quick Answer\nAnswer a nutrition related natural language question.\n\nGET\n\nhttps://api.spoonacular.com/recipes/quickAnswer\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`q`** | string | How much vitamin c is in 2 apples? | The nutrition related question. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/recipes/quickAnswer?q\u003dHow+much+vitamin+c+is+in+2+apples\n\n```\n{\n \&quot;answer\&quot;: \&quot;There are 16.74 mg of Vitamin C in 2 apples. This covers about 20% of your daily needs of Vitamin C.\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/apple.jpg\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Detect Food in Text\nTake any text and find all mentions of food contained within it. This task is also called **Named Entity Recognition (NER)**. In this case, the entities are foods. Either dishes, such as pizza or cheeseburger, or ingredients, such as cucumber or almonds.\n\nPOST\n\nhttps://api.spoonacular.com/food/detect\n\n#### Headers\nRequest Headers:\n\n- `Content-Type: application/x-www-form-urlencoded`\n\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`text`** | string | I like to eat delicious tacos. The only thing better is a cheeseburger with cheddar. But then again, pizza with pepperoni, mushrooms, and tomatoes is so good too! | The text in which food items, such as dish names and ingredients, should be detected in. |\n\nExample Request and Response\n\nPOST\n\nhttps://api.spoonacular.com/food/detect\n\n```\n{\n \&quot;annotations\&quot;: [\n {\n \&quot;annotation\&quot;: \&quot;cheeseburger\&quot;,\n \&quot;image\&quot;: \&quot;https://spoonacular.com/menuItemImages/cheeseburger.jpg\&quot;,\n \&quot;tag\&quot;: \&quot;dish\&quot;\n },\n {\n \&quot;annotation\&quot;: \&quot;mushrooms\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/mushrooms.png\&quot;,\n \&quot;tag\&quot;: \&quot;ingredient\&quot;\n },\n {\n \&quot;annotation\&quot;: \&quot;pepperoni\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/pepperoni.png\&quot;,\n \&quot;tag\&quot;: \&quot;ingredient\&quot;\n },\n {\n \&quot;annotation\&quot;: \&quot;tomatoes\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/tomato.png\&quot;,\n \&quot;tag\&quot;: \&quot;ingredient\&quot;\n },\n {\n \&quot;annotation\&quot;: \&quot;cheddar\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/cheddar-cheese.png\&quot;,\n \&quot;tag\&quot;: \&quot;ingredient\&quot;\n },\n {\n \&quot;annotation\&quot;: \&quot;tacos\&quot;,\n \&quot;image\&quot;: \&quot;https://spoonacular.com/menuItemImages/taco-isolated.jpg\&quot;,\n \&quot;tag\&quot;: \&quot;dish\&quot;\n },\n {\n \&quot;annotation\&quot;: \&quot;pizza\&quot;,\n \&quot;image\&quot;: \&quot;https://spoonacular.com/menuItemImages/cheese-pizza.png\&quot;,\n \&quot;tag\&quot;: \&quot;dish\&quot;\n }\n ]\n}\n```\n\n#### Interactive Demo\nChange the text in the box and press \&quot;Detect\&quot;. The detected dishes will be displayed in red and the detected ingredients in purple.\n\nDetect\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Site Content\nSearch spoonacular\u0027s site content. You\u0027ll be able to find everything that you could also find using the search suggestions on spoonacular.com. This is a suggest API so you can send partial strings as queries.\n\nGET\n\nhttps://api.spoonacular.com/food/site/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | past | The query to search for. You can also use partial queries such as \&quot;spagh\&quot; to already find spaghetti recipes, articles, grocery products, and other content. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/site/search?query\u003dpast\n\n```\n{\n \&quot;Articles\&quot;: [\n {\n \&quot;dataPoints\&quot;: [],\n \&quot;image\&quot;: \&quot;https://spoonacular.com/application/frontend/images/academy/vietnamese-cuisine.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/academy/vietnamese\&quot;,\n \&quot;name\&quot;: \&quot;Traditional Vietnamese Recipes\&quot;\n },\n {\n \&quot;dataPoints\&quot;: [],\n \&quot;image\&quot;: \&quot;https://spoonacular.com/application/frontend/images/academy/thai-cuisine.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/academy/thai\&quot;,\n \&quot;name\&quot;: \&quot;Authentic Thai Recipes\&quot;\n },\n {\n \&quot;dataPoints\&quot;: [],\n \&quot;image\&quot;: \&quot;https://spoonacular.com/application/frontend/images/academy/korean-food.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/academy/korean\&quot;,\n \&quot;name\&quot;: \&quot;Typical Korean Recipes\&quot;\n }\n ],\n \&quot;Grocery Products\&quot;: [\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;30 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;2g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;0.0g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;6g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/218909-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/products/vine-ripe-tomato-paste-218909\&quot;,\n \&quot;name\&quot;: \&quot;Vine-ripe Tomato Paste\&quot;\n },\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;30 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;2g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;0.0g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;6g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/178883-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/products/contadina-tomato-paste-178883\&quot;,\n \&quot;name\&quot;: \&quot;Contadina Tomato Paste\&quot;\n },\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;30 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;2g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;0.0g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;6g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/137031-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/products/cento-tomato-paste-137031\&quot;,\n \&quot;name\&quot;: \&quot;Cento Tomato Paste\&quot;\n }\n ],\n \&quot;Menu Items\&quot;: [\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;230 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;1g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;15g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;23g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://spoonacular.com/menuItemImages/stir-fry.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/menu-items/thai-express-stir-fry-chilli-paste-401670\&quot;,\n \&quot;name\&quot;: \&quot;Thai Express Stir-Fry, Chilli Paste\&quot;\n }\n ],\n \&quot;Recipes\&quot;: [\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Cost\&quot;,\n \&quot;value\&quot;: \&quot;$10.51 per serving\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;400 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;9g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;32g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;26g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/224844-556x370.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/recipes/chermoula-paste-224844\&quot;,\n \&quot;name\&quot;: \&quot;Chermoula Paste\&quot;\n },\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Cost\&quot;,\n \&quot;value\&quot;: \&quot;$8.37 per serving\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;3560 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;119g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;319g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;54g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/146847-556x370.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/recipes/lulu-paste-146847\&quot;,\n \&quot;name\&quot;: \&quot;Lulu Paste\&quot;\n },\n {\n \&quot;dataPoints\&quot;: [\n {\n \&quot;key\&quot;: \&quot;Cost\&quot;,\n \&quot;value\&quot;: \&quot;$6.68 per serving\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Calories\&quot;,\n \&quot;value\&quot;: \&quot;990 Calories\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Protein\&quot;,\n \&quot;value\&quot;: \&quot;53g Protein\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Fat\&quot;,\n \&quot;value\&quot;: \&quot;86g Total Fat\&quot;\n },\n {\n \&quot;key\&quot;: \&quot;Carbs\&quot;,\n \&quot;value\&quot;: \&quot;0.82g Carbs\&quot;\n }\n ],\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/84670-556x370.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/recipes/steak-paste-84670\&quot;,\n \&quot;name\&quot;: \&quot;Steak Paste\&quot;\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search All Food\nSearch all food content with one call. That includes recipes, grocery products, menu items, simple foods (ingredients), and food videos.\n\nGET\n\nhttps://api.spoonacular.com/food/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | apple | The search query. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 990). |\n| `number` | number | 10 | The number of expected results (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/search?query\u003dapple\u0026number\u003d2\n\n```\n{\n \&quot;query\&quot;: \&quot;apple\&quot;,\n \&quot;totalResults\&quot;: 5826,\n \&quot;limit\&quot;: 2,\n \&quot;offset\&quot;: 0,\n \&quot;searchResults\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Recipes\&quot;,\n \&quot;totalResults\&quot;: 167,\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 632485,\n \&quot;name\&quot;: \&quot;Apple Cake\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/632485-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/recipes/apple-cake-632485\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 10000,\n \&quot;content\&quot;: \&quot;Apple Cake might be just the dessert you are searching for...\&quot;\n },\n {\n \&quot;id\&quot;: 632522,\n \&quot;name\&quot;: \&quot;Apple Crumble\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/632522-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/recipes/apple-crumble-632522\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 9999,\n \&quot;content\&quot;: \&quot;Apple Crumble might be just the dessert you are searching for...\&quot;\n }\n ]\n },\n {\n \&quot;name\&quot;: \&quot;Products\&quot;,\n \&quot;totalResults\&quot;: 3219,\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 428571,\n \&quot;name\&quot;: \&quot;Pleasant Valley Apple Wine\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/469604-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/products/pleasant-valley-apple-wine-469604\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 10000\n },\n {\n \&quot;id\&quot;: 428573,\n \&quot;name\&quot;: \&quot;NV Georgetown Vineyards Apple Wine\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/products/428573-312x231.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/products/nv-georgetown-vineyards-apple-wine-428573\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 9999\n }\n ]\n },\n {\n \&quot;name\&quot;: \&quot;Menu Items\&quot;,\n \&quot;totalResults\&quot;: 2410,\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 334550,\n \&quot;name\&quot;: \&quot;Old Chicago Applewood Spiced BBQ Chicken Pizza, Chicago Thick, 12 Inch (Slice)\&quot;,\n \&quot;image\&quot;: null,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/menu-items/old-chicago-applewood-spiced-bbq-chicken-pizza-chicago-thick-12-inch--334550\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 10000\n },\n {\n \&quot;id\&quot;: 422013,\n \&quot;name\&quot;: \&quot;Huddle House Apple Cobbler a la mode\&quot;,\n \&quot;image\&quot;: null,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/menu-items/huddle-house-apple-cobbler-a-la-mode-422013\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 9999\n }\n ]\n },\n {\n \&quot;name\&quot;: \&quot;Articles\&quot;,\n \&quot;totalResults\&quot;: 28,\n \&quot;results\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Apples\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/braeburn-apples.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/academy/apples\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 90.46\n },\n {\n \&quot;name\&quot;: \&quot;Vinegar\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/ingredients_100x100/red-wine-vinegar.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://spoonacular.com/academy/vinegar\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 23.80\n }\n ]\n },\n {\n \&quot;name\&quot;: \&quot;Videos\&quot;,\n \&quot;totalResults\&quot;: 2,\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: \&quot;G0HENy59YkE\&quot;,\n \&quot;name\&quot;: \&quot;Pineapple Bundt Cake\&quot;,\n \&quot;image\&quot;: \&quot;https://i.ytimg.com/vi/G0HENy59YkE/hqdefault.jpg\&quot;,\n \&quot;link\&quot;: \&quot;https://www.youtube.com/watch?v\u003dG0HENy59YkE\&quot;,\n \&quot;type\&quot;: \&quot;YOUTUBE_VIDEO\&quot;,\n \&quot;relevance\&quot;: 10000,\n \&quot;content\&quot;: \&quot;FULL RECIPE HERE: https://tatyanaseverydayfood.com/recipe-items/pineapple-bundt-cake/...\&quot;\n },\n {\n \&quot;id\&quot;: \&quot;xEENgO5Z5To\&quot;,\n \&quot;name\&quot;: \&quot;Pineapple Shrimp Tacos\&quot;,\n \&quot;image\&quot;: \&quot;https://i.ytimg.com/vi/xEENgO5Z5To/mqdefault.jpg\&quot;,\n \&quot;link\&quot;: null,\n \&quot;type\&quot;: \&quot;YOUTUBE_VIDEO\&quot;,\n \&quot;relevance\&quot;: 9999,\n \&quot;content\&quot;: \&quot;RECIPE: Below in description.\\nThese Pineapple Shrimp Tacos cook in 5 minutes and assembly is a breeze...\&quot;\n }\n ]\n },\n {\n \&quot;name\&quot;: \&quot;Simple Foods\&quot;,\n \&quot;totalResults\&quot;: 2,\n \&quot;results\&quot;: [\n {\n \&quot;id\&quot;: 78541,\n \&quot;name\&quot;: \&quot;apple\&quot;,\n \&quot;image\&quot;: \&quot;apple.jpg\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 10000\n },\n {\n \&quot;id\&quot;: 8782,\n \&quot;name\&quot;: \&quot;applesauce\&quot;,\n \&quot;image\&quot;: \&quot;applesauce.png\&quot;,\n \&quot;type\&quot;: \&quot;HTML\&quot;,\n \&quot;relevance\&quot;: 9999\n }\n ]\n }\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\nand\n\n0.01 points\n\nper result returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Search Food Videos\nFind recipe and other food related videos. This endpoint searches YouTube for relevant recipe or other food-related videos. Please be sure to read the [YouTube Terms of Service](https://www.youtube.com/static?template\u003dterms) before embedding videos into your site or app.\n\nGET\n\nhttps://api.spoonacular.com/food/videos/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | chicken soup | The search query. |\n| `type` | string | main course | The type of the recipes. See a full [list of supported meal types](https://spoonacular.com/food-api/docs#Meal-Types). |\n| `cuisine` | string | italian | The cuisine(s) of the recipes. One or more, comma separated. See a full [list of supported cuisines](https://spoonacular.com/food-api/docs#Cuisines). |\n| `diet` | string | vegetarian | The diet for which the recipes must be suitable. See a full [list of supported diets](https://spoonacular.com/food-api/docs#Diets). |\n| `includeIngredients` | string | tomato,cheese | A comma-separated list of ingredients that the recipes should contain. |\n| `excludeIngredients` | string | eggs | A comma-separated list of ingredients or ingredient types that the recipes must not contain. |\n| `minLength` | number | 0 | Minimum video length in seconds. |\n| `maxLength` | number | 999 | Maximum video length in seconds. |\n| `offset` | number | 0 | The number of results to skip (between 0 and 900). |\n| `number` | number | 10 | The number of results to return (between 1 and 100). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/videos/search?query\u003dpasta\u0026number\u003d2\n\n```\n{\n \&quot;videos\&quot;: [\n {\n \&quot;title\&quot;: \&quot;8 One-Pot Pastas\&quot;,\n \&quot;length\&quot;: 370,\n \&quot;rating\&quot;: 0.985984219269103,\n \&quot;shortTitle\&quot;: \&quot;8 One-Pot Pastas\&quot;,\n \&quot;thumbnail\&quot;: \&quot;https://i.ytimg.com/vi/YTZGPCCB2FU/mqdefault.jpg\&quot;,\n \&quot;views\&quot;: 550467,\n \&quot;youTubeId\&quot;: \&quot;YTZGPCCB2FU\&quot;\n },\n {\n \&quot;title\&quot;: \&quot;Macaroni salad - pasta salad recipes - healthy recipe channel - quick tasty recipe - cooking channel\&quot;,\n \&quot;length\&quot;: 333,\n \&quot;rating\&quot;: 1.0,\n \&quot;shortTitle\&quot;: \&quot;Macaroni salad\&quot;,\n \&quot;thumbnail\&quot;: \&quot;https://i.ytimg.com/vi/81bn4p8H3Kg/mqdefault.jpg\&quot;,\n \&quot;views\&quot;: 307,\n \&quot;youTubeId\&quot;: \&quot;81bn4p8H3Kg\&quot;\n }\n ],\n \&quot;totalResults\&quot;: 172\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\nand\n\n0.01 points\n\nper video returned.\nLearn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Random Food Joke\nGet a random joke that is related to food. Caution: this is an endpoint for adults!\n\nGET\n\nhttps://api.spoonacular.com/food/jokes/random\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/jokes/random\n\n```\n{\n \&quot;text\&quot;: \&quot;Any salad can be a Caesar salad if you stab it enough.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Random Food Trivia\nReturns random food trivia.\n\nGET\n\nhttps://api.spoonacular.com/food/trivia/random\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/trivia/random\n\n```\n{\n \&quot;text\&quot;: \&quot;The red food-coloring carmine used in Skittles and other candies is made from boiled cochineal bugs, a type of beetle.\&quot;\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Get Ingredient Information\nUse an ingredient id to get all available information about an ingredient, such as its image and supermarket aisle.\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/{id}/information\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`id`** | number | 9266 | The ingredient id. |\n| `amount` | number | 150 | The amount of this ingredient. |\n| `unit` | string | grams | The unit for the given amount. |\n| `locale` | string | en\\_US | The display name of the returned category, supported is en\\_US (for American English) and en\\_GB (for British English). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/ingredients/9266/information?amount\u003d1\n\n```\n{\n \&quot;id\&quot;: 9266,\n \&quot;original\&quot;: \&quot;pineapples\&quot;,\n \&quot;originalName\&quot;: \&quot;pineapples\&quot;,\n \&quot;name\&quot;: \&quot;pineapples\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;\&quot;,\n \&quot;unitShort\&quot;: \&quot;\&quot;,\n \&quot;unitLong\&quot;: \&quot;\&quot;,\n \&quot;possibleUnits\&quot;: [\n \&quot;piece\&quot;,\n \&quot;slice\&quot;,\n \&quot;fruit\&quot;,\n \&quot;g\&quot;,\n \&quot;oz\&quot;,\n \&quot;cup\&quot;,\n \&quot;serving\&quot;\n ],\n \&quot;estimatedCost\&quot;: {\n \&quot;value\&quot;: 299.0,\n \&quot;unit\&quot;: \&quot;US Cents\&quot;\n },\n \&quot;consistency\&quot;: \&quot;solid\&quot;,\n \&quot;shoppingListUnits\&quot;: [\n \&quot;pieces\&quot;\n ],\n \&quot;aisle\&quot;: \&quot;Produce\&quot;,\n \&quot;image\&quot;: \&quot;pineapple.jpg\&quot;,\n \&quot;meta\&quot;: [],\n \&quot;nutrition\&quot;: {\n \&quot;nutrients\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Calories\&quot;,\n \&quot;amount\&quot;: 452.5,\n \&quot;unit\&quot;: \&quot;cal\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 22.63\n },\n {\n \&quot;name\&quot;: \&quot;Fat\&quot;,\n \&quot;amount\&quot;: 1.09,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.67\n },\n {\n \&quot;name\&quot;: \&quot;Saturated Fat\&quot;,\n \&quot;amount\&quot;: 0.08,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.51\n },\n {\n \&quot;name\&quot;: \&quot;Carbohydrates\&quot;,\n \&quot;amount\&quot;: 118.74,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 39.58\n },\n {\n \&quot;name\&quot;: \&quot;Net Carbohydrates\&quot;,\n \&quot;amount\&quot;: 106.07,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 38.57\n },\n {\n \&quot;name\&quot;: \&quot;Sugar\&quot;,\n \&quot;amount\&quot;: 89.14,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 99.05\n },\n {\n \&quot;name\&quot;: \&quot;Cholesterol\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.0\n },\n {\n \&quot;name\&quot;: \&quot;Sodium\&quot;,\n \&quot;amount\&quot;: 9.05,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 0.39\n },\n {\n \&quot;name\&quot;: \&quot;Protein\&quot;,\n \&quot;amount\&quot;: 4.89,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 9.77\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin C\&quot;,\n \&quot;amount\&quot;: 432.59,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 524.35\n },\n {\n \&quot;name\&quot;: \&quot;Manganese\&quot;,\n \&quot;amount\&quot;: 8.39,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 419.47\n },\n {\n \&quot;name\&quot;: \&quot;Fiber\&quot;,\n \&quot;amount\&quot;: 12.67,\n \&quot;unit\&quot;: \&quot;g\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 50.68\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin B6\&quot;,\n \&quot;amount\&quot;: 1.01,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 50.68\n },\n {\n \&quot;name\&quot;: \&quot;Copper\&quot;,\n \&quot;amount\&quot;: 1.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 49.78\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin B1\&quot;,\n \&quot;amount\&quot;: 0.72,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 47.66\n },\n {\n \&quot;name\&quot;: \&quot;Folate\&quot;,\n \&quot;amount\&quot;: 162.9,\n \&quot;unit\&quot;: \&quot;µg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 40.73\n },\n {\n \&quot;name\&quot;: \&quot;Potassium\&quot;,\n \&quot;amount\&quot;: 986.45,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 28.18\n },\n {\n \&quot;name\&quot;: \&quot;Magnesium\&quot;,\n \&quot;amount\&quot;: 108.6,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 27.15\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin B3\&quot;,\n \&quot;amount\&quot;: 4.53,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 22.63\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin B5\&quot;,\n \&quot;amount\&quot;: 1.93,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 19.28\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin B2\&quot;,\n \&quot;amount\&quot;: 0.29,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 17.04\n },\n {\n \&quot;name\&quot;: \&quot;Iron\&quot;,\n \&quot;amount\&quot;: 2.62,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 14.58\n },\n {\n \&quot;name\&quot;: \&quot;Calcium\&quot;,\n \&quot;amount\&quot;: 117.65,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 11.77\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin A\&quot;,\n \&quot;amount\&quot;: 524.9,\n \&quot;unit\&quot;: \&quot;IU\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 10.5\n },\n {\n \&quot;name\&quot;: \&quot;Zinc\&quot;,\n \&quot;amount\&quot;: 1.09,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 7.24\n },\n {\n \&quot;name\&quot;: \&quot;Phosphorus\&quot;,\n \&quot;amount\&quot;: 72.4,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 7.24\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin K\&quot;,\n \&quot;amount\&quot;: 6.34,\n \&quot;unit\&quot;: \&quot;Âµg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 6.03\n },\n {\n \&quot;name\&quot;: \&quot;Selenium\&quot;,\n \&quot;amount\&quot;: 0.91,\n \&quot;unit\&quot;: \&quot;Âµg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.29\n },\n {\n \&quot;name\&quot;: \&quot;Vitamin E\&quot;,\n \&quot;amount\&quot;: 0.18,\n \&quot;unit\&quot;: \&quot;mg\&quot;,\n \&quot;percentOfDailyNeeds\&quot;: 1.21\n }\n ],\n \&quot;properties\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Glycemic Index\&quot;,\n \&quot;amount\&quot;: 58.67,\n \&quot;unit\&quot;: \&quot;\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Glycemic Load\&quot;,\n \&quot;amount\&quot;: 62.23,\n \&quot;unit\&quot;: \&quot;\&quot;\n }\n ],\n \&quot;flavonoids\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Cyanidin\&quot;,\n \&quot;amount\&quot;: 0.0,\n \&quot;unit\&quot;: \&quot;mg\&quot;\n }\n ],\n \&quot;caloricBreakdown\&quot;: {\n \&quot;percentProtein\&quot;: 3.88,\n \&quot;percentFat\&quot;: 1.94,\n \&quot;percentCarbs\&quot;: 94.18\n },\n \&quot;weightPerServing\&quot;: {\n \&quot;amount\&quot;: 905,\n \&quot;unit\&quot;: \&quot;g\&quot;\n }\n },\n \&quot;categoryPath\&quot;: [\n \n\n#### Parameters\n\&quot;tropical fruit\&quot;,\n \&quot;fruit\&quot;\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Talk to Chatbot\nThis endpoint can be used to have a conversation about food with the spoonacular chatbot. Use the \&quot;Conversation Suggests\&quot; endpoint to show your user what he or she can say.\n\nGET\n\nhttps://api.spoonacular.com/food/converse\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`text`** | string | donut recipes | The request / question / answer from the user to the chatbot. |\n| `contextId` | string | 342938 | An arbitrary globally unique id for your conversation. The conversation can contain states so you should pass your context id if you want the bot to be able to remember the conversation. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/converse?text\u003dtell+me+a+joke\n\n```\n{\n \&quot;answerText\&quot;: \&quot;Baby, if you were a fruit you\u0027d be a fineapple.\&quot;,\n \&quot;media\&quot;: []\n}\n```\n\n#### Learn more\nSee how you can [write your own chatbot](https://spoonacular.com/spoonacular.com#write-a-chatbot) or test spoonacular\u0027s [food chatbot](https://spoonacular.com/chatbot).\n\n#### Quotas\nCalling this endpoint requires\n\n1 point\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Conversation Suggests\nThis endpoint returns suggestions for things the user can say or ask the chatbot.\n\nGET\n\nhttps://api.spoonacular.com/food/converse/suggest\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| **`query`** | string | tell | A (partial) query from the user. The endpoint will return if it matches topics it can talk about. |\n| `number` | number | 5 | The number of suggestions to return (between 1 and 25). |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/converse/suggest?query\u003dtell\u0026number\u003d5\n\n```\n{\n \&quot;suggests\&quot;: {\n \&quot;_\&quot;: [\n {\n \&quot;name\&quot;: \&quot;Tell me something funny\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Tell me a food fact\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Tell me a joke\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Tell me food trivia\&quot;\n },\n {\n \&quot;name\&quot;: \&quot;Tell me a fact about food\&quot;\n }\n ]\n },\n \&quot;words\&quot;: []\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n0.1 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Nutrition\nFood objects (whole foods, recipes, grocery products, menu items) have nutrition. Endpoints that expose nutritional information group nutrition into three categories: Nutrients (Macro and Micro), Food Properties, and Flavonoids.\n\n### Nutrients - Macro and Micro Nutrients\n- Calories (in kcal)\n- Fat (in g)\n- Trans Fat (in g)\n- Saturated Fat (in g)\n- Mono Unsaturated Fat (in g)\n- Poly Unsaturated Fat (in g)\n- Protein (in g)\n- Cholesterol (in mg)\n- Carbohydrates (in g)\n- Net Carbohydrates (in g)\n- Alcohol (in g)\n- Fiber (in g)\n- Sugar (in g)\n- Sodium (in mg)\n- Caffein (in mg)\n- Manganese (in mg)\n- Potassium (in mg)\n- Magnesium (in mg)\n- Calcium (in mg)\n- Copper (in mg)\n- Zinc (in mg)\n- Phosphorus (in mg)\n- Fluoride (in mg)\n- Choline (in mg)\n- Iron (in mg)\n- Vitamin A (in IU)\n- Vitamin B1 (in mg)\n- Vitamin B2 (in mg)\n- Vitamin B3 (in mg)\n- Vitamin B5 (in mg)\n- Vitamin B6 (in mg)\n- Vitamin B12 (in Âµg)\n- Vitamin C (in mg)\n- Vitamin D (in Âµg)\n- Vitamin E (in mg)\n- Vitamin K (in Âµg)\n- Folate (in Âµg)\n- Folic Acid (in Âµg)\n- Iodine (in Âµg)\n- Selenium (in Âµg)\n\n### Food Properties\n- Glycemic Index\n- Glycemic Load\n\n### Flavonoids\nFlavonoids are food compounds called phytonutrients, which are found in many plants (fruit and vegetables) that have multiple health benefits.\n\n- Cyanidin (in mg)\n- Petunidin (in mg)\n- Delphinidin (in mg)\n- Malvidin (in mg)\n- Pelargonidin (in mg)\n- Peonidin (in mg)\n- Catechin (in mg)\n- Epigallocatechin (in mg)\n- Epicatechin (in mg)\n- Epicatechin 3-gallate (in mg)\n- Epigallocatechin 3-gallate (in mg)\n- Theaflavin (in mg)\n- Theaflavin-3,3\u0027-digallate (in mg)\n- Theaflavin-3\u0027-gallate (in mg)\n- Theaflavin-3-gallate (in mg)\n- Thearubigins (in mg)\n- Eriodictyol (in mg)\n- Hesperetin (in mg)\n- Naringenin (in mg)\n- Apigenin (in mg)\n- Luteolin (in mg)\n- Isorhamnetin (in mg)\n- Kaempferol (in mg)\n- Myricetin (in mg)\n- Quercetin (in mg)\n- Gallocatechin (in mg)\n\n## List of Ingredients\nIf you need ingredient names in your application, you can download a list of the 1,000 most frequently used ingredients including their id so you can call the API for more information. You are allowed to cache this list on your end but it is advised to update it every once in a while due to possible ingredient id changes.\n\n[Download ingredient list with possible units](https://spoonacular.com/application/frontend/downloads/ingredients-with-possible-units.csv)\n\n## List of Pantry Items\nIf you need ingredient names in your application, you can download a list of the 1,000 most frequently used ingredients including their id so you can call the API for more information. You are allowed to cache this list on your end but it is advised to update it every once in a while due to possible ingredient id changes.\n\n- Water (id: 14412)\n- Ice (id: 10014412)\n- Flour (id: 20081)\n- Sugar (id: 19335)\n- Cane Sugar (id: 10719335)\n- Olive Oil (id: 4053)\n- Cooking Fat (id: 1004513)\n- Cooking Oil (id: 4582)\n- Vegetable Oil (id: 4513)\n- Black Pepper (id: 1002030)\n- Sea Salt (id: 1012047)\n- Salt (id: 2047)\n\n## List of Supermarket Aisles\n- Baking\n- Health Foods\n- Spices and Seasonings\n- Pasta and Rice\n- Bakery/Bread\n- Refrigerated\n- Canned and Jarred\n- Frozen\n- Nut butters, Jams, and Honey\n- Oil, Vinegar, Salad Dressing\n- Condiments\n- Savory Snacks\n- Milk, Eggs, Other Dairy\n- Ethnic Foods\n- Tea and Coffee\n- Meat\n- Gourmet\n- Sweet Snacks\n- Gluten Free\n- Alcoholic Beverages\n- Cereal\n- Nuts\n- Beverages\n- Produce\n- Not in Grocery Store/Homemade\n- Seafood\n- Cheese\n- Dried Fruits\n- Online\n- Grilling Supplies\n- Bread\n\n## Search Restaurants\nSearch through thousands of restaurants (in North America) by location, cuisine, budget, and more.\n\nGET\n\nhttps://api.spoonacular.com/food/restaurants/search\n\n#### Headers\nResponse Headers:\n\n- `Content-Type: application/json`\n\n#### Parameters\n| Name | Type | Example | Description |\n| --- | --- | --- | --- |\n| `query` | string | beach cafe | The search query. |\n| `lat` | number | 37.7786357 | The latitude of the user\u0027s location. |\n| `lng` | number | -122.3918135 | The longitude of the user\u0027s location.\&quot;. |\n| `distance` | number | 2 | The distance around the location in miles. |\n| `budget` | number | 20 | The user\u0027s budget for a meal in USD. |\n| `cuisine` | string | italian | The cuisine of the restaurant. |\n| `min-rating` | number | 4.4 | The minimum rating of the restaurant between 0 and 5. |\n| `is-open` | boolean | true | Whether the restaurant must be open at the time of search. |\n| `sort` | string | distance | How to sort the results, one of the following \u0027cheapest\u0027, \u0027fastest\u0027, \u0027rating\u0027, \u0027distance\u0027 or the default \u0027relevance\u0027. |\n| `page` | number | 0 | The page number of results. |\n\nExample Request and Response\n\nGET\n\nhttps://api.spoonacular.com/food/restaurants/search?cuisine\u003ditalian\u0026lat\u003d37.7786357\u0026lng\u003d-122.3918135\n\n```\n{\n \&quot;restaurants\&quot;: [\n {\n \&quot;_id\&quot;: \&quot;a8b49c84-a92d-4f06-802e-467af49feaf0\&quot;,\n \&quot;name\&quot;: \&quot;South Beach Cafe\&quot;,\n \&quot;phone_number\&quot;: 14159741115,\n \&quot;address\&quot;: {\n \&quot;street_addr\&quot;: \&quot;800 The Embarcadero\&quot;,\n \&quot;city\&quot;: \&quot;San Francisco\&quot;,\n \&quot;state\&quot;: \&quot;CA\&quot;,\n \&quot;zipcode\&quot;: \&quot;94107\&quot;,\n \&quot;country\&quot;: \&quot;US\&quot;,\n \&quot;lat\&quot;: 37.78129959,\n \&quot;lon\&quot;: -122.38869477,\n \&quot;street_addr_2\&quot;: \&quot;\&quot;,\n \&quot;latitude\&quot;: 37.78129959,\n \&quot;longitude\&quot;: -122.38869477\n },\n \&quot;type\&quot;: \&quot;restaurant\&quot;,\n \&quot;description\&quot;: \&quot;Italian, Pizza\&quot;,\n \&quot;local_hours\&quot;: {\n \&quot;operational\&quot;: {\n \&quot;Monday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Tuesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Wednesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Thursday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Friday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Saturday\&quot;: \&quot;08:00AM - 09:00PM\&quot;,\n \&quot;Sunday\&quot;: \&quot;08:00AM - 09:00PM\&quot;\n },\n \&quot;delivery\&quot;: {\n \&quot;Monday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Tuesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Wednesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Thursday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Friday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Saturday\&quot;: \&quot;08:00AM - 09:00PM\&quot;,\n \&quot;Sunday\&quot;: \&quot;08:00AM - 09:00PM\&quot;\n },\n \&quot;pickup\&quot;: {\n \&quot;Monday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Tuesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Wednesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Thursday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Friday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Saturday\&quot;: \&quot;08:00AM - 09:00PM\&quot;,\n \&quot;Sunday\&quot;: \&quot;08:00AM - 09:00PM\&quot;\n },\n \&quot;dine_in\&quot;: {\n \&quot;Monday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Tuesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Wednesday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Thursday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Friday\&quot;: \&quot;07:00AM - 09:00PM\&quot;,\n \&quot;Saturday\&quot;: \&quot;08:00AM - 09:00PM\&quot;,\n \&quot;Sunday\&quot;: \&quot;08:00AM - 09:00PM\&quot;\n }\n },\n \&quot;cuisines\&quot;: [\n \&quot;Breakfast\&quot;,\n \&quot;Dinner\&quot;,\n \&quot;Italian\&quot;,\n \&quot;Lunch\&quot;,\n \&quot;Pickup\&quot;,\n \&quot;Pizza\&quot;,\n \&quot;Salads\&quot;,\n \&quot;Sandwich\&quot;,\n \&quot;Sandwiches\&quot;,\n \&quot;Takeout\&quot;\n ],\n \&quot;food_photos\&quot;: [\n \&quot;https://cdn-img.mealme.ai/f3d0e396f1b552927092bafa65ef2cc4e8b57c22/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f62657462706b3570747a37756a306279616b6a672e6a7067\&quot;\n ],\n \&quot;logo_photos\&quot;: [\n \&quot;https://cdn-img.mealme.ai/25b450d4e72eea47dccd744c326e49e23343bd0d/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f677275626875622f696d6167652f75706c6f61642f76313531383830323236382f63686a6a356173716f6766696e726f7671376f732e706e67\&quot;\n ],\n \&quot;store_photos\&quot;: [],\n \&quot;dollar_signs\&quot;: 2,\n \&quot;pickup_enabled\&quot;: true,\n \&quot;delivery_enabled\&quot;: true,\n \&quot;is_open\&quot;: false,\n \&quot;offers_first_party_delivery\&quot;: false,\n \&quot;offers_third_party_delivery\&quot;: true,\n \&quot;miles\&quot;: 0.2508434381960197,\n \&quot;weighted_rating_value\&quot;: 4.725654450261779,\n \&quot;aggregated_rating_count\&quot;: 191\n },\n ...\n ]\n}\n```\n\n#### Quotas\nCalling this endpoint requires\n\n3 points\n\n. Learn more about [quotas](https://spoonacular.com/spoonacular.com#Quotas).\n\n## Wine Guide\nHere you can see the classification spoonacular uses for wines. If you are missing a wine please let us know!\n\n### Classification of Wines\n```\nwine\n - white_wine\n - dry_white_wine\n - assyrtiko\n - pinot_blanc\n - cortese\n - roussanne\n - moschofilero\n - muscadet\n - viognier\n - verdicchio\n - greco\n - marsanne\n - white_burgundy\n - chardonnay\n - gruener_veltliner\n - white_rioja\n - frascati\n - gavi\n - l_acadie_blanc\n - trebbiano\n - sauvignon_blanc\n - catarratto\n - albarino\n - arneis\n - verdejo\n - vermentino\n - soave\n - pinot_grigio\n - dry_riesling\n - torrontes\n - mueller_thurgau\n - grechetto\n - gewurztraminer\n - chenin_blanc\n - white_bordeaux\n - semillon\n - riesling\n - sauternes\n - sylvaner\n - lillet_blanc\n - red_wine\n - dry_red_wine\n - petite_sirah\n - zweigelt\n - baco_noir\n - bonarda\n - cabernet_franc\n - bairrada\n - barbera_wine\n - primitivo\n - pinot_noir\n - nebbiolo\n - dolcetto\n - tannat\n - negroamaro\n - red_burgundy\n - corvina\n - rioja\n - cotes_du_rhone\n - grenache\n - malbec\n - zinfandel\n - sangiovese\n - carignan\n - carmenere\n - cesanese\n - cabernet_sauvignon\n - aglianico\n - tempranillo\n - shiraz\n - mourvedre\n - merlot\n - nero_d_avola\n - bordeaux\n - marsala\n - port\n - gamay\n - dornfelder\n - concord_wine\n - sparkling_red_wine\n - pinotage\n - agiorgitiko\n - dessert_wine\n - pedro_ximenez\n - moscato\n - late_harvest\n - ice_wine\n - white_port\n - lambrusco_dolce\n - madeira\n - banyuls\n - vin_santo\n - port\n - rose_wine\n - sparkling_rose\n - sparkling_wine\n - cava\n - cremant\n - champagne\n - prosecco\n - spumante\n - sparkling_rose\n - sherry\n - cream_sherry\n - dry_sherry\n - vermouth\n - dry_vermouth\n - fruit_wine\n - mead\n\n```\n\n## Working with the Meal Planner\nThe spoonacular API allows you to interact with the spoonacular meal planner. Check out the endpoints under \&quot;Meal Planning\&quot; on the left to see what you can do.\n\nSince meal plans and shopping lists are user-specific, you need to also pass a `username` and the user\u0027s `hash` besides your `apiKey`. This guarantees that you have the user\u0027s rights to manipulate her meal plan and/or shopping list.\n\nIf you want to create a [meal planner](https://spoonacular.com/meal-planner) like spoonacular\u0027s you can use these endpoints to realize it.\n\nHere\u0027s an example workflow:\n\n1. Connect your app\u0027s user with spoonacular by calling [Connect User](https://spoonacular.com/spoonacular.com#Connect-User).\n2. During step one you will get the user\u0027s `username` and `hash` from spoonacular. Save this on your side and connect it to your user. This allows you to make requests on the user\u0027s behalf.\n3. Now you can use the meal planning endpoints. For example, your app could do the following:\n1. Offer the user existing meal plans (e.g. vegetarian or keto meal plans) by calling [Get Meal Plan Templates](https://spoonacular.com/spoonacular.com#Get-Meal-Plan-Templates).\n2. Let the user add recipes, products, or simple foods to her meal plan via the [Add to Meal Plan](https://spoonacular.com/spoonacular.com#Get-Meal-Plan-Templates) endpoint.\n3. Now that the user has food on the meal plan, you can let her generate a shopping list by calling the [Generate Shopping List](https://spoonacular.com/spoonacular.com#Generate-Shopping-List) endpoint.\n4. If the user then is in the store you can show her the current shopping list via the [Get Shopping List](https://spoonacular.com/spoonacular.com#Generate-Shopping-List) endpoint and let her remove items as she buys them using the [Delete from Shopping List](https://spoonacular.com/spoonacular.com#Delete-from-Shopping-List) endpoint.\n\nFeel free to reach out to us if you\u0027d like to see specific functionality that we currently do not list here.\n\n#### Ingredients\nEndpoints like the ingredient autosuggestion will only give you an image name. You have to build the full URL by adding the base path to the beginning. The base path for ingredient images is **https://img.spoonacular.com/ingredients\\_{SIZE}/**, where **{SIZE}** is one of the following:\n\n- 100x100\n- 250x250\n- 500x500\n\nSo for \&quot;apple.jpg\&quot; the full path for 100x100 is [https://img.spoonacular.com/ingredients\\_100x100/apple.jpg](https://img.spoonacular.com/ingredients_100x100/apple.jpg)\n\n#### Cooking Equipment\nThe recipe instruction endpoint will give you information about the equipment used for cooking the dish. You will again only receive the image name for the equipment. You have to build the full URL by adding the base path to the beginning. The base path for equipment images is **https://img.spoonacular.com/equipment\\_{SIZE}/**, where **{SIZE}** is one of the following:\n\n- 100x100\n- 250x250\n- 500x500\n\nSo for \&quot;slow-cooker.jpg\&quot; the full path for 100x100 is [https://img.spoonacular.com/equipment\\_100x100/slow-cooker.jpg](https://img.spoonacular.com/equipment_100x100/slow-cooker.jpg)\n\n#### Recipes\nRecipe endpoints will almost always give you a recipe `id` **{ID}**. With that and the `imageType` **{TYPE}** you can build the complete image paths depending on your needs.\n\nThe base path for image URLs is **https://img.spoonacular.com/recipes/**. Once you know the recipe id **{ID}** and image type **{TYPE}**, you can complete that path to show an image.\nThe complete path follows this pattern **https://img.spoonacular.com/recipes/{ID}-{SIZE}.{TYPE}**, where **{SIZE}** is one of the following:\n\n- 90x90\n- 240x150\n- 312x150\n- 312x231\n- 480x360\n- 556x370\n- 636x393\n\nA complete image path might look like this: [https://img.spoonacular.com/recipes/1697885-556x370.jpg](https://img.spoonacular.com/recipes/1697885-556x370.jpg)\n\nOr this: [https://img.spoonacular.com/recipes/1697885-90x90.jpg](https://img.spoonacular.com/recipes/1697885-90x90.jpg)\n\n#### Grocery Products\nGrocery product endpoints will almost always give you a product id **{ID}**. With that and the imageType **{TYPE}** you can build the complete image paths depending on your needs.\n\nThe base path for image URLs is **https://img.spoonacular.com/products/**. Once you know the product id **{ID}** and image type **{TYPE}**, you can complete that path to show an image.\nThe complete path follows this pattern **https://img.spoonacular.com/products/{ID}-{SIZE}.{TYPE}**, where **{SIZE}** is one of the following:\n\n- 90x90\n- 312x231\n- 636x393\n\nA complete image path might look like this: [https://img.spoonacular.com/products/35507-636x393.jpeg](https://img.spoonacular.com/products/35507-636x393.jpeg)\n\nOr this: [https://img.spoonacular.com/products/35507-90x90.jpeg](https://img.spoonacular.com/products/35507-90x90.jpeg)\n\n#### Menu Items\nMenu item will almost always give you a menu item id **{ID}**. With that and the imageType **{TYPE}** you can build the complete image paths depending on your needs.\n\nThe base path for image URLs is **https://img.spoonacular.com/menu-items/**. Once you know the menu item id **{ID}** and image type **{TYPE}**, you can complete that path to show an image.\nThe complete path follows this pattern **https://img.spoonacular.com/menu-items/{ID}-{SIZE}.{TYPE}**, where **{SIZE}** is one of the following:\n\n- 90x90\n- 312x231\n- 636x393\n\nA complete image path might look like this: [https://img.spoonacular.com/menu-items/423186-636x393.png](https://img.spoonacular.com/menu-items/423186-636x393.png)\n\nOr this: [https://img.spoonacular.com/menu-items/423186-90x90.png](https://img.spoonacular.com/menu-items/423186-90x90.png)\n\n## Intolerances\nEvery API endpoint asking for a `intolerances` parameter can be fed with any of these intolerances.\n\n- Dairy\n- Egg\n- Gluten\n- Grain\n- Peanut\n- Seafood\n- Sesame\n- Shellfish\n- Soy\n- Sulfite\n- Tree Nut\n- Wheat\n\n## Cooking and Eating Equipment\nEvery API endpoint asking for a `equipment` parameter can be fed with any of these cooking equipments.\n\n- skimmer\n- pie form\n- glass baking pan\n- garlic press\n- meat grinder\n- tongs\n- bread knife\n- tajine pot\n- wire rack\n- mincing knife\n- cherry pitter\n- wooden skewers\n- kitchen scissors\n- blow torch\n- broiler pan\n- heart shaped silicone form\n- grill\n- immersion blender\n- baking sheet\n- oven mitt\n- pastry bag\n- palette knife\n- pizza cutter\n- bottle opener\n- bowl\n- pizza pan\n- candy thermometer\n- rolling pin\n- frying pan\n- casserole dish\n- plastic wrap\n- salad spinner\n- broiler\n- silicone muffin tray\n- meat tenderizer\n- edible cake image\n- measuring spoon\n- kitchen thermometer\n- sifter\n- muffin tray\n- chocolate mold\n- kitchen towels\n- potato ricer\n- silicone kugelhopf pan\n- offset spatula\n- cheesecloth\n- lemon squeezer\n- cake form\n- mini muffin tray\n- carving fork\n- egg slicer\n- ice cube tray\n- corkscrew\n- ice cream machine\n- sieve\n- kugelhopf pan\n- pastry brush\n- popsicle sticks\n- spatula\n- cake server\n- poultry shears\n- box grater\n- cupcake toppers\n- funnel\n- drinking straws\n- slotted spoon\n- ceramic pie form\n- pepper grinder\n- mortar and pestle\n- baster\n- melon baller\n- zester\n- pastry cutter\n- ziploc bags\n- aluminum foil\n- toothpicks\n- pot\n- baking pan\n- ladle\n- apple cutter\n- fillet knife\n- toaster\n- heart shaped cake form\n- grill pan\n- wooden spoon\n- paper towels\n- cookie cutter\n- tart form\n- pizza board\n- glass casserole dish\n- madeleine form\n- metal skewers\n- microplane\n- stand mixer\n- whisk\n- mixing bowl\n- deep fryer\n- canning jar\n- cheese knife\n- hand mixer\n- butter curler\n- food processor\n- wax paper\n- grater\n- gravy boat\n- muffin liners\n- butter knife\n- waffle iron\n- double boiler\n- can opener\n- mandoline\n- kitchen twine\n- juicer\n- wok\n- measuring cup\n- ramekin\n- airfryer\n- instant pot\n- spoon\n- dough scraper\n- microwave\n- roasting pan\n- pressure cooker\n- dehydrator\n- baking paper\n- silicone muffin liners\n- loaf pan\n- cake topper\n- dutch oven\n- baking spatula\n- popsicle molds\n- teapot\n- cocktail sticks\n- cleaver\n- rice cooker\n- bread machine\n- fork\n- ice cream scoop\n- slow cooker\n- knife\n- kitchen scale\n- griddle\n- frosting cake topper\n- cutting board\n- cake pop mold\n- oven\n- colander\n- kitchen timer\n- panini press\n- pasta machine\n- popcorn maker\n- lollipop sticks\n- steamer basket\n- chopsticks\n- chefs knife\n- blender\n- pizza stone\n- skewers\n- sauce pan\n- peeler\n- stove\n- pot holder\n- springform pan\n- apple corer\n- potato masher\n- serrated knife\n\n## Meal Types\nEvery API endpoint asking for a `type` parameter can be fed with any of these meal types.\n\n- main course\n- side dish\n- dessert\n- appetizer\n- salad\n- bread\n- breakfast\n- soup\n- beverage\n- sauce\n- marinade\n- fingerfood\n- snack\n- drink\n\n## Recipe Sorting Options\nThis is a list of possible values for the `sort` parameter of the complex recipe search endpoint.\n\n- (empty)\n- meta-score\n- popularity\n- healthiness\n- price\n- time\n- random\n- max-used-ingredients\n- min-missing-ingredients\n- alcohol\n- caffeine\n- copper\n- energy\n- calories\n- calcium\n- carbohydrates\n- carbs\n- choline\n- cholesterol\n- total-fat\n- fluoride\n- trans-fat\n- saturated-fat\n- mono-unsaturated-fat\n- poly-unsaturated-fat\n- fiber\n- folate\n- folic-acid\n- iodine\n- iron\n- magnesium\n- manganese\n- vitamin-b3\n- niacin\n- vitamin-b5\n- pantothenic-acid\n- phosphorus\n- potassium\n- protein\n- vitamin-b2\n- riboflavin\n- selenium\n- sodium\n- vitamin-b1\n- thiamin\n- vitamin-a\n- vitamin-b6\n- vitamin-b12\n- vitamin-c\n- vitamin-d\n- vitamin-e\n- vitamin-k\n- sugar\n- zinc\n\n#### Health Score (\u0027healthiness\u0027)\nScore % (between 0 and 100) \u003d Average coverage of \&quot;good\&quot; nutrients - Average coverage of \&quot;bad\&quot; nutrients.\n\nThat is, the more of your daily requirements of vitamins and minerals are covered and lower amounts of things you should limit (sugar, salt etc.) the higher the score.\n\n## Cuisines\nEvery API endpoint asking for a `cuisine` parameter can be fed with any of these cuisines.\n\n- African\n- Asian\n- American\n- British\n- Cajun\n- Caribbean\n- Chinese\n- Eastern European\n- European\n- French\n- German\n- Greek\n- Indian\n- Irish\n- Italian\n- Japanese\n- Jewish\n- Korean\n- Latin American\n- Mediterranean\n- Mexican\n- Middle Eastern\n- Nordic\n- Southern\n- Spanish\n- Thai\n- Vietnamese\n\n## Image Classification Categories\nThe image classification and image analysis API endpoints can detect the following classes.\n\n- agnolotti\n- ahi\\_tuna\n- antipasto\\_salad\n- apple\\_cake\n- babka\n- baked\\_apple\n- baked\\_beans\n- baked\\_potato\n- baked\\_salmon\n- baklava\n- beef\\_ribs\n- beef\\_stew\n- beef\\_stroganoff\n- beer\n- bibimbap\n- biscotti\n- brisket\n- brownies\n- burger\n- burrito\n- calzone\n- caprese\\_salad\n- cheesecake\n- chicken\\_nuggets\n- chicken\\_wings\n- chili\n- chow\\_mein\n- chowder\n- churros\n- coffee\n- coleslaw\n- cookies\n- creme\\_brulee\n- crepes\n- cupcakes\n- donut\n- falafel\n- fish\\_and\\_chips\n- french\\_toast\n- fruit\\_salad\n- gyros\n- ice\\_cream\n- lasagne\n- lobster\\_roll\n- macarons\n- nachos\n- omelet\n- paella\n- pancakes\n- sushi\n\nInterested in learning more? Read the entire [article](https://spoonacular.com/food-api/docs#Image-Classification).\n\n# Building a Simple Recipe Search App with the Spoonacular API ️\n**Welcome, new developers!** If you\u0027ve just signed up for Spoonacular\u0027s Food API and obtained your API key, this tutorial will guide you through creating a **simple recipe search application** using plain HTML, CSS, and JavaScript. No frameworks or SDKs required -- we\u0027ll use the Spoonacular API directly via `fetch`.\n\nBy the end, you\u0027ll have a small web app where users can type a query (like \&quot;pasta\&quot; or \&quot;chicken\&quot;) and see a list of recipe results with images, titles, and macro nutrition info (calories, proteins, carbs, fats).\n\nHere\u0027s a quick preview of what we\u0027ll build:\n\n_Spoonacular\u0027s Recipe API can return delicious recipe images and nutritional info. For example, a search for \&quot;fajitas\&quot; might return results like this Skirt Steak Fajitas dish. Our app will fetch such recipes and display their images, titles, and key nutrition facts._\n\nThis tutorial assumes you already have an API key from spoonacular.com and are ready to use it (if not, get a [free key now](https://spoonacular.com/food-api/console)). We\u0027ll walk through the process **step by step** in a beginner-friendly way. Here\u0027s what we\u0027ll do:\n\n1. **Set up a basic HTML page** with a search bar and a section to display results.\n2. **Understand the Spoonacular API endpoint** for searching recipes by keyword.\n3. **Write JavaScript code** to call the API (using your API key) when the user searches.\n4. **Display the results** on the page, including each recipe\u0027s image, title, and macro-nutrient info (calories, carbs, protein, fat).\n5. **Provide the complete HTML code** so you can copy, paste, add your API key, and run it on your own machine.\n\nLet\u0027s get started!\n\n## 1Creating the Basic HTML Structure\nFirst, create a new HTML file (for example, `index.html`). We\u0027ll set up a simple structure with a header, an input for the search query, a button to trigger the search, and a container where we\u0027ll display our recipe results.\n\nYour HTML file might start like this:\n\n```\n \n \n \n \n Spoonacular Recipe Search App \n \n \n \n Spoonacular Recipe Search \n \n \n Search \n \n\n \n \n\n \n \n // JavaScript code will go here\n \n \n \n```\n\n**Explanation:** We include a text ` ` for the user\u0027s search term and a ` ` to start the search. The `id` attributes ( `searchInput`, `searchButton`, `results`) will help us access these elements in JavaScript. The ` ` is where we\u0027ll inject the recipe results (like images, titles, etc.) dynamically. We\u0027ve also added a ` ` tag at the bottom of the body where our JavaScript code will live (placing the script at the end ensures the HTML elements are loaded before the script runs).\n\n## 2Understanding the Spoonacular Recipe Search API\nNext, let\u0027s understand which Spoonacular API endpoint we need. Spoonacular provides a **\&quot;Search Recipes\&quot;** endpoint (also known as **Complex Search**) that lets us search through thousands of recipes by keyword. We\u0027ll use this endpoint to find recipes by a query term (like `\&quot;pizza\&quot;` or `\&quot;tofu stir fry\&quot;`). The base URL is:\n\n`https://api.spoonacular.com/recipes/complexSearch`\n\nWhen calling this endpoint, we can add query parameters to refine our search. At minimum, we should provide:\n\n- `query` \\-\\- the search term (e.g., `query\u003dpasta`). This tells the API what recipes to search for by name or ingredients.\n- `apiKey` \\-\\- your unique API key (e.g., `apiKey\u003dYOUR_API_KEY`). This authenticates your requests. Without this, the API will reject the call.\n- Optionally, `number` \\-\\- how many results to return. If not specified, the API might return a default number (typically 10). We can use this to limit results, say `number\u003d5` for 5 recipes.\n\nTo fulfill our app\u0027s requirements, we also want **nutritional information** for each recipe result (specifically the macronutrients: calories, carbohydrates, protein, and fat). Spoonacular\u0027s API has a handy parameter for this: `addRecipeNutrition\u003dtrue`. According to the documentation, setting this to true will include detailed nutritional info for each recipe in the search results. That means we don\u0027t have to call a separate nutrition endpoint for each recipe -- we get the data in one go.\n\n**Macronutrients?** These are the key nutrition figures like **calories, protein, fat, and carbohydrates**. The Spoonacular API will provide these values per recipe when we request nutrition data. We\u0027ll extract those to display to the user.\n\n**Example API Request:** If a user searches for \&quot;burger\&quot;, our front-end will construct a URL like:\n\n`https://api.spoonacular.com/recipes/complexSearch?query\u003dburger\u0026number\u003d5\u0026addRecipeNutrition\u003dtrue\u0026apiKey\u003dYOUR_API_KEY`\n\nThis asks the API for 5 burger recipes, including nutrition info, using your API key for authorization. The response will be in JSON format (JavaScript Object Notation), containing an array of recipe results. Each recipe in the results will have fields such as `id`, `title`, `image` (a URL to the recipe\u0027s image), and a `nutrition` object with a list of nutrients. For example, a single result might look like this (simplified):\n\n```\n{\n \&quot;id\&quot;: 716429,\n \&quot;title\&quot;: \&quot;Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\&quot;,\n \&quot;image\&quot;: \&quot;https://img.spoonacular.com/recipes/716429-312x231.jpg\&quot;,\n \&quot;imageType\&quot;: \&quot;jpg\&quot;,\n \&quot;nutrition\&quot;: {\n \&quot;nutrients\&quot;: [\n { \&quot;name\&quot;: \&quot;Calories\&quot;, \&quot;amount\&quot;: 584.3, \&quot;unit\&quot;: \&quot;kcal\&quot; },\n { \&quot;name\&quot;: \&quot;Fat\&quot;, \&quot;amount\&quot;: 20.1, \&quot;unit\&quot;: \&quot;g\&quot; },\n { \&quot;name\&quot;: \&quot;Carbohydrates\&quot;, \&quot;amount\&quot;: 72.0, \&quot;unit\&quot;: \&quot;g\&quot; },\n { \&quot;name\&quot;: \&quot;Protein\&quot;, \&quot;amount\&quot;: 19.5, \&quot;unit\&quot;: \&quot;g\&quot; },\n ... // other nutrients\n ]\n }\n}\n```\n\nAs you can see, we get everything we need: the recipe title, an image URL, and the nutrition info including calories, fat, carbs, and protein. (The API actually returns many more details and nutrients, but we\u0027ll focus only on the macros for this tutorial.)\n\n## 3Writing the JavaScript Fetch Function\nWith our HTML in place and a clear idea of the API call, it\u0027s time to code the logic. We\u0027ll use the Fetch API in JavaScript to send a GET request to Spoonacular and handle the response.\n\nInside the ` ` tag of our HTML, let\u0027s do the following:\n\n- **Grab references to the HTML elements** we need to work with (the search input, the button, and the results container).\n- **Attach an event listener** to the search button (so that when it\u0027s clicked, we trigger a function to perform the search).\n- **Define the search function** to build the API URL, make the fetch call, and process the results.\n- **Display the results** or a message if none are found.\n\nWe\u0027ll start by selecting the elements and adding the event listener:\n\n```\nconst searchInput \u003d document.getElementById(\u0027searchInput\u0027);\nconst searchButton \u003d document.getElementById(\u0027searchButton\u0027);\nconst resultsDiv \u003d document.getElementById(\u0027results\u0027);\n\n// When the button is clicked, run the search function\nsearchButton.addEventListener(\u0027click\u0027, searchRecipes);\n\n// when the user presses \&quot;Enter\&quot; in the input, also run the search function\nsearchInput.addEventListener(\u0027keypress\u0027, function (e) {\n if (e.key \u003d\u003d\u003d \u0027Enter\u0027) {\n searchRecipes();\n }\n});\n```\n\nHere we used `document.getElementById` to get our elements by their IDs. The `addEventListener(\u0027click\u0027, searchRecipes)` will call a function named `searchRecipes` whenever the user clicks the \&quot;Search\&quot; button. We\u0027ll define `searchRecipes` next.\n\nNow, let\u0027s write the `searchRecipes` function. This function will:\n\n1. Read the query from the input field.\n2. Check that it\u0027s not empty.\n3. Construct the request URL with the query and your API key.\n4. Use `fetch()` to call the Spoonacular API.\n5. Convert the response to JSON.\n6. Handle the JSON data -- create HTML elements for each recipe and insert them into the results container.\n7. Handle any errors that occur during the fetch.\n\n```\nfunction searchRecipes() {\n const query \u003d searchInput.value.trim(); // get the search term from input\n if (!query) { // if the query is empty, do nothing\n alert(\u0027Please enter a search term.\u0027);\n return;\n }\n\n // Construct the API URL with query and API key\n const apiKey \u003d \u0027YOUR_API_KEY\u0027; // \u003c-- replace with your actual Spoonacular API key\n const apiUrl \u003d `https://api.spoonacular.com/recipes/complexSearch?query\u003d${encodeURIComponent(query)}\u0026number\u003d5\u0026addRecipeNutrition\u003dtrue\u0026apiKey\u003d${apiKey}`;\n\n // Clear any previous results\n resultsDiv.innerHTML \u003d \u0027 Searching for recipes... \u0027;\n\n // Call the Spoonacular API\n fetch(apiUrl)\n .then(response \u003d\u003e response.json())\n .then(data \u003d\u003e {\n // Clear the placeholder text\n resultsDiv.innerHTML \u003d \u0027\u0027;\n if (!data.results || data.results.length \u003d\u003d\u003d 0) {\n resultsDiv.innerHTML \u003d \u0027 No recipes found. Try a different search term! \u0027;\n return;\n }\n\n // Loop through each recipe result\n data.results.forEach(recipe \u003d\u003e {\n // Extract data we need\n const title \u003d recipe.title;\n const image \u003d recipe.image;\n\n // The nutrition info is an array of nutrient objects. Find the ones for Calories, Protein, Fat, Carbs:\n let calories \u003d \u0027\u0027, protein \u003d \u0027\u0027, fat \u003d \u0027\u0027, carbs \u003d \u0027\u0027;\n if (recipe.nutrition \u0026\u0026 recipe.nutrition.nutrients) {\n const nutrients \u003d recipe.nutrition.nutrients;\n const calInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Calories\u0027);\n const proteinInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Protein\u0027);\n const fatInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Fat\u0027);\n const carbsInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Carbohydrates\u0027);\n if (calInfo) calories \u003d Math.round(calInfo.amount) + \u0027 \u0027 + calInfo.unit;\n if (proteinInfo) protein \u003d Math.round(proteinInfo.amount) + \u0027 \u0027 + proteinInfo.unit;\n if (fatInfo) fat \u003d Math.round(fatInfo.amount) + \u0027 \u0027 + fatInfo.unit;\n if (carbsInfo) carbs \u003d Math.round(carbsInfo.amount) + \u0027 \u0027 + carbsInfo.unit;\n }\n\n // Create a container div for this recipe\n const recipeDiv \u003d document.createElement(\u0027div\u0027);\n recipeDiv.className \u003d \u0027recipe\u0027; // for potential styling\n\n\n## 3Writing the JavaScript Fetch Function\n\n // Build the inner HTML for the recipe (image, title, and nutrition info)\n recipeDiv.innerHTML \u003d `\n ${title} \n \n Calories: ${calories} \n Carbs: ${carbs} \n Protein: ${protein} \n Fat: ${fat} \n `;\n\n // Append this recipe\u0027s HTML to the results container\n resultsDiv.appendChild(recipeDiv);\n });\n })\n .catch(error \u003d\u003e {\n console.error(\u0027Error fetching recipes:\u0027, error);\n resultsDiv.innerHTML \u003d \u0027 An error occurred while fetching recipes. Please try again. \u0027;\n });\n}\n```\n\n**Important:** Make sure to replace `\u0027YOUR_API_KEY\u0027` with your actual Spoonacular API key for the app to work properly.\n\n## 4Testing the App (What to Expect)\nTo test, enter a food or recipe keyword in the search box and click **Search**. For example, try searching `\&quot;pasta\&quot;`. The app will make a request to Spoonacular and soon display a list of recipes related to pasta. You should see something like a recipe for _\&quot;Pasta with Garlic, Scallions, Cauliflower \u0026 Breadcrumbs\&quot;_ with its image and nutrition info, among other results. If you search `\&quot;chocolate chip cookies\&quot;`, you might get recipes for various cookie variations, each with an image and the calories/carbs/protein/fat listed.\n\nIf no recipes are found for a given query, the app will simply show \&quot;No recipes found. Try a different search term.\&quot; This might happen with very obscure searches or typos.\n\nMake sure you didn\u0027t forget to replace `YOUR_API_KEY` with your actual key. If you use an invalid key or exceed your API quota, the API might respond with an error (and our `.catch` will handle it by showing an error message). If that happens, double-check your key and also check the browser console for any error details. Spoonacular\u0027s free tier has a certain number of calls per day; ensure you\u0027re within that limit.\n\n## 5Full HTML Code Example\nFor convenience, here is the **entire HTML code** combining all the pieces we discussed. You can copy this, replace the placeholder with your API key, and open it in your browser to try it out:\n\n```\n \n \n \n \n Recipe Search App \n \n * {\n margin: 0;\n padding: 0;\n box-sizing: border-box;\n }\n\n body {\n font-family: \u0027Segoe UI\u0027, Tahoma, Geneva, Verdana, sans-serif;\n background: linear-gradient(135deg, #1fc66b 0%, #10552f 100%);\n min-height: 100vh;\n padding: 2rem;\n color: #333;\n }\n\n .container {\n max-width: 1200px;\n margin: 0 auto;\n background: rgba(255, 255, 255, 0.95);\n border-radius: 20px;\n padding: 2rem;\n box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n backdrop-filter: blur(10px);\n }\n\n h1 {\n text-align: center;\n color: #2c3e50;\n font-size: 2.5rem;\n margin-bottom: 2rem;\n text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n }\n\n .search-container {\n display: flex;\n gap: 1rem;\n margin-bottom: 2rem;\n max-width: 600px;\n margin-left: auto;\n margin-right: auto;\n }\n\n #searchInput {\n flex: 1;\n padding: 1rem 1.5rem;\n font-size: 1.1rem;\n border: 2px solid #e1e8ed;\n border-radius: 50px;\n outline: none;\n transition: all 0.3s ease;\n background: white;\n }\n\n #searchInput:focus {\n border-color: #00843c;\n box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n transform: translateY(-2px);\n }\n\n #searchButton {\n padding: 1rem 2rem;\n font-size: 1.1rem;\n font-weight: 600;\n background: linear-gradient(135deg, #1fc66b 0%, #10552f 100%);\n color: white;\n border: none;\n border-radius: 50px;\n cursor: pointer;\n transition: all 0.3s ease;\n box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n }\n\n #searchButton:hover {\n transform: translateY(-2px);\n box-shadow: 0 6px 20px rgb(0, 132, 60);\n }\n\n #searchButton:active {\n transform: translateY(0);\n }\n\n #results {\n display: grid;\n grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n gap: 2rem;\n margin-top: 2rem;\n }\n\n .recipe {\n background: white;\n border-radius: 15px;\n padding: 1.5rem;\n box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n transition: all 0.3s ease;\n border: 1px solid rgba(0, 0, 0, 0.05);\n overflow: hidden;\n }\n\n .recipe:hover {\n transform: translateY(-5px);\n box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);\n }\n\n .recipe h3 {\n color: #2c3e50;\n font-size: 1.4rem;\n margin-bottom: 1rem;\n line-height: 1.3;\n font-weight: 600;\n }\n\n .recipe img {\n width: 100%;\n height: 200px;\n object-fit: cover;\n border-radius: 10px;\n margin-bottom: 1rem;\n transition: transform 0.3s ease;\n }\n\n .recipe:hover img {\n transform: scale(1.05);\n }\n\n .nutrition-info {\n display: grid;\n grid-template-columns: 1fr 1fr;\n gap: 0.5rem;\n margin-top: 1rem;\n }\n\n .recipe p {\n margin: 0.3rem 0;\n font-size: 0.95rem;\n color: #555;\n display: flex;\n justify-content: space-between;\n align-items: center;\n padding: 0.5rem;\n background: #f8f9fa;\n border-radius: 8px;\n }\n\n .recipe p strong {\n color: #2c3e50;\n font-weight: 600;\n }\n\n .error {\n color: #e74c3c;\n text-align: center;\n font-size: 1.1rem;\n padding: 2rem;\n background: rgba(231, 76, 60, 0.1);\n border-radius: 10px;\n border: 1px solid rgba(231, 76, 60, 0.2);\n }\n\n .loading {\n text-align: center;\n font-size: 1.1rem;\n color: #667eea;\n padding: 2rem;\n }\n\n .no-results {\n text-align: center;\n font-size: 1.1rem;\n color: #7f8c8d;\n padding: 2rem;\n background: rgba(127, 140, 141, 0.1);\n border-radius: 10px;\n border: 1px solid rgba(127, 140, 141, 0.2);\n }\n\n /* Responsive design */\n @media (max-width: 768px) {\n body {\n padding: 1rem;\n }\n\n .container {\n padding: 1.5rem;\n border-radius: 15px;\n }\n\n h1 {\n font-size: 2rem;\n margin-bottom: 1.5rem;\n }\n\n .search-container {\n flex-direction: column;\n gap: 1rem;\n }\n\n #searchInput, #searchButton {\n padding: 0.8rem 1.2rem;\n font-size: 1rem;\n }\n\n #results {\n grid-template-columns: 1fr;\n gap: 1.5rem;\n }\n\n .nutrition-info {\n grid-template-columns: 1fr;\n }\n }\n\n @media (max-width: 480px) {\n .container {\n padding: 1rem;\n }\n\n h1 {\n font-size: 1.8rem;\n }\n\n .recipe {\n padding: 1rem;\n }\n }\n \n \n \n \n Recipe Search \n \n \n Search \n \n\n \n \n\n\n## 5Full HTML Code Example\n\n \n const searchInput \u003d document.getElementById(\u0027searchInput\u0027);\n const searchButton \u003d document.getElementById(\u0027searchButton\u0027);\n const resultsDiv \u003d document.getElementById(\u0027results\u0027);\n\n searchButton.addEventListener(\u0027click\u0027, searchRecipes);\n\n searchInput.addEventListener(\u0027keypress\u0027, function (e) {\n if (e.key \u003d\u003d\u003d \u0027Enter\u0027) {\n searchRecipes();\n }\n });\n\n function searchRecipes() {\n const query \u003d searchInput.value.trim();\n if (!query) {\n alert(\u0027Please enter a search term.\u0027);\n return;\n }\n const apiKey \u003d \u0027YOUR_API_KEY\u0027; // \u003c-- Replace with your spoonacular API key\n const apiUrl \u003d `https://api.spoonacular.com/recipes/complexSearch?query\u003d${encodeURIComponent(query)}\u0026number\u003d5\u0026addRecipeNutrition\u003dtrue\u0026apiKey\u003d${apiKey}`;\n\n resultsDiv.innerHTML \u003d \u0027 Searching for recipes... \u0027;\n\n fetch(apiUrl)\n .then(response \u003d\u003e response.json())\n .then(data \u003d\u003e {\n resultsDiv.innerHTML \u003d \u0027\u0027;\n if (!data.results || data.results.length \u003d\u003d\u003d 0) {\n resultsDiv.innerHTML \u003d \u0027 No recipes found. Try a different search term! \u0027;\n return;\n }\n data.results.forEach(recipe \u003d\u003e {\n const title \u003d recipe.title;\n const image \u003d recipe.image;\n let calories \u003d \u0027\u0027, protein \u003d \u0027\u0027, fat \u003d \u0027\u0027, carbs \u003d \u0027\u0027;\n if (recipe.nutrition \u0026\u0026 recipe.nutrition.nutrients) {\n const nutrients \u003d recipe.nutrition.nutrients;\n const calInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Calories\u0027);\n const proteinInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Protein\u0027);\n const fatInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Fat\u0027);\n const carbsInfo \u003d nutrients.find(n \u003d\u003e n.name \u003d\u003d\u003d \u0027Carbohydrates\u0027);\n if (calInfo) calories \u003d Math.round(calInfo.amount) + \u0027 \u0027 + calInfo.unit;\n if (proteinInfo) protein \u003d Math.round(proteinInfo.amount) + \u0027 \u0027 + proteinInfo.unit;\n if (fatInfo) fat \u003d Math.round(fatInfo.amount) + \u0027 \u0027 + fatInfo.unit;\n if (carbsInfo) carbs \u003d Math.round(carbsInfo.amount) + \u0027 \u0027 + carbsInfo.unit;\n }\n const recipeDiv \u003d document.createElement(\u0027div\u0027);\n recipeDiv.className \u003d \u0027recipe\u0027;\n recipeDiv.innerHTML \u003d `\n ${title} \n \n Calories: ${calories} \n Carbs: ${carbs} \n Protein: ${protein} \n Fat: ${fat} \n `;\n resultsDiv.appendChild(recipeDiv);\n });\n })\n .catch(error \u003d\u003e {\n console.error(\u0027Error fetching recipes:\u0027, error);\n resultsDiv.innerHTML \u003d \u0027 Error fetching recipes. Please try again later. \u0027;\n });\n }\n \n \n \n\n```\n\nYou can download the full HTML demo also from the [github repo](https://github.com/ddsky/spoonacular-api-tutorials/blob/1e88809bae2c4c510fe563f0c867062463a4b0e6/spoonacular-recipe-search/spoonacular-recipe-search-full-code.html).\n\n** Now just replace** `\&quot;YOUR_API_KEY\&quot;` **with your actual key**, save the file, and open it in your browser. You should be able to search for recipes and see results appear with images and nutrition info.\n\n## Conclusion\n**Congratulations! ** You\u0027ve built a fully functional recipe search app using the Spoonacular API. In this process, you learned how to make API calls with fetch, handle JSON responses, and update the DOM with results. We kept things simple with vanilla JavaScript to help you understand the fundamentals.\n\nFrom here, you can enhance the app in many ways -- for example, add loading spinners, improve the layout with CSS, allow pressing \&quot;Enter\&quot; to trigger search, or even add more details like recipe summary or ingredients.\n\nUsing Spoonacular\u0027s rich API, you have access to a treasure trove of food data. We only scratched the surface by using the basic search with macro nutrients. Feel free to explore other endpoints (the API can get detailed recipe instructions, similar recipes, ingredient lists, and more as seen in their docs).\n\n**Happy coding and happy cooking! ‍‍**\n\n## Image Classification\nThis article compares **7 online image recognition services** in the context of food recognition. In particular, my goal was to find out which service is best suited to recognize and classify the dish you ordered in a restaurant based on a picture you took.\n\nThere are plenty of services out there, but I decided to compare the following as they are leaders in the field and have stable APIs:\n\n[Amazon Rekognition](https://aws.amazon.com/rekognition/)\n\nImage analysis by Amazon. They do not seem to have a pre-trained food model, so I used their generic tagger. Each classified image comes back with a number of tags and confidences.\n\n[Clarifai](https://www.clarifai.com/predict)\n\nAn image analysis service that also features a special [food model](https://www.clarifai.com/models/food-image-recognition-model-bd367be194cf45149e75f01d59f77ba7), which I used for testing.\n\n[Google Cloud Vision](https://cloud.google.com/vision)\n\nAn image analysis service by Google that also does not come with a pre-trained food model.\n\n[Imagga](https://imagga.com/solutions/categorization-api)\n\nAnother image analysis service without a pre-trained food model. I used their generic tagger.\n\n[Microsoft Computer Vision](https://azure.microsoft.com/en-us/services/cognitive-services/computer-vision/)\n\nAn image analysis service or (as they call it) \&quot;cognitive service\&quot; by Microsoft. No food model available.\n\n[Watson Visual Recognition](https://www.ibm.com/cloud/watson-visual-recognition)\n\nIBM Watson for image analysis by IBM. IBM also created a pre-trained [food-specific model](https://www.ibm.com/blogs/cloud-archive/2017/05/watson-learns-see-food-introducing-watson-visual-recognition-food-model/) that I was able to use in their API.\n\n[spoonacular](https://spoonacular.com/food-api)\n\nThe spoonacular food API offers a food-specific model specifically trained on our test dataset.\n\nOkay, now that we know our contenders, let\u0027s take a look at what dataset we\u0027re working with.\n\n### The 50-Class Food Dataset\nOur goal is to build/test a food dish recognizer. That is, we don\u0027t want to recognize single ingredients, such as an apple, milk, or a cup of mushrooms, but rather complex dishes that you would order in a restaurant.\n\nTo achieve this, we used the spoonacular food ontology to create a set of 518 dishes and gathered 2,781,306 images in total (over 417 GB in file size). The spoonacular food ontology is rather fine-grained, so many of the dish categories were a bit too specific (e.g. \&quot;lemon cookies\&quot;), so I reduced it down to 50 common classes with about 300 manually checked images per class.\n\nThe final dataset is **50 classes with a total of 15,742 images** (4.4 GB in size).\n\nThe images are a mixture of high quality, professional photographs (showing the perfect execution of the dish, usually NOT taken in a real restaurant setting) and \&quot;real world\&quot; images taken by people that actually ordered and received that dish (like pictures taken from the spoonacular food journal). The differences between the two types are often extreme, so I found it to be valuable to have both types in the dataset.\n\nHave a look at the following example classes, \&quot;cookies\&quot;, \&quot;burger\&quot;, and \&quot;pancakes\&quot;:\n\nNow, here is the full list of the 50 food categories with images (here in [plain text](https://spoonacular.com/food-api/docs#Image-Classification-Categories)):\n\n### Comparison of Image Classification Services\nNow that we know the dataset we\u0027re working with we can test the services with pictures from the dataset. These tests can only give us a rough idea of how well the service works because, as stated earlier, not all of them have a food-specific model. More importantly, they are trained on a completely different taxonomy, which means they might not even know what \&quot;bibimbap\&quot; is or what \&quot;churros\&quot; look like.\n\nThe goal of this article, however, is to find out which services are well suited for real-world dish recognition without training your own models (as dataset preparation is the really hard part). In this context, it is fair to compare them against an unknown set of images and see what they think the images are.\n\nI classified the same 50 images per class using each service for 2,500 classifications in total. The super long image below shows the top 5 tags/categories that each service assigned the images for each class. The percentage after the classified category is the percentage of images that received that particular tag. For example, Amazon Rekognition classified 98% of the \&quot;agnolotti\&quot; images as \&quot;Food\&quot;. Good start.\n\nAdditionally, I **bolded** the category names which we should consider correct for the given images. Since the other taxonomies are not exactly the same as spoonacular\u0027s, we should still count \&quot;doughnut\&quot; as correct even if the spoonacular class is \&quot;donut\&quot;.\n\nThe spoonacular column is just there for referenceâ€”since spoonacular\u0027s classifier was trained using the dataset, the category names always match and the percentage of matches is of course often higher.\n\nThe last row in the table shows how many classes in the top 5 can be considered correct. Aside from the expected 50/50 for spoonacular, we can see that the two services with special food-related classifiers, Clarifai and Watson, outperformed the other services dramatically.\n\nIn particular, the Watson food classifier seems to have been trained on a more fine-grained taxonomy. This is not surprising, since they say they have 2,000 tags, ranging from specific dishes to broader categories like \&quot;sweet\&quot; and \&quot;delicacy\&quot; as well. They even differentiate between \&quot;barbecued wing\&quot; and \&quot;buffalo wing\&quot;!\n\nTo give you an idea which tags/categories each service assigned to the provided images, here are the top 50 tags for each service (for all 2,500 classified images). You can also [download the raw data](https://spoonacular.com/application/frontend/downloads/visual-recognition-comparison-charts.xlsx) if you\u0027re interested in seeing it all.\n\n##### Top 50 Classes for Amazon Rekognition\nAmazon answered with **1,029 different tags**, which is to be expected for a general classifier. The funniest tags were \&quot;T-Rex\&quot;, \&quot;dynamite\&quot;, and \&quot;toilet\&quot; :)\n\n##### Top 50 Classes for Clarifai\nClarifai answered with a total of **740 different food-specific tags** (remember, they have a food-specific model). Looking at the tags with a low frequency we can see that they don\u0027t only use dishes in their model, but also have plain ingredients such as \&quot;starfruit\&quot;, \&quot;watercress\&quot;, and even spices like \&quot;cumin\&quot; in their model.\n\n##### Top 50 Classes for Google Cloud Vision\nGoogle only had a generic model, which shows in the poor results. They answered with a total of **1,831 distinct tags**, most of them food-related and some controversial ones like \&quot;shark fin soup\&quot; and \&quot;foie gras\&quot; as well.\n\n##### Top 50 Classes for Imagga\nImagga answered with a total of **832 distinct tags** from their generic model. While most of them were food related, I also got back \&quot;concrete\&quot;, \&quot;snake\&quot;, and \&quot;winter\&quot; at times.\n\n##### Top 50 Classes for Microsoft Cloud Vision\nMicrosoft Cognitive Services\u0027 generic model came back with at total of **1,070 distinct tags** \\- most of them food related.\n\n##### Top 50 Classes for IBM Watson\nWatson returned **873 distinct food-related tags** from the food model.\n\n##### spoonacular Confusion Matrix\nFor spoonacular, we were able to create an actual confusion matrix. The y-axis shows the tested classes and the x-axis the model\u0027s prediction. The diagonal (top left to bottom right) shows correct classifications.\n\nThe total accuracy of spoonacular\u0027s model is 90%. Most problematic seems to be \&quot;baked apple\&quot; with only 71% accuracy, while \&quot;beer\&quot; and \&quot;burger\&quot; are recognized with 100% accuracy - cheers to that!\n\n### Resources and Tools Used\nTo run all the tests I used the [Palladian Java Toolkit](https://palladian.ai/). Its wrappers for the cloud services Clarifai, Imagga, Amazon Rekognition, IBM Watson, Google Cloud Vision, and Microsoft Cloud Vision made evaluation much easiser.\n\nThanks to BjÃ¶rn Hempel for writing his bachelor thesis on this topic, which you can [read here](https://palladian.ai/publications/Bj%C3%B6rn%20Hempel%20-%20Investigation%20of%20strategies%20for%20image%20classi%EF%AC%81cation.pdf).\n\nIf you\u0027re interested in more detailed information you can download the [raw data (Excel)](https://spoonacular.com/application/frontend/downloads/visual-recognition-comparison-charts.xlsx).\n\n### Summary\nIf you want to reliably tag food-related images, you may want to use a service that comes with a pre-trained food model such as Clarifai, Watson, or spoonacular. If you have the time, knowledge, and resources, you can of course create your own dataset and create a custom model. Most online services allow for custom training models, but dataset creation is definitely not to be underestimated.\n\nAlso, if you want to play around with the spoonacular dish classifier, I built this [demo](https://spoonacular.com/food-api/image-analyzer-demo).\n\n## Diet Definitions\nEvery API endpoint asking for an `diet` parameter can be fed with any of these diets.\n\n#### Gluten Free\nEliminating gluten means avoiding wheat, barley, rye, and other gluten-containing grains and foods made from them (or that may have been cross contaminated).\n\n#### Ketogenic\nThe keto diet is based more on the ratio of fat, protein, and carbs in the diet rather than specific ingredients. Generally speaking, high fat, protein-rich foods are acceptable and high carbohydrate foods are not. The formula we use is 55-80% fat content, 15-35% protein content, and under 10% of carbohydrates.\n\n#### Vegetarian\nNo ingredients may contain meat or meat by-products, such as bones or gelatin.\n\n#### Lacto-Vegetarian\nAll ingredients must be vegetarian and none of the ingredients can be or contain egg.\n\n#### Ovo-Vegetarian\nAll ingredients must be vegetarian and none of the ingredients can be or contain dairy.\n\n#### Vegan\nNo ingredients may contain meat or meat by-products, such as bones or gelatin, nor may they contain eggs, dairy, or honey.\n\n#### Pescetarian\nEverything is allowed except meat and meat by-products - some pescetarians eat eggs and dairy, some do not.\n\n#### Paleo\nAllowed ingredients include meat (especially grass fed), fish, eggs, vegetables, some oils (e.g. coconut and olive oil), and in smaller quantities, fruit, nuts, and sweet potatoes. We also allow honey and maple syrup (popular in Paleo desserts, but strict Paleo followers may disagree). Ingredients not allowed include legumes (e.g. beans and lentils), grains, dairy, refined sugar, and processed foods.\n\n#### Primal\nVery similar to Paleo, except dairy is allowed - think raw and full fat milk, butter, ghee, etc.\n\n#### Low FODMAP\nFODMAP stands for \&quot;fermentable oligo-, di-, mono-saccharides and polyols\&quot;. Our ontology knows which foods are considered high in these types of carbohydrates (e.g. legumes, wheat, and dairy products)\n\n#### Whole30\nAllowed ingredients include meat, fish/seafood, eggs, vegetables, fresh fruit, coconut oil, olive oil, small amounts of dried fruit and nuts/seeds. Ingredients not allowed include added sweeteners (natural and artificial, except small amounts of fruit juice), dairy (except clarified butter or ghee), alcohol, grains, legumes (except green beans, sugar snap peas, and snow peas), and food additives, such as carrageenan, MSG, and sulfites.\n\nSee also [the comparison of popular diets](https://spoonacular.com/academy/which-diet-is-best-for-me)\n\n## How to Write a Chatbot\nHere is an easy way how to make a chatbot like the [spoonacular chatbot](https://spoonacular.com/chatbot) with JavaScript in 10 minutes.\n\n- Check out this [JavaScript chatbot repository](https://github.com/ddsky/chatbot) on GitHub.\n- Follow the instructions in the readme file.\n- Optionally, if you want spoonacular support in your bot: Sign up for a [RapidAPI key](https://rapidapi.com/spoonacular/api/recipe-food-nutrition).\n\n## Rate Limiting \u0026 Quotas\nEach API plan comes with a daily quota of points. Every API call you make costs a certain amount of points. Usually, every request is\n\n1 point\n\nand\n\n0.01 points\n\nper result returned, but there are many exceptions. At the bottom of each endpoint description you will find information about the number of points required for that endpoint.\n\nWhen you are on the **free** plan and your daily quota is used up, the API will respond with the [error code 402](https://www.wikiwand.com/en/List_of_HTTP_status_codes#/402) and no more calls can be made until your quota resets.\n\nYou have complete control over your quota by looking at your console dashboard and checking the API response headers that appear with every answer from the API. These response headers are:\n\n- `X-API-Quota-Request`: The number of points used by the request.\n- `X-API-Quota-Used`: The number of points used in total today. This number resets to zero at midnight UTC ( [click here](https://time.is/UTC) to compare to your local time zone).\n- `X-API-Quota-Left`: The number of points left today (depends on your plan).\n\n#### Rate Limiting\nThere is a limit of how many requests you can make per second. The limits depend on the plan you are on. If you try making more requests you will receive a [429 error](https://www.wikiwand.com/en/List_of_HTTP_status_codes#/429).\n\n- **Free**: 60 requests in 1 minute\n- **Starter**: 120 requests in 1 minute\n- **Cook**: 5 requests per second\n- **Culinarian**: 10 requests per second\n- **Chef**: 20 requests per second\n\n## Authentication\nTo use the API you need an **API key**. You can get a free one by simply [signing up here](https://spoonacular.com/food-api/console).\n\nOnce you have your API key, you have to put it in the request URL for every request you make like so **?apiKey\u003dYOUR-API-KEY**.\n\n**Attention:** Only the first query parameter is prefixed with a **?** (question mark), all subsequent ones will be prefixed with a **\u0026** (ampersand). That is how URLs work and nothing related to our API.\nHere\u0027s a full example with two parameters `apiKey` and `includeNutrition`: [https://api.spoonacular.com/recipes/716429/information?apiKey\u003dYOUR-API-KEY\u0026includeNutrition\u003dtrue](https://api.spoonacular.com/recipes/716429/information?apiKey\u003dYOUR-API-KEY\u0026includeNutrition\u003dtrue).\n\nPlease further note that parameters are case sensitive, it is `apiKey` **not** `apikey`.\n\nAlternatively, you can put the API key in the request header as `x-api-key`.\n\n### Company\n- [About Us](https://spoonacular.com/about)\n- [Press](https://spoonacular.com/press)\n\n### Legal\n- [Terms \u0026 Conditions](https://spoonacular.com/food-api/terms)\n- [Privacy Policy](https://spoonacular.com/food-api/privacy)\n- [DMCA](https://spoonacular.com/dmca)\n- [Imprint](https://spoonacular.com/contact)\n\n### Info\n- [FAQ](https://spoonacular.com/food-api/faq)\n- [Contact Us](https://spoonacular.com/contact)\n- [Discord](https://discord.gg/EkYYnVF)\n- [Twitter](https://twitter.com/spoonacular)\n\n### API Resources\n- [Full Documentation](https://spoonacular.com/food-api/docs)\n- [Uptime Status](http://status.spoonacular.com/)\n- [SDKs](https://spoonacular.com/food-api/sdk)\n- [Updates](https://spoonacular.com/food-api/updates)\n- [News API](https://worldnewsapi.com/)\n- [Video Game API](https://gamebrain.co/api/)\n- [API League](https://apileague.com/)\n- [Joke API](https://humorapi.com/)\n- [Book API](https://bigbookapi.com/)\n- [Art Search API](https://artsearch.io/)\n\n\u003c/web_content\u003e\n\u003c/additional_data\u003e\n\u003cuser_query\u003e\nу меня есть проект. В нем есть чистая архитектура и почти все настроено для работы. Поправь в нем ошибки D:\\Stag\\app\\build\\tmp\\kapt3\\stubs\\debug\\com\\example\\recipebook\\data\\local\\CategoryDao.java:9: error: There is a problem with the query: [SQLITE_ERROR] SQL error or missing database (no such table: category)\n    public abstract kotlinx.coroutines.flow.Flow\u003cjava.util.List\u003ccom.example.recipebook.data.local.CategoryEntity\u003e\u003e getCategories();\n Далее доделай, чтобы оно загружало данные с интернета. Апи с которого будет все браться опписано здесь:@https://spoonacular.com/food-api/docs#Get-Random-Recipes\n\u003c/user_query\u003e&quot;}]},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[]}]},&quot;33a6745b-6a71-498e-8863-2339cd220515&quot;:{&quot;id&quot;:&quot;33a6745b-6a71-498e-8863-2339cd220515&quot;,&quot;name&quot;:&quot;[TextContent(type\u003dtext, text\u003d\n\u003cadditional_data\u003e\nBelow are some potentially helpful/relevant pieces of information for figuring out to respond\n\u003ccurrent_file\u003e\n```kotlin:app/src/main/java/com/example/recipebook/data/repository/RecipeRepositoryImpl.kt, lines\u003dALL(1-52)\npackage com.example.recipebook.data.repository\n\n\nimport com.example.recipebook.data.local.RecipeDao\nimport com.example.recipebook.data.mapper.RecipeMapper\nimport com.example.recipebook.data.remote.RecipeApi\nimport com.example.recipebook.data.util.Resource\nimport com.example.recipebook.data.util.networkBoundResource\nimport com.example.recipebook.domain.model.Recipe\nimport com.example.recipebook.domain.repository.RecipeRepository\nimport com.example.recipebook.presentation.util.NetworkMonitor\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.map\nimport kotlinx.coroutines.flow.first\nimport javax.inject.Inject\n\nclass RecipeRepositoryImpl @Inject constructor(\n    private val api: RecipeApi,\n    private val dao: RecipeDao,\n    private val networkMonitor: NetworkMonitor\n): RecipeRepository {\n\n    override fun getAllRecipes(): Flow\u003cResource\u003cList\u003cRecipe\u003e\u003e\u003e \u003d\n        networkBoundResource(\n            query \u003d { dao.getAll().map { RecipeMapper.entityListToDomain(it) } },\n            fetch \u003d { api.getAll() },\n            saveFetchResult \u003d { response -\u003e\n                dao.insertAll(response.map { RecipeMapper.dtoToEntity(it) })\n            },\n            shouldFetch \u003d { cached -\u003e cached.isEmpty() },\n            networkMonitor \u003d networkMonitor\n        )\n\n    override fun searchRecipes(query: String): Flow\u003cList\u003cRecipe\u003e\u003e \u003d\n        dao.search(query).map { RecipeMapper.entityListToDomain(it) }\n\n    override fun getRecipeById(id: String): Flow\u003cRecipe\u003e \u003d\n        dao.getById(id).map { entity -\u003e\n            entity?.let { RecipeMapper.entityToDomain(it) }\n                ?: throw NoSuchElementException(\&quot;Recipe with id $id not found\&quot;)\n        }\n\n    override fun getFavoriteRecipes(): Flow\u003cList\u003cRecipe\u003e\u003e \u003d\n        dao.getFavorites().map { RecipeMapper.entityListToDomain(it) }\n\n    override suspend fun toggleFavorite(recipeId: String) {\n        val recipe \u003d dao.getById(recipeId).first()\n        recipe?.let {\n            dao.updateFavorite(recipeId, !it.isFavorite)\n        }\n    }\n}\n```\n\u003c/current_file\u003e\n\u003c/additional_data\u003e\n\u003cuser_query\u003e\nу меня есть проект. В нем есть чистая архитектура и почти все настроено для работы. Поправь в нем ошибки D:\\Stag\\app\\build\\tmp\\kapt3\\stubs\\debug\\com\\example\\recipebook\\data\\local\\CategoryDao.java:9: error: There is a problem with the query: [SQLITE_ERROR] SQL error or missing database (no such table: category)\n    public abstract kotlinx.coroutines.flow.Flow\u003cjava.util.List\u003ccom.example.recipebook.data.local.CategoryEntity\u003e\u003e getCategories();\n Далее доделай, чтобы оно загружало данные с интернета. Апи с которого будет все браться опписано здесь:@https://spoonacular.com/food-api/docs#Get-Random-Recipes\n\u003c/user_query\u003e)]&quot;,&quot;timestamp&quot;:1758455183517,&quot;messages&quot;:[{&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;\n\u003cadditional_data\u003e\nBelow are some potentially helpful/relevant pieces of information for figuring out to respond\n\u003ccurrent_file\u003e\n```kotlin:app/src/main/java/com/example/recipebook/data/repository/RecipeRepositoryImpl.kt, lines\u003dALL(1-52)\npackage com.example.recipebook.data.repository\n\n\nimport com.example.recipebook.data.local.RecipeDao\nimport com.example.recipebook.data.mapper.RecipeMapper\nimport com.example.recipebook.data.remote.RecipeApi\nimport com.example.recipebook.data.util.Resource\nimport com.example.recipebook.data.util.networkBoundResource\nimport com.example.recipebook.domain.model.Recipe\nimport com.example.recipebook.domain.repository.RecipeRepository\nimport com.example.recipebook.presentation.util.NetworkMonitor\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.map\nimport kotlinx.coroutines.flow.first\nimport javax.inject.Inject\n\nclass RecipeRepositoryImpl @Inject constructor(\n    private val api: RecipeApi,\n    private val dao: RecipeDao,\n    private val networkMonitor: NetworkMonitor\n): RecipeRepository {\n\n    override fun getAllRecipes(): Flow\u003cResource\u003cList\u003cRecipe\u003e\u003e\u003e \u003d\n        networkBoundResource(\n            query \u003d { dao.getAll().map { RecipeMapper.entityListToDomain(it) } },\n            fetch \u003d { api.getAll() },\n            saveFetchResult \u003d { response -\u003e\n                dao.insertAll(response.map { RecipeMapper.dtoToEntity(it) })\n            },\n            shouldFetch \u003d { cached -\u003e cached.isEmpty() },\n            networkMonitor \u003d networkMonitor\n        )\n\n    override fun searchRecipes(query: String): Flow\u003cList\u003cRecipe\u003e\u003e \u003d\n        dao.search(query).map { RecipeMapper.entityListToDomain(it) }\n\n    override fun getRecipeById(id: String): Flow\u003cRecipe\u003e \u003d\n        dao.getById(id).map { entity -\u003e\n            entity?.let { RecipeMapper.entityToDomain(it) }\n                ?: throw NoSuchElementException(\&quot;Recipe with id $id not found\&quot;)\n        }\n\n    override fun getFavoriteRecipes(): Flow\u003cList\u003cRecipe\u003e\u003e \u003d\n        dao.getFavorites().map { RecipeMapper.entityListToDomain(it) }\n\n    override suspend fun toggleFavorite(recipeId: String) {\n        val recipe \u003d dao.getById(recipeId).first()\n        recipe?.let {\n            dao.updateFavorite(recipeId, !it.isFavorite)\n        }\n    }\n}\n```\n\u003c/current_file\u003e\n\u003c/additional_data\u003e\n\u003cuser_query\u003e\nу меня есть проект. В нем есть чистая архитектура и почти все настроено для работы. Поправь в нем ошибки D:\\Stag\\app\\build\\tmp\\kapt3\\stubs\\debug\\com\\example\\recipebook\\data\\local\\CategoryDao.java:9: error: There is a problem with the query: [SQLITE_ERROR] SQL error or missing database (no such table: category)\n    public abstract kotlinx.coroutines.flow.Flow\u003cjava.util.List\u003ccom.example.recipebook.data.local.CategoryEntity\u003e\u003e getCategories();\n Далее доделай, чтобы оно загружало данные с интернета. Апи с которого будет все браться опписано здесь:@https://spoonacular.com/food-api/docs#Get-Random-Recipes\n\u003c/user_query\u003e&quot;}]},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[]}]},&quot;dbd0d317-085c-4152-86e9-c59601b88498&quot;:{&quot;id&quot;:&quot;dbd0d317-085c-4152-86e9-c59601b88498&quot;,&quot;name&quot;:&quot;[TextContent(type\u003dtext, text\u003d\n\u003cadditional_data\u003e\nBelow are some potentially helpful/relevant pieces of information for figuring out to respond\n\u003ccurrent_file\u003e\n```kotlin:app/src/main/java/com/example/recipebook/data/repository/RecipeRepositoryImpl.kt, lines\u003dALL(1-52)\npackage com.example.recipebook.data.repository\n\n\nimport com.example.recipebook.data.local.RecipeDao\nimport com.example.recipebook.data.mapper.RecipeMapper\nimport com.example.recipebook.data.remote.RecipeApi\nimport com.example.recipebook.data.util.Resource\nimport com.example.recipebook.data.util.networkBoundResource\nimport com.example.recipebook.domain.model.Recipe\nimport com.example.recipebook.domain.repository.RecipeRepository\nimport com.example.recipebook.presentation.util.NetworkMonitor\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.map\nimport kotlinx.coroutines.flow.first\nimport javax.inject.Inject\n\nclass RecipeRepositoryImpl @Inject constructor(\n    private val api: RecipeApi,\n    private val dao: RecipeDao,\n    private val networkMonitor: NetworkMonitor\n): RecipeRepository {\n\n    override fun getAllRecipes(): Flow\u003cResource\u003cList\u003cRecipe\u003e\u003e\u003e \u003d\n        networkBoundResource(\n            query \u003d { dao.getAll().map { RecipeMapper.entityListToDomain(it) } },\n            fetch \u003d { api.getAll() },\n            saveFetchResult \u003d { response -\u003e\n                dao.insertAll(response.map { RecipeMapper.dtoToEntity(it) })\n            },\n            shouldFetch \u003d { cached -\u003e cached.isEmpty() },\n            networkMonitor \u003d networkMonitor\n        )\n\n    override fun searchRecipes(query: String): Flow\u003cList\u003cRecipe\u003e\u003e \u003d\n        dao.search(query).map { RecipeMapper.entityListToDomain(it) }\n\n    override fun getRecipeById(id: String): Flow\u003cRecipe\u003e \u003d\n        dao.getById(id).map { entity -\u003e\n            entity?.let { RecipeMapper.entityToDomain(it) }\n                ?: throw NoSuchElementException(\&quot;Recipe with id $id not found\&quot;)\n        }\n\n    override fun getFavoriteRecipes(): Flow\u003cList\u003cRecipe\u003e\u003e \u003d\n        dao.getFavorites().map { RecipeMapper.entityListToDomain(it) }\n\n    override suspend fun toggleFavorite(recipeId: String) {\n        val recipe \u003d dao.getById(recipeId).first()\n        recipe?.let {\n            dao.updateFavorite(recipeId, !it.isFavorite)\n        }\n    }\n}\n```\n\u003c/current_file\u003e\n\u003c/additional_data\u003e\n\u003cuser_query\u003e\nу меня есть проект. В нем есть чистая архитектура и почти все настроено для работы. Поправь в нем ошибки D:\\Stag\\app\\build\\tmp\\kapt3\\stubs\\debug\\com\\example\\recipebook\\data\\local\\CategoryDao.java:9: error: There is a problem with the query: [SQLITE_ERROR] SQL error or missing database (no such table: category)\n    public abstract kotlinx.coroutines.flow.Flow\u003cjava.util.List\u003ccom.example.recipebook.data.local.CategoryEntity\u003e\u003e getCategories();\n Далее доделай, чтобы оно загружало данные с интернета. Апи с которого будет все браться опписано здесь:@https://spoonacular.com/food-api/docs#Get-Random-Recipes\n\u003c/user_query\u003e)]&quot;,&quot;timestamp&quot;:1758455261750,&quot;messages&quot;:[{&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;\n\u003cadditional_data\u003e\nBelow are some potentially helpful/relevant pieces of information for figuring out to respond\n\u003ccurrent_file\u003e\n```kotlin:app/src/main/java/com/example/recipebook/data/repository/RecipeRepositoryImpl.kt, lines\u003dALL(1-52)\npackage com.example.recipebook.data.repository\n\n\nimport com.example.recipebook.data.local.RecipeDao\nimport com.example.recipebook.data.mapper.RecipeMapper\nimport com.example.recipebook.data.remote.RecipeApi\nimport com.example.recipebook.data.util.Resource\nimport com.example.recipebook.data.util.networkBoundResource\nimport com.example.recipebook.domain.model.Recipe\nimport com.example.recipebook.domain.repository.RecipeRepository\nimport com.example.recipebook.presentation.util.NetworkMonitor\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.map\nimport kotlinx.coroutines.flow.first\nimport javax.inject.Inject\n\nclass RecipeRepositoryImpl @Inject constructor(\n    private val api: RecipeApi,\n    private val dao: RecipeDao,\n    private val networkMonitor: NetworkMonitor\n): RecipeRepository {\n\n    override fun getAllRecipes(): Flow\u003cResource\u003cList\u003cRecipe\u003e\u003e\u003e \u003d\n        networkBoundResource(\n            query \u003d { dao.getAll().map { RecipeMapper.entityListToDomain(it) } },\n            fetch \u003d { api.getAll() },\n            saveFetchResult \u003d { response -\u003e\n                dao.insertAll(response.map { RecipeMapper.dtoToEntity(it) })\n            },\n            shouldFetch \u003d { cached -\u003e cached.isEmpty() },\n            networkMonitor \u003d networkMonitor\n        )\n\n    override fun searchRecipes(query: String): Flow\u003cList\u003cRecipe\u003e\u003e \u003d\n        dao.search(query).map { RecipeMapper.entityListToDomain(it) }\n\n    override fun getRecipeById(id: String): Flow\u003cRecipe\u003e \u003d\n        dao.getById(id).map { entity -\u003e\n            entity?.let { RecipeMapper.entityToDomain(it) }\n                ?: throw NoSuchElementException(\&quot;Recipe with id $id not found\&quot;)\n        }\n\n    override fun getFavoriteRecipes(): Flow\u003cList\u003cRecipe\u003e\u003e \u003d\n        dao.getFavorites().map { RecipeMapper.entityListToDomain(it) }\n\n    override suspend fun toggleFavorite(recipeId: String) {\n        val recipe \u003d dao.getById(recipeId).first()\n        recipe?.let {\n            dao.updateFavorite(recipeId, !it.isFavorite)\n        }\n    }\n}\n```\n\u003c/current_file\u003e\n\u003c/additional_data\u003e\n\u003cuser_query\u003e\nу меня есть проект. В нем есть чистая архитектура и почти все настроено для работы. Поправь в нем ошибки D:\\Stag\\app\\build\\tmp\\kapt3\\stubs\\debug\\com\\example\\recipebook\\data\\local\\CategoryDao.java:9: error: There is a problem with the query: [SQLITE_ERROR] SQL error or missing database (no such table: category)\n    public abstract kotlinx.coroutines.flow.Flow\u003cjava.util.List\u003ccom.example.recipebook.data.local.CategoryEntity\u003e\u003e getCategories();\n Далее доделай, чтобы оно загружало данные с интернета. Апи с которого будет все браться опписано здесь:@https://spoonacular.com/food-api/docs#Get-Random-Recipes\n\u003c/user_query\u003e&quot;}]},{&quot;role&quot;:&quot;assistant&quot;,&quot;content&quot;:[]}],&quot;draft_message&quot;:&quot;у меня есть проект. В нем есть чистая архитектура и почти все s&quot;}}" />
  </component>
</project>